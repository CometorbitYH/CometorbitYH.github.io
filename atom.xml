<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MY</title>
  
  <subtitle>IT IS MY LIFE</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://cometorbityh.github.io/"/>
  <updated>2019-11-06T09:06:21.843Z</updated>
  <id>https://cometorbityh.github.io/</id>
  
  <author>
    <name>杨涵</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Git基本操作</title>
    <link href="https://cometorbityh.github.io/2019/11/03/Git/"/>
    <id>https://cometorbityh.github.io/2019/11/03/Git/</id>
    <published>2019-11-03T12:00:46.000Z</published>
    <updated>2019-11-06T09:06:21.843Z</updated>
    
    <content type="html"><![CDATA[<p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/Git&GitHub.bmp" class="lozad"></p><h1 id="1-版本控制工具"><a href="#1-版本控制工具" class="headerlink" title="1. 版本控制工具"></a>1. 版本控制工具</h1><p>集中式版本控制工具：SVN、CVS、VSS…</p><p>分布式版本控制工具：Git、Mercurial、Bazaar、Darcs…</p><h1 id="2-Git"><a href="#2-Git" class="headerlink" title="2. Git"></a>2. Git</h1><h2 id="2-1-Git的优势"><a href="#2-1-Git的优势" class="headerlink" title="2.1. Git的优势"></a>2.1. Git的优势</h2><ul><li>大部分操作在本地完成，无需联网（分布式版本控制，相当于本地仓库，因此无需联网）</li><li>完整性保证</li><li>尽可能添加数据而不是删除或修改数据（删除修改都是不可逆的操作）</li><li>分支操作非常快加流畅</li><li>与Linux命令全面兼容（他俩一个爹：Linux）</li></ul><h2 id="2-2-Git结构"><a href="#2-2-Git结构" class="headerlink" title="2.2. Git结构"></a>2.2. Git结构</h2><img style="zoom: 50%;" data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191103202636.png" class="lozad"><p>##<strong>2.3. Git</strong> <strong>和代码托管中心</strong> </p><h3 id="2-3-1-代码托管中心的任务：维护远程库"><a href="#2-3-1-代码托管中心的任务：维护远程库" class="headerlink" title="2.3.1 代码托管中心的任务：维护远程库"></a>2.3.1 代码托管中心的任务：维护远程库</h3><ul><li><p>局域网环境下</p></li><li><p>GitLab 服务器 </p></li><li><p>外网环境下 </p><ul><li><p>GitHub </p></li><li><p>码云</p></li></ul></li></ul><h1 id="3-本地库及其命令"><a href="#3-本地库及其命令" class="headerlink" title="3. 本地库及其命令"></a>3. 本地库及其命令</h1><h2 id="3-1-本地库和远程库"><a href="#3-1-本地库和远程库" class="headerlink" title="3.1 本地库和远程库"></a>3.1 本地库和远程库</h2><p>（1）<strong>团队内部协作</strong></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191103222223.png" class="lozad"></p><p>（2）<strong>跨团队协作</strong></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191103222100.png" class="lozad"></p><p>##3.2. 本地库操作命令</p><h3 id="3-2-1-本地库初始化-签名"><a href="#3-2-1-本地库初始化-签名" class="headerlink" title="3.2.1 本地库初始化 + 签名"></a>3.2.1 本地库初始化 + 签名</h3><h4 id="本地库初始化"><a href="#本地库初始化" class="headerlink" title="本地库初始化"></a>本地库初始化</h4><p>命令：    <code>git init</code></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191103224243.png" class="lozad"></p><p>注意：.git 目录中存放的是本地库相关的子目录和文件，不要删除，也不要随意修改。 </p><h4 id="设置签名"><a href="#设置签名" class="headerlink" title="设置签名"></a>设置签名</h4><p><strong>作用：</strong>区分不同开发人员的身份</p><p><strong>格式：</strong>（举例，用户名与Email无实际联系）</p><ul><li>用户名：tom</li><li>Email：<a href="mailto:goodMorning@hello.com" target="_blank" rel="noopener">goodMorning@hello.com</a></li></ul><p><strong>注意：</strong>该签名和用于登录远程库（即代码托管中心）的账号密码无任何关系。</p><p><strong>命令：</strong></p><ul><li><p>项目级别/仓库级别：只在当前本地库范围生效（信息保存在<code>.git</code>目录下的<code>config</code>文件中）</p></li><li><p><code>git config user.name tom_pro</code> </p></li><li><p><code>git config user.email goodMorning_pro@hello.com</code> </p></li><li><p>系统用户级别：登录当前操作系统的用户范围 （信息保存位置：系统<code>~</code>家目录下的<code>.gitconfig</code>文件）</p></li><li><p><code>git config --global user.name tom_glb</code> </p></li><li><p><code>git config --global user.email goodMorning_glb@hello.com</code></p></li><li><p>级别优先级：</p><ul><li>就近原则（项目级别 &gt; 系统级别，二者都有时采用项目级别的签名）</li><li>若只有系统级别的签名：以系统用户级别的签名为准</li><li>当二者都没有是不允许的。</li></ul></li></ul><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191104163310.png" class="lozad"></p><p>###3.2.2. 基本操作</p><p>新建一个文件，工作区添加到暂存区，提交到本地库</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191104171255.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191104171645.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191104172119.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191104172318.png" class="lozad"></p><p><img alt="image-20191104172831494" data-src="C:%5CUsers%5CAdministrator.RG4-44%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20191104172831494.png" class="lozad"></p><p>修改一个文件，添加到暂存区，提交到本地库</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191104173348.png" class="lozad"></p><p>查看提交日志</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191104173800.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191104174651.png" class="lozad"></p><p><strong>前进后退版本</strong></p><p>索引值能前进后退版本，^和~只能后退版本。</p><p>该命令中存在hard参数，在reset命令中，还有soft和mixed参数</p><ul><li>soft参数：仅在本地库移动HEAD指针</li><li>mixed参数：在本地库移动HEAD指针，重置暂存区</li><li>hard参数：在本地库移动HEAD指针，重置暂存区，重置工作区</li></ul><p><img alt="image-20191104175559414" data-src="C:%5CUsers%5CAdministrator.RG4-44%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20191104175559414.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191104180134.png" class="lozad"></p><p><strong>删除文件找回</strong></p><p>前提：删除前，文件存在时的状态提交到了本地库 （之前已经把要找回的文件提交到了本地库）</p><p><code>git reset --hard [指针位置]</code>:</p><p>指针位置：</p><ul><li>删除操作已提交到本地库，指针位置指向历史记录（永久删除文件后找回）</li><li>删除操作未提交到本地库，指针位置指向HEAD（添加到暂存区的删除文件找回）</li></ul><p>永久删除文件后找回</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191105143653.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191105144037.png" class="lozad"></p><p>添加到暂存区的删除文件找回</p><p><img alt="image-20191105144540571" data-src="C:%5CUsers%5CAdministrator.RG4-44%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20191105144540571.png" class="lozad"></p><p>比较差异（比较不同版本的同一文件的差异）</p><p>git diff [文件名]：将工作区的文件和暂存区进行比较</p><p>git diff [本地库历史版本] [文件名]：将工作区中的文件和本地库历史记录比较</p><p>不带文件名 比较多个文件</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191105150327.png" class="lozad"></p><h3 id="3-2-3-分支管理"><a href="#3-2-3-分支管理" class="headerlink" title="3.2.3. 分支管理"></a>3.2.3. 分支管理</h3><p>查看分支 git branch -v</p><p>创建分支 git branch [分支名]</p><p>切换分支 git checkout [分支名]</p><p>合并分支</p><p>​    切换到接收修改的分支上（被合并的，变更内容的分支）</p><p>git checkout [被合并的分支名]</p><p>​    执行merge命令</p><p>git merge [有新内容的分支名]</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/image-20191105152050105.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191105152341.png" class="lozad"></p><p>分支冲突：2个分支同时修改了文件，git不清楚盖如何合并，导致分支冲突</p><p>解决：</p><ul><li>编辑文件，删除特殊符号，修改文件内容后保存退出；</li><li>文件添加到暂存区，提交到本地库（注意此步操作不加文件名）</li></ul><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191105153802.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191105154151.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191105154701.png" class="lozad"></p><p>#4. Git基本原理</p><h2 id="4-1-哈希算法"><a href="#4-1-哈希算法" class="headerlink" title="4.1. 哈希算法"></a>4.1. 哈希算法</h2><p>哈希是一系列的算法，不同hash算法的加密强度不同。哈希算法不可逆。</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191105155335.png" class="lozad"></p><p>Git底层采用的是SHA-1算法，哈希算法可以用来验证文件</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191105155620.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191105160220.png" class="lozad"></p><p>##4.2. Git 保存版本的机制</p><p><strong>Git</strong> <strong>的文件管理机制</strong> </p><p>Git 把数据看作是小型文件系统的一组快照。每次提交更新时 Git 都会对当前 的全部文件制作一个快照并保存这个快照的索引。为了高效，如果文件没有修改， Git 不再重新存储该文件，而是只保留一个链接指向之前存储的文件。所以 Git 的 工作方式可以称之为快照流。</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191105160429.png" class="lozad"></p><p><strong>Git</strong> <strong>文件管理机制细节</strong> </p><p> Git 的“提交对象”</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191105160522.png" class="lozad"></p><p>提交对象及其父对象形成的链条</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191105160542.png" class="lozad"></p><p><strong>Git</strong> <strong>分支管理机制</strong> </p><p><strong>5.3.1</strong> <strong>分支的创建</strong></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191105160828.png" class="lozad"></p><p><strong>分支的切换</strong></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191105160859.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191105160933.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191105160946.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191105161002.png" class="lozad"></p><p>总而言之，创建分支是创建新的指针，切换分支是切换指针的位置，因此非常高效</p><p>#5. 远程库操作命令</p><h2 id="5-1-GitHub创建仓库"><a href="#5-1-GitHub创建仓库" class="headerlink" title="5.1. GitHub创建仓库"></a>5.1. GitHub创建仓库</h2><p>1.注册账号并登录</p><p>2.创建仓库（远程库）</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191105162214.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191105162117.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191105162517.png" class="lozad"></p><h2 id="5-2-本地库推送到远程库"><a href="#5-2-本地库推送到远程库" class="headerlink" title="5.2. 本地库推送到远程库"></a>5.2. 本地库推送到远程库</h2><p>本地库连接远程库，执行推送操作</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191105163212.png" class="lozad"></p><p>刷新远程库，可以看到刚才提交的文件了，点击可查看内容</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191105163414.png" class="lozad"></p><p>##5.3. 从远程库克隆项目到本地</p><p>另一个人执行的克隆操作</p><p>复制地址</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191105163845.png" class="lozad"></p><p>克隆项目</p><p><img alt="image-20191105164424088" data-src="C:%5CUsers%5CAdministrator.RG4-44%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20191105164424088.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191105170638.png" class="lozad"></p><p>这样用户2就克隆了用户1的远程库到本地了。</p><p>##5.4. 修改内容重新推送到远程库</p><p>现在，用户2想修改用户1的内容并重新发回到用户1的本地库该怎么弄？</p><p>之前图里看到过，直接推送是不行的， 需要用户1批准用户2，邀请用户2加入团队成为团队成员才能进行推送操作。</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191105170859.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191105171135.png" class="lozad"></p><p><img alt="image-20191105171330106" data-src="C:%5CUsers%5CAdministrator.RG4-44%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20191105171330106.png" class="lozad"></p><p>此时用户1成功邀请2成为团队成员</p><p>用户2就可以推送操作了</p><p>###远程库修改的拉取</p><p>pull = fetch + merge 分为2步。git fetch [远程库地址别名] [远程分支名]</p><p>git merge  [远程库地址别名]/[远程分支名]</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191105172535.png" class="lozad"></p><p>##5.5. 协同开发的冲突的解决</p><p>当用户1和用户2同时修改了某个文件的同一位置时，分别推送到远程库会出现冲突，即先推送的能成功，后推送的失败，因为远程库根据哈希值比较，若不同则认为你的本地库不是最新的了，因此用户2需要先拉取到本地，进行内容的修改，再进行推送。</p><ul><li>如果不是基于 GitHub 远程库的最新版所做的修改，不能推送，必须先拉取。 </li><li>拉取下来后如果进入冲突状态，则按照“分支冲突解决”操作解决即可。 </li></ul><p>##5.6. 跨团队协作操作</p><p>用户1和用户2是团队A的，用户3是团队B的，现在A对需要把项目给B队去优化，应该怎么做？</p><p>首先团队B的成员要把团队A的远程库fork成自己的远程库，再克隆到本地，修改完成后push，发起pull request</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191105174617.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191105174723.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191105175605.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191105175649.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191105175738.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191105175919.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191105180018.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191105180118.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191105180326.png" class="lozad"></p><p>团队1接受pull request</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191105180525.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191105180801.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191105180934.png" class="lozad"></p><p>之后团队1就可以拉取远程库了。</p><h2 id="5-7-SSH免密登录"><a href="#5-7-SSH免密登录" class="headerlink" title="5.7. SSH免密登录"></a>5.7. SSH免密登录</h2><p>可以实现免GitHub账号登录，因此使用SSH可以免密登录，需要注意的是这样只能一个账号登陆</p><h1 id="6-Git图形化-lt-eclipse版-gt"><a href="#6-Git图形化-lt-eclipse版-gt" class="headerlink" title="6. Git图形化&lt;eclipse版&gt;"></a>6. Git图形化&lt;eclipse版&gt;</h1><p>##6.1. 新建项目提交到本地库（忽略特定文件）</p><p>以eclipse为例：</p><p>点击Window——&gt; Preferences ——&gt; Team——&gt; Git——&gt;Configuration</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191105220404.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191105220740.png" class="lozad"></p><p>新建一个Maven项目</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191105220909.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191105221719.png" class="lozad"></p><p>将eclipse工程初始化为本地库</p><p>右击工程——&gt;Team——&gt;Share Project ——&gt;Git</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191106152424.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191106152530.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191106152746.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191106153450.png" class="lozad"></p><p>解决追踪文件，首先要忽略一些特定文件</p><p><strong>概念：Eclipse 特定文件</strong> </p><p>这些都是 Eclipse 为了管理我们创建的工程而维护的文件，和开发的代码没有 直接关系。最好不要在 Git 中进行追踪，也就是把它们忽略。 </p><p>.classpath 文件 </p><p>.project 文件 </p><p>.settings 目录下所有文件 </p><p><strong>为什么要忽略 Eclipse 特定文件呢？</strong> </p><p>同一个团队中很难保证大家使用相同的 IDE 工具，而 IDE 工具不同时，相关工程特定文件就有可能不同。如果这些文件加入版本控制，那么开发时很可能需要为了这些文件解决冲突</p><p>在家目录的本机用户的<code>.gitconfig</code>同级目录下新建一个<code>java.gitignore</code>，该文件的内容位于 <a href="https://github.com/github/gitignore/blob/master/Java.gitignore" target="_blank" rel="noopener">https://github.com/github/gitignore/blob/master/Java.gitignore</a> </p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191106154726.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191106154458.png" class="lozad"></p><p>在<code>.gitconfig</code>中添加：</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191106154955.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191106155136.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191106155318.png" class="lozad"></p><p>这样，无论做任何版本操作，这些特定的文件都不会受任何干扰了</p><p>将项目添加到暂存区，右击项目——&gt;Team——&gt;add to Index</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191106155723.png" class="lozad"></p><p>将项目提交到本地库，右击项目——&gt;Team——&gt;commit</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191106155925.png" class="lozad"></p><p>若再添加新文件，可以直接对其commir，不用add。这就是图形化界面的优势</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191106160423.png" class="lozad"></p><h2 id="6-2-推送到远程库"><a href="#6-2-推送到远程库" class="headerlink" title="6.2. 推送到远程库"></a>6.2. 推送到远程库</h2><p>新建远程库，复制链接</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191106160700.png" class="lozad"></p><p>右击项目——&gt;Team——&gt;remote——&gt;push</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191106160900.png" class="lozad"></p><p>添加所有分支</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191106161031.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191106161205.png" class="lozad"></p><p>成功后，回到远程库可查看</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191106161355.png" class="lozad"></p><h2 id="6-3-克隆工程操作"><a href="#6-3-克隆工程操作" class="headerlink" title="6.3. 克隆工程操作"></a>6.3. 克隆工程操作</h2><p>右击空白处，import——&gt; Git——&gt;Project from Git——&gt;next——&gt;Clone URI——&gt;粘贴URI——&gt;master——&gt;next——&gt;更改保存路径——&gt;完成</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191106161630.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191106161745.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191106161850.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191106161936.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191106162213.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191106162420.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191106162438.png" class="lozad"></p><p>克隆结束后，发现项目文件不完整，因为之前忽略了一些特定文件，所以还需要一些操作</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191106162522.png" class="lozad"></p><p>右击项目，——&gt; configure ——&gt; convert to Maven Project，这样就能自动生成为Maven项目了。</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191106162701.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191106162906.png" class="lozad"></p><p>##6.4. 在eclipse解决冲突</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191106163325.png" class="lozad"></p><p>分别提交</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191106163629.png" class="lozad"></p><p>推送到远程库，第二个推送的人会产生冲突</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191106163805.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191106163931.png" class="lozad"></p><p>解决：用户2先拉取（pull）,右击项目——&gt;Team——&gt;pull</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191106164125.png" class="lozad"></p><p>右击冲突文件——&gt;Team——&gt;Merge Tool，可以看到对比</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191106164218.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191106164353.png" class="lozad"></p><p>打开提交界面</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191106164451.png" class="lozad"></p><p>此时文件图标恢复正常，到远程库即可。</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191106164643.png" class="lozad"></p><p>查看远程库，推送成功！</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191106164721.png" class="lozad"></p><h1 id="7-Git工作流（略）"><a href="#7-Git工作流（略）" class="headerlink" title="7. Git工作流（略）"></a>7. Git工作流（略）</h1><p><strong>概念</strong></p><p>在项目开发过程中使用 Git 的方式</p><p>分类</p><p><strong>集中式工作流</strong></p><p><strong>GitFlow</strong> <strong>工作流</strong></p><p><strong>Forking</strong> <strong>工作流</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img alt data-src=&quot;https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/Git&amp;GitHub.bmp&quot; class=&quot;lozad&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;1-版本控制工具&quot;&gt;&lt;a href=&quot;#1-
      
    
    </summary>
    
      <category term="Git" scheme="https://cometorbityh.github.io/categories/Git/"/>
    
    
      <category term="Git" scheme="https://cometorbityh.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>191101——SpringMVC小结（1）</title>
    <link href="https://cometorbityh.github.io/2019/11/01/191101%E2%80%94%E2%80%94SpringMVC%E5%B0%8F%E7%BB%93%EF%BC%881%EF%BC%89/"/>
    <id>https://cometorbityh.github.io/2019/11/01/191101——SpringMVC小结（1）/</id>
    <published>2019-11-01T01:18:58.000Z</published>
    <updated>2019-11-01T16:18:25.284Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2019-11-01记录帖"><a href="#2019-11-01记录帖" class="headerlink" title="2019.11.01记录帖"></a>2019.11.01记录帖</h1><h2 id="SpringMVC简介"><a href="#SpringMVC简介" class="headerlink" title="SpringMVC简介"></a>SpringMVC简介</h2><p>SpringMVC是Spring框架的一个模块</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191101092847.png" class="lozad"></p><h2 id="1-回忆MVC"><a href="#1-回忆MVC" class="headerlink" title="1. 回忆MVC"></a>1. 回忆MVC</h2><h2 id="2-第一个SpringMVC程序"><a href="#2-第一个SpringMVC程序" class="headerlink" title="2. 第一个SpringMVC程序"></a>2. 第一个SpringMVC程序</h2><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191102000840.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191102000406.png" class="lozad"></p><ul><li>若前端控制器没有配置init-param（没有说明springmvc配置文件的路径，有默认位置），则springmvc配置文件的默认位置应该在<code>WEB-INF</code>文件夹下，默认名为<code>springDispatcherServlet-servlet.xml</code>。</li></ul><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191102001417.png" class="lozad"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;2019-11-01记录帖&quot;&gt;&lt;a href=&quot;#2019-11-01记录帖&quot; class=&quot;headerlink&quot; title=&quot;2019.11.01记录帖&quot;&gt;&lt;/a&gt;2019.11.01记录帖&lt;/h1&gt;&lt;h2 id=&quot;SpringMVC简介&quot;&gt;&lt;a href=
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>记录独自做SSM论坛系统的错误、解决方案以及心得</title>
    <link href="https://cometorbityh.github.io/2019/10/27/%E8%AE%B0%E5%BD%95%E7%8B%AC%E8%87%AA%E5%81%9ASSM%E8%AE%BA%E5%9D%9B%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%94%99%E8%AF%AF%E3%80%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E4%BB%A5%E5%8F%8A%E5%BF%83%E5%BE%97/"/>
    <id>https://cometorbityh.github.io/2019/10/27/记录独自做SSM论坛系统的错误、解决方案以及心得/</id>
    <published>2019-10-27T08:55:47.000Z</published>
    <updated>2019-10-30T12:45:42.647Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-如何在文章下加入评论"><a href="#1-如何在文章下加入评论" class="headerlink" title="1. 如何在文章下加入评论"></a>1. 如何在文章下加入评论</h2><p>由于自己用的分页插件pageHelper只支持List，因此想用map插入实在很难解决（可能是我不懂哈哈），</p><p>之前试过4表查询，结果只能得到有评论的文章。</p><p>因此在纠结了2天之后，我终于找到方法，就是查到所有评论，在控制层中按照文章的序号加入对应的评论，这样我就可以把对应的评论加入到对应文章的List中，从而解决了使用插件的难题。很开心，这样在之后插入也可以一个模块一个模块加入到文章bean中。</p><h2 id="2-添加文章时出现400错误代码"><a href="#2-添加文章时出现400错误代码" class="headerlink" title="2. 添加文章时出现400错误代码"></a>2. 添加文章时出现400错误代码</h2><p>在点击提交添加的按钮那边，一直出现400，很着急，按照百度的说法，有很多原因，有写是因为Date类型格式无法识别的，有说是int与Integer未转换，我一一试了一遍。都不行。最后在谷歌浏览器的控制台发现：我遍历出来的文章类型是类型名，但是我数据库中文章有关类型的字段是类型ID，看到这里我真的感觉很尴尬，我仿佛已经看到我要重构项目的时候了，郁闷。为什么当初要用Mybatis逆向工程，啊啊啊啊！！！不过好在解决了这个问题，这样发帖子功能也实现了，虽然没实现添加图片的功能，不过这个功能先放一放，后面再写。</p><h2 id="3-添加文章时，类型错误"><a href="#3-添加文章时，类型错误" class="headerlink" title="3. 添加文章时，类型错误"></a>3. 添加文章时，类型错误</h2><p>在添加带图片的文章时，由于图片是file类型的，因此后台一直获取不到这个数据。找了很多方法，最后在Controller方法的参数前加上@requestParam注解得以解决。</p><h2 id="4-收藏文章的思路"><a href="#4-收藏文章的思路" class="headerlink" title="4. 收藏文章的思路"></a>4. 收藏文章的思路</h2><p>需求：点击收藏按钮时变红（收藏），再次点击收藏时变灰（取消收藏），并且显示当前收藏数</p><p>思路：</p><ul><li><p>先去数据库查出该文章被收藏的条目，在控制层中将其加入到各文章的LIst中，这样该文章的收藏数就是这些收藏条目的长度了。</p></li><li><p>在前端页面中，使用ajax遍历文章</p><ul><li>用户未登录，且当前文章不是是当前登录用户的，收藏按钮显示为“请登录”</li><li>用户已登录，且当前文章不是是当前登录用户的（ 当前登录的用户ID和文章ID ）<ol><li>未收藏（当前登录用户ID和文章ID  不等于  传到页面的Articles的该Article的Collection中的每条数据）<ol><li>点击时收藏（调用收藏操作，执行添加收藏方法，并使收藏按钮变红）</li></ol></li><li>已收藏（当前登录用户ID和文章ID      等于  传到页面的Articles的该Article的Collection中的某条数据）<ol><li>点击时取消收藏（调用取消收藏操作，执行取消收藏方法，并使收藏按钮变灰）</li></ol></li></ol></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-如何在文章下加入评论&quot;&gt;&lt;a href=&quot;#1-如何在文章下加入评论&quot; class=&quot;headerlink&quot; title=&quot;1. 如何在文章下加入评论&quot;&gt;&lt;/a&gt;1. 如何在文章下加入评论&lt;/h2&gt;&lt;p&gt;由于自己用的分页插件pageHelper只支持List，
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>191024——java多线程</title>
    <link href="https://cometorbityh.github.io/2019/10/24/191024%E2%80%94%E2%80%94java%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    <id>https://cometorbityh.github.io/2019/10/24/191024——java多线程/</id>
    <published>2019-10-24T08:04:02.000Z</published>
    <updated>2019-10-24T09:56:19.525Z</updated>
    
    <content type="html"><![CDATA[<p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191024160743.png" class="lozad"></p><h1 id="多线程概述"><a href="#多线程概述" class="headerlink" title="多线程概述"></a>多线程概述</h1><h2 id="1-1-概念"><a href="#1-1-概念" class="headerlink" title="1.1. 概念"></a>1.1. 概念</h2><p>进程：正在运行的程序</p><p>多进程：计算机同时支持运行多个进程，可以提高CPU的利用率</p><p>线程：一个进程可以执行多个任务，每一个任务都被称为一个线程，线程是程序的执行单元/执行路径。</p><p>多线程：提高应用程序的使用率。</p><p>多线程的意义：程序的执行本质是在抢CPU的资源，CPU的执行权。多进程是在抢占这个资源，而其中的某一个进程如果执行路径较多，就会有更高的几率抢到CPU执行权。但是线程的执行有<strong>随机性</strong>，无法保证一定抢到。</p><h2 id="1-2-JAVA程序运行原理"><a href="#1-2-JAVA程序运行原理" class="headerlink" title="1.2. JAVA程序运行原理"></a>1.2. JAVA程序运行原理</h2><p>Java命令会启动JVM，等于启动一个应用程序，即启动一个进程。该进程会自动启动一个“主线程”，该主线程会自动调用某个类的main方法，因此main方法运行在主线程中。</p><blockquote><p><strong>问：JVM的启动是单线程还是多线程的？</strong></p><p>答：多线程，JVM启动后最少会有２个线程，一个主线程，一个垃圾回收线程（为了防止出现内存溢出）。</p></blockquote><h1 id="多线程实现方案"><a href="#多线程实现方案" class="headerlink" title="多线程实现方案"></a>多线程实现方案</h1><p>Java提供类Thread来实现多线程，有2种方式实现多线程程序。</p><h2 id="2-1-方式1：继承Thread类"><a href="#2-1-方式1：继承Thread类" class="headerlink" title="2.1. 方式1：继承Thread类"></a>2.1. 方式1：继承Thread类</h2><h3 id="2-1-1-步骤："><a href="#2-1-1-步骤：" class="headerlink" title="2.1.1. 步骤："></a>2.1.1. 步骤：</h3><ul><li>自定义类MyThread继承Thread类</li><li>MyThread类重写run方法（只有run方法中的代码才会被线程执行）</li><li>创建MyThread对象</li><li>启动线程（start方法）</li></ul><blockquote><p> <strong>为什么启动线程是用start方法而不是run方法？</strong></p><p>​    因为run方法只是封装了被线程执行的代码，直接调用是普通方法。</p><p>​    而start方法是先启动了线程，再由jvm去调用该线程的run方法</p><p><strong>一个线程能调用2次start方法吗？</strong></p><p>​    不能。这样相当于启动了2次一样的线程，一个线程同时只能启动一次。</p><p><strong>如何获取和设置线程名称？</strong></p><p>​    public final String getName()：获取线程名称</p><p>​    线程类的无参构造方法创建的对象 + public final String setName()：设置线程名称</p><p>​    线程类的有参构造方法：设置线程名称</p><p><strong>如何获得main方法所在线程对象的名称？</strong></p><p>​    Thread.currentThread().getName();    //Thread.currentThread()返回当前正在执行的线程对象</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> demo.test.thread;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyThread</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//需要被执行的代码</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">0</span>;x&lt;<span class="number">100</span>;x++) &#123;</span><br><span class="line">System.out.println(getName()+<span class="string">"---"</span>+x);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">MyThread</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//有参构造方法：用来直接设置线程名称</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">MyThread</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>(name);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> demo.test.thread;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ThreadDemo</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//创建线程对象</span></span><br><span class="line">MyThread t1 = <span class="keyword">new</span> MyThread();</span><br><span class="line">MyThread t2 = <span class="keyword">new</span> MyThread();</span><br><span class="line"></span><br><span class="line"><span class="comment">//MyThread t3 = new MyThread("3号线程");</span></span><br><span class="line">t1.setName(<span class="string">"1号线程"</span>);</span><br><span class="line">t2.setName(<span class="string">"2号线程"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//启动线程</span></span><br><span class="line">t1.start();</span><br><span class="line">t2.start();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>###<img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191024165223.png" class="lozad"></p><h1 id="线程调度和线程控制"><a href="#线程调度和线程控制" class="headerlink" title="线程调度和线程控制"></a>线程调度和线程控制</h1><h2 id="3-1-线程调度"><a href="#3-1-线程调度" class="headerlink" title="3.1. 线程调度"></a>3.1. 线程调度</h2><p>线程调度有2种模型。</p><p>分时调度模型，所有线程轮流使用CPU的使用权，平均分配每个线程占用CPU的时间片</p><p><strong>抢占式调度模型（java使用的）</strong>：优先使优先级高的线程使用CPU，若优先级相同，则会随机选择一个。注意：优先级高的线程获取CPU时间片相对多一些。</p><blockquote><p><strong>如何设置线程的优先级？</strong></p><p>setPriority(10)：线程的默认优先级为5，其取值范围为[1，10]；</p><p>优先级仅仅表示线程获取的CPU的时间片的几率高。</p></blockquote><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191024173331.png" class="lozad"></p><h3 id="3-2-线程控制"><a href="#3-2-线程控制" class="headerlink" title="3.2. 线程控制"></a>3.2. 线程控制</h3><blockquote><p>线程睡眠：Thread.sleep(ms)</p><p>加入线程：join()：优先执行该线程</p><p>线程礼让：Thread.yield():暂停当前正在执行的线程对象，并执行其他线程对象（使线程执行更有规律，但无法保证一个线程执行一次）</p><p>守护线程：</p><p>中断线程：</p></blockquote><h1 id="线程生命周期"><a href="#线程生命周期" class="headerlink" title="线程生命周期"></a>线程生命周期</h1><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191024175547.png" class="lozad"></p><h1 id="线程同步"><a href="#线程同步" class="headerlink" title="线程同步"></a>线程同步</h1><h1 id="死锁"><a href="#死锁" class="headerlink" title="死锁"></a>死锁</h1><h1 id="线程间通信"><a href="#线程间通信" class="headerlink" title="线程间通信"></a>线程间通信</h1><h1 id="定时器的使用"><a href="#定时器的使用" class="headerlink" title="定时器的使用"></a>定时器的使用</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img alt data-src=&quot;https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191024160743.png&quot; class=&quot;lozad&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;多线程概述&quot;&gt;&lt;a href=&quot;#多
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>JAVA——集合类</title>
    <link href="https://cometorbityh.github.io/2019/10/23/JAVA%E2%80%94%E2%80%94%E9%9B%86%E5%90%88%E7%B1%BB/"/>
    <id>https://cometorbityh.github.io/2019/10/23/JAVA——集合类/</id>
    <published>2019-10-23T06:59:40.000Z</published>
    <updated>2019-10-23T10:29:08.254Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>集合：也称容器。是一种可以装任何类型的容器</p><p>集合与数组的区别：数组长度不可变。集合长度可变</p></blockquote><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191023171204.png" class="lozad"></p><h2 id="List"><a href="#List" class="headerlink" title="List"></a>List</h2><p>特点：有序可重复，容器保存的数据可以是多种类型的，但是当我们存储了很多不同类型的数据后，取数据就需要转成对应的类型，导致很麻烦，那么有没有什么办法可以规定该List只能存储一种数据类型呢？</p><p>我们使用<code>泛型</code>来规定数据类型，未规定泛型的集合里面可以存储任意类型的数据或对象，规定泛型之后，该集合只能存储对应数据类型的数据或对象。</p><p>注意：泛型可以用引用数据类型代替，而不是指基本数据类型。如<code>List&lt;Integer&gt;</code>而不是<code>List&lt;int&gt;</code>。</p><h3 id="ArrayList的常用方法"><a href="#ArrayList的常用方法" class="headerlink" title="ArrayList的常用方法"></a>ArrayList的常用方法</h3><p>常用方法：</p><p>增删改查：add(E e) ,remove(index),set(index,value),get(index),size()</p><p>其他方法：addAll(list2) 并集， removeAll(list2)差集， retainAll（list2) 交集</p><p>​                        indexOf() , lastIndexOf(), contains()  List=subList()</p><p>​                        isEmpty()   clear()   ensureCapacity()   iterator()迭代器</p><p>​                        toArray(T[] x);  TrimToSize();</p><p>add ——存</p><p>remove(int index)——删除对应索引的元素</p><p>set(int index,E value)——对应索引的元素改成新元素</p><p>inr size()——返回该list的有效元素个数</p><p><code>list1.addAll(Collection&lt;? extends E&gt; list2)</code>：将list2的所有元素添加到list1中，注意如果2个List都有泛型，那么list2的泛型应该与list1的泛型相同或是list1的泛型的子类，若泛型无关联，则无法添加。(并集)</p><p><code>list1.addAll(int index, Collection&lt;? extends E&gt; list2)</code>：将list2的所有元素添加到list1中，在索引处前开始插入。注意如果2个List都有泛型，那么list2的泛型应该与list1的泛型相同或是list1的泛型的子类，若泛型无关联，则无法添加。</p><p>E get(int index)——取出对应索引位置的元素，返回值为规定的泛型</p><p>clear()——清除list中的所有元素</p><p>boolean contains(Object)——判断是否包含该元素</p><p>int indexOf(Object o)——判断该元素第一次在list中出现的索引</p><p>int lastIndexOf(Object o)——判断该元素最后一次在list中出现的索引</p><p>boolean isEmpty() ——判断list是否为空</p><p>system.out.println(list)：遍历对象，说明List重写了toString()方法</p><p>Iterator iterator()——迭代器</p><p>removeAll(list2)——差集</p><p>retainAll(list2)——交集</p><table><thead><tr><th></th><th>ArrayList</th><th>Vector</th><th>LinkedList</th></tr></thead><tbody><tr><td>底层数据结构</td><td>动态数组（扩容1.5倍）</td><td>动态数组（扩容2倍）</td><td>双向链表</td></tr><tr><td>特点</td><td>有序可重复，适合遍历和查询</td><td>有序可重复，适合遍历和查询</td><td>有序可重复，适合增加和删除</td></tr><tr><td></td><td>线程不同步，安全性低，效率高</td><td>线程同步，安全性高，效率低</td><td></td></tr></tbody></table><h2 id="Set接口"><a href="#Set接口" class="headerlink" title="Set接口"></a>Set接口</h2><p>实现Collection接口，以value形式存在</p><p>无序无重复，</p><p>无序：set集合使用hash算法对元素进行排列，不是按照存储顺序排列，因此无序</p><table><thead><tr><th></th><th>HashSet</th><th>TreeSet</th></tr></thead><tbody><tr><td>底层数据结构</td><td>HashMap（散列表=数组+链表）</td><td>TreeMap（红黑二叉树）</td></tr><tr><td>特点</td><td>无序无重复</td><td>无序无重复</td></tr><tr><td></td><td>无重复原则有2个方法同时起作用<br>* equals   hashCode<br>* 默认比较2个对象的地址，若第二个对象地址与第一个一致，则不存入<br>* 若i想改变其规则，则可重写上述2个方法</td><td>无重复原则有1个方法在起作用<br>* compareTo<br><br>* 该方法并非所有对象都有，若想将1个对象存入TreeSet中，需让对象所属的类实现接口COmparable，再将compareTo重写，返回值int，负数靠前排布，整数排列靠后</td></tr></tbody></table><h2 id="Map-lt-K-V-gt-接口"><a href="#Map-lt-K-V-gt-接口" class="headerlink" title="Map&lt;K,V&gt;接口"></a>Map&lt;K,V&gt;接口</h2><p>Map，直译为地图，在Java中表示<code>映射</code>，可以通过某个key直接定位到对应的value值</p><p>存储的方式：键值对（key-value)，key无序无重复，value无序可重复。就像账号和密码，账号是唯一的，密码可能会一样。</p><h3 id="HashMap-lt-K-V-gt-类"><a href="#HashMap-lt-K-V-gt-类" class="headerlink" title="HashMap&lt;K,V&gt;类"></a>HashMap&lt;K,V&gt;类</h3><p>3.1. 所属包：java.util</p><p>3.2. 如何创建对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建一个HashMap对象，该方法：初始容器16，当容量达到容量的0.75倍时自动扩容</span></span><br><span class="line">HashMap&lt;Integer,String&gt; map = <span class="keyword">new</span> HashMap&lt;Integer,String&gt;();</span><br></pre></td></tr></table></figure><p>3.3. 基本方法</p><p>增删改查</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> demo.test.collection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestHashMap</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//创建一个HashMap对象，该方法：初始容器16，当容量达到容量的0.75倍时自动扩容</span></span><br><span class="line">HashMap&lt;Integer,String&gt; map = <span class="keyword">new</span> HashMap&lt;Integer,String&gt;();</span><br><span class="line"></span><br><span class="line"><span class="comment">/*==== 增删改查 ====*/</span></span><br><span class="line">map.put(<span class="number">1</span>, <span class="string">"aaa"</span>);</span><br><span class="line">map.put(<span class="number">4</span>, <span class="string">"ddd"</span>);</span><br><span class="line">map.put(<span class="number">2</span>, <span class="string">"aaa"</span>);<span class="comment">//key不同，value相同</span></span><br><span class="line">map.put(<span class="number">3</span>, <span class="string">"bbb"</span>);</span><br><span class="line">map.put(<span class="number">3</span>, <span class="string">"xxx"</span>);<span class="comment">//key相同，value不同</span></span><br><span class="line">System.out.println(map);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment"> *  无序：存元素的顺序与取元素的顺序无关</span></span><br><span class="line"><span class="comment">   key不能重复：若重复，则后添加的覆盖前添加的</span></span><br><span class="line"><span class="comment">   value可重复：不同的key可以有相同的value</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line">map.remove(<span class="number">3</span>);</span><br><span class="line">map.put(<span class="number">2</span>, <span class="string">"我是2号key"</span>);</span><br><span class="line">System.out.println(<span class="string">"map的有效元素个数："</span>+map.size());</span><br><span class="line">System.out.println(map);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*==== 遍历 ====*/</span></span><br><span class="line"><span class="comment">//获取map集合的全部key</span></span><br><span class="line">Set&lt;Integer&gt; keys = map.keySet();</span><br><span class="line"><span class="comment">//通过迭代器遍历keys</span></span><br><span class="line">Iterator&lt;Integer&gt; it = keys.iterator();</span><br><span class="line"><span class="keyword">while</span>(it.hasNext()) &#123;</span><br><span class="line">Integer key = it.next();</span><br><span class="line">String value  = map.get(key);</span><br><span class="line">System.out.println(key+<span class="string">"-----"</span>+value);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191023182851.png" class="lozad"></p><p>其他方法</p><p>​    </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;集合：也称容器。是一种可以装任何类型的容器&lt;/p&gt;
&lt;p&gt;集合与数组的区别：数组长度不可变。集合长度可变&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt data-src=&quot;https://yanghanblog.oss-cn-hang
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>SSM图片上传并回显</title>
    <link href="https://cometorbityh.github.io/2019/10/19/SSM%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0%E5%B9%B6%E5%9B%9E%E6%98%BE/"/>
    <id>https://cometorbityh.github.io/2019/10/19/SSM图片上传并回显/</id>
    <published>2019-10-19T15:27:08.000Z</published>
    <updated>2019-10-20T04:26:26.653Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p> 最近做一个SSM项目需要用到图片上传，在网上找了很多教程，配置了几遍，终于弄出来了，在此记录一贴留念。</p><p>本文使用的工具是idea，数据库是Mysql，框架是SSM。</p></blockquote><h2 id="1-项目结构"><a href="#1-项目结构" class="headerlink" title="1. 项目结构"></a>1. 项目结构</h2><p>新建一个maven项目，进行ssm整合之后，添加以下文件：</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191019234811.png" class="lozad"></p><h2 id="2-前期准备"><a href="#2-前期准备" class="headerlink" title="2. 前期准备"></a>2. 前期准备</h2><p>在本地找个盘建个文件夹用来存放图片，如我在E盘下新建文件夹“upload”（忽略图片，测试时用的）:</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191019235226.png" class="lozad"></p><p>idea创建好一个Maven项目，配置好Tomcat，将放图片的文件夹也加入：</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/1571500756410.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191019235951.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191020000323.png" class="lozad"><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191020121117.png" class="lozad"></p><p>当启动tomcat时，会部署2个目录分支，这样前期工作就准备好了。</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191020000137.png" class="lozad"></p><h2 id="3-新建数据库"><a href="#3-新建数据库" class="headerlink" title="3. 新建数据库"></a>3. 新建数据库</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`product`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`product`</span> (</span><br><span class="line">  <span class="string">`pid`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`pimage`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`pid`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">6</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br></pre></td></tr></table></figure><h2 id="4-具体代码"><a href="#4-具体代码" class="headerlink" title="4. 具体代码"></a>4. 具体代码</h2><h3 id="1-pom-xml"><a href="#1-pom-xml" class="headerlink" title="1. pom.xml"></a>1. pom.xml</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 上传下载需要涉及到的jar包 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/commons-io/commons-io --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-SpringMVC-xml"><a href="#2-SpringMVC-xml" class="headerlink" title="2. SpringMVC.xml"></a>2. SpringMVC.xml</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 定义文件上传解析器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"multipartResolver"</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.multipart.commons.CommonsMultipartResolver"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 设定默认编码 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"defaultEncoding"</span> <span class="attr">value</span>=<span class="string">"UTF-8"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 设定文件上传的最大值5MB，5*1024*1024 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxUploadSize"</span> <span class="attr">value</span>=<span class="string">"5242880"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 其他的大家可以自行配置，不影响主功能--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-Product-java"><a href="#3-Product-java" class="headerlink" title="3. Product.java"></a>3. Product.java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.young.bean;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Product</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer pid;</span><br><span class="line">    <span class="keyword">private</span> String pimage;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getPid</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> pid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPid</span><span class="params">(Integer pid)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.pid = pid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPimage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> pimage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPimage</span><span class="params">(String pimage)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.pimage = pimage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Product [pid="</span> + pid + <span class="string">", pimage="</span> + pimage + <span class="string">"]"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-ProductMapper-xml"><a href="#4-ProductMapper-xml" class="headerlink" title="4. ProductMapper.xml"></a>4. ProductMapper.xml</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.young.dao.ProductMapper"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 添加商品图片 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"save"</span> <span class="attr">parameterType</span>=<span class="string">"com.young.bean.Product"</span> &gt;</span></span><br><span class="line">        insert into product(pimage) values (#&#123;pimage&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 查询商品--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"list"</span> <span class="attr">resultType</span>=<span class="string">"com.young.bean.Product"</span>&gt;</span></span><br><span class="line">        select * from product</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-ProductMapper-java"><a href="#5-ProductMapper-java" class="headerlink" title="5.ProductMapper.java"></a>5.ProductMapper.java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.young.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.young.bean.Product;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ProductMapper</span> </span>&#123;</span><br><span class="line">    <span class="comment">//保存商品</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(Product product)</span></span>;</span><br><span class="line">    <span class="comment">//查询商品</span></span><br><span class="line">    <span class="function">List&lt;Product&gt; <span class="title">list</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-ProductService-java"><a href="#6-ProductService-java" class="headerlink" title="6. ProductService.java"></a>6. ProductService.java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.young.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.young.bean.Product;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ProductService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Product&gt; <span class="title">list</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(Product product)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-ProductServiceImpl-java"><a href="#7-ProductServiceImpl-java" class="headerlink" title="7. ProductServiceImpl.java"></a>7. ProductServiceImpl.java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.young.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.young.bean.Product;</span><br><span class="line"><span class="keyword">import</span> com.young.dao.ProductMapper;</span><br><span class="line"><span class="keyword">import</span> com.young.service.ProductService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.ModelMap;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartFile;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProductServiceImpl</span> <span class="keyword">implements</span> <span class="title">ProductService</span> </span>&#123;</span><br><span class="line">    <span class="comment">//注入ProductMapper</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ProductMapper productMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Product&gt; <span class="title">list</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> productMapper.list();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(Product product)</span> </span>&#123;</span><br><span class="line">        productMapper.save(product);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-ProductController-java"><a href="#8-ProductController-java" class="headerlink" title="8.ProductController.java"></a>8.ProductController.java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.young.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.young.bean.Product;</span><br><span class="line"><span class="keyword">import</span> com.young.service.ProductService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.ModelMap;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartFile;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProductController</span> </span>&#123;</span><br><span class="line">    <span class="comment">//注入ProductService</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ProductService productService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/list.do"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">listUser</span><span class="params">( Model model)</span></span>&#123;</span><br><span class="line">        List&lt;Product&gt; list= productService.list();</span><br><span class="line">        model.addAttribute(<span class="string">"list"</span>,list);</span><br><span class="line">        System.out.println(list);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"list"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/addProduct.do"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">fileUpload</span><span class="params">(MultipartFile file,Product product, ModelMap map)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 上传图片</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="comment">//图片上传成功后，将图片的地址写到数据库</span></span><br><span class="line">        String filePath = <span class="string">"E:\\upload"</span>;<span class="comment">//保存图片的路径,tomcat中有配置</span></span><br><span class="line">        <span class="comment">//获取原始图片的拓展名</span></span><br><span class="line">        String originalFilename = file.getOriginalFilename();</span><br><span class="line">        <span class="comment">//新的文件名字，使用uuid随机生成数+原始图片名字，这样不会重复</span></span><br><span class="line">        String newFileName = UUID.randomUUID()+<span class="string">"_"</span>+originalFilename;</span><br><span class="line">          <span class="comment">//封装上传文件位置的全路径，就是硬盘路径+文件名</span></span><br><span class="line">        File targetFile = <span class="keyword">new</span> File(filePath,newFileName);</span><br><span class="line">        <span class="comment">//把本地文件上传到已经封装好的文件位置的全路径就是上面的targetFile</span></span><br><span class="line">        file.transferTo(targetFile);</span><br><span class="line">        product.setPimage(newFileName);<span class="comment">//文件名保存到实体类对应属性上</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 保存商品</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        productService.save(product);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"redirect:/list.do"</span>; <span class="comment">//重定向到查询</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="9-index-jsp"><a href="#9-index-jsp" class="headerlink" title="9. index.jsp"></a>9. index.jsp</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action=<span class="string">"addProduct.do"</span> method=<span class="string">"post"</span> enctype=<span class="string">"multipart/form-data"</span>&gt;</span><br><span class="line">    图片：&lt;input type=<span class="string">"file"</span> name=<span class="string">"file"</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">"submit"</span> value=<span class="string">"提交"</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="10-list-jsp"><a href="#10-list-jsp" class="headerlink" title="10. list.jsp"></a>10. list.jsp</h3><p>这里有一个地方需要注意：此处填选的是tomcat中加入部署的文件夹时起的名字</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191020122600.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191020121117.png" class="lozad"></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">"java"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span></span><br><span class="line">         pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span><br><span class="line">&lt;%@ taglib prefix=<span class="string">"c"</span> uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span><br><span class="line">&lt;!DOCTYPE html PUBLIC <span class="string">"-//W3C//DTD HTML 4.01 Transitional//EN"</span> <span class="string">"http://www.w3.org/TR/html4/loose.dtd"</span>&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"Content-Type"</span> content=<span class="string">"text/html; charset=UTF-8"</span>&gt;</span><br><span class="line">    &lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"https://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap.min.css"</span>/&gt;</span><br><span class="line">    &lt;script src="https://cdn.bootcss.com/bootstrap/3.3.7/js/bootstrap.min.js"&gt;&lt;/script&gt;</span><br><span class="line">    &lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">    &lt;style type=<span class="string">"text/css"</span>&gt;</span><br><span class="line">        #images&#123;</span><br><span class="line">            width: <span class="number">50</span>px;</span><br><span class="line">            height: <span class="number">50</span>px;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;table <span class="class"><span class="keyword">class</span></span>=<span class="string">"table table-bordered table-hover"</span>&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;th&gt;序号&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;图片&lt;/th&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;c:forEach items=<span class="string">"$&#123;list&#125;"</span> <span class="keyword">var</span>=<span class="string">"product"</span> &gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;th&gt;$&#123;product.pid &#125;&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;&lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;product.pimage !=null &#125;"</span>&gt;</span><br><span class="line">                &lt;img id=<span class="string">"images"</span> alt=<span class="string">""</span> src=<span class="string">"/upload/$&#123;product.pimage &#125;"</span>&gt;</span><br><span class="line">            &lt;/c:if&gt; &lt;/th&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    &lt;/c:forEach&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="5-测试结果"><a href="#5-测试结果" class="headerlink" title="5. 测试结果"></a>5. 测试结果</h2><p>启动tomcat，开始测试</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191020120515.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191020120243.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191020120336.png" class="lozad"></p><p><strong>至此，大功告成！</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt; 最近做一个SSM项目需要用到图片上传，在网上找了很多教程，配置了几遍，终于弄出来了，在此记录一贴留念。&lt;/p&gt;
&lt;p&gt;本文使用的工具是idea，数据库是Mysql，框架是SSM。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;1-项目结构&quot;
      
    
    </summary>
    
      <category term="SSM" scheme="https://cometorbityh.github.io/categories/SSM/"/>
    
    
      <category term="SSM文件上传" scheme="https://cometorbityh.github.io/tags/SSM%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://cometorbityh.github.io/2019/10/17/JAVA%E2%80%94%E2%80%94%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    <id>https://cometorbityh.github.io/2019/10/17/JAVA——多线程/</id>
    <published>2019-10-17T12:04:38.212Z</published>
    <updated>2019-10-18T07:40:29.836Z</updated>
    
    <content type="html"><![CDATA[<p>2</p><h1 id="1-概念理解"><a href="#1-概念理解" class="headerlink" title="1. 概念理解"></a>1. 概念理解</h1><h2 id="1-1-并发与并行"><a href="#1-1-并发与并行" class="headerlink" title="1.1. 并发与并行"></a>1.1. 并发与并行</h2><h2 id="1-2-程序，进程，线程"><a href="#1-2-程序，进程，线程" class="headerlink" title="1.2. 程序，进程，线程"></a>1.2. 程序，进程，线程</h2><h2 id="1-3-线程调度，分时调度"><a href="#1-3-线程调度，分时调度" class="headerlink" title="1.3. 线程调度，分时调度"></a>1.3. 线程调度，分时调度</h2><table><thead><tr><th></th><th>描述</th><th>举例</th></tr></thead><tbody><tr><td>并发</td><td>多个事件交替执行(单核)，效率低</td><td>一个人同时吃2个包子，一个包子吃一口</td></tr><tr><td>并行</td><td>多个事件同时执行(多核)，效率高</td><td>两个人吃2个包子</td></tr><tr><td></td><td></td><td></td></tr><tr><td>程序</td><td></td><td>QQ程序</td></tr><tr><td>进程</td><td>运行中的(进入到内存中)应用程序</td><td>开启1个QQ或多个QQ，这些QQ叫进程</td></tr><tr><td>线程</td><td>是进程的一个执行单元。进程中的操作</td><td>360可以同时清理垃圾，扫描病毒，这些操作都叫线程</td></tr><tr><td>多线程</td><td>效率高，线程之间互不影响</td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td><strong>线程调度（2种）</strong></td><td></td><td></td></tr><tr><td>分时调度</td><td>每个线程占用的时间相等</td><td></td></tr><tr><td>抢占式调度(java采用的)</td><td>优先级越高的线程被执行的几率就大</td><td></td></tr></tbody></table><p> 一个程序至少包含1个进程，一个进程可以包含多个线程 </p><h1 id="2-多线程的创建方式"><a href="#2-多线程的创建方式" class="headerlink" title="2. 多线程的创建方式"></a>2. 多线程的创建方式</h1><p> java中的程序只有1个线程，从main方法开始执行，即主线程；</p><p>当程序之间有一个异常时，后面的程序都不会执行到，因此我们需要引入多线程来执行异常后的代码。 </p><h2 id="2-1-创建Thread的子类"><a href="#2-1-创建Thread的子类" class="headerlink" title="2.1. 创建Thread的子类"></a>2.1. 创建Thread的子类</h2><h2 id="2-2-实现Runnable接口"><a href="#2-2-实现Runnable接口" class="headerlink" title="2.2.实现Runnable接口"></a>2.2.实现Runnable接口</h2><ul><li><p>创建一个Runnable的实现类</p></li><li><p>在实现类中重写Runnable接口的run方法，设置线程任务</p></li><li><p>创建一个Runnable接口的实现类对象</p></li><li><p>创建Thread类对象，构造方法中传递Runnable接口的实现类对象</p></li><li><p>调用Thread类中的start方法，开启新的线程执行run方法</p></li></ul><h2 id="2-3-Thread和Runnable的区别"><a href="#2-3-Thread和Runnable的区别" class="headerlink" title="2.3. Thread和Runnable的区别"></a>2.3. Thread和Runnable的区别</h2><p>一个类继承Thread类，则不适合资源共享</p><p>一个类实现Runnable接口，很容易就可实现资源共享</p><p>实现Runnable接口创建多线程程序的好处：</p><ul><li>适合多个相同的程序代码的线程去<code>共享</code>同一个资源</li><li>可<code>避免Java的单继承</code>的局限性（实现Runnable接口还可以实现其他类或接口）</li><li>增加程序的健壮性，实现<code>解耦</code>操作，代码可被多个线程共享，代码和线程独立<ul><li>实现Runnable，把设置线程任务和开启新线程进行分离（解耦）</li><li>实现类重写了run方法：用来设置线程任务</li><li>创建Thread类对象，调用start方法，用来开启新线程</li></ul></li><li>线程池只能放入实现Runnable或Callable类的线程，而不能直接放入继承Thread的类</li></ul><p>在Java中，程序每次运行至少启动2个线程，一个main线程。一个是垃圾收集线程，</p><p>因为每当使用Java命令执行一个类时，实际上都会启动一个JVM，每一个JVM其实就是在操作系统中启动了一个进程。</p><h2 id="2-4-用匿名内部类来创建线程"><a href="#2-4-用匿名内部类来创建线程" class="headerlink" title="2.4. 用匿名内部类来创建线程"></a>2.4. 用匿名内部类来创建线程</h2><p>匿名：没有名字</p><p>内部类：写在其他类内部的类</p><p>匿名内部类的作用：简化代码</p><ul><li>把【子类继承父类，重写父类的方法，创建子类对象】合成一步完成</li><li>把【实现类实现类接口，重写接口中的方法。创建实现类对象】合成异步完成</li></ul><p>匿名内部类的最终产物：子类/实现类对象，而这个类没有名字</p><p>匿名内部类的格式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> 父类/接口()&#123;</span><br><span class="line"><span class="comment">//重写父类/接口的方法</span></span><br><span class="line">&#125;；</span><br></pre></td></tr></table></figure><p>匿名内部类创建线程的步骤：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test.ThreadDemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InnerClassThread</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*----------------------------------*/</span></span><br><span class="line"><span class="comment">//new 父类Thread</span></span><br><span class="line"><span class="comment">//new MyThread().start();</span></span><br><span class="line"><span class="keyword">new</span> Thread() &#123;</span><br><span class="line"><span class="comment">//重写run方法，设置线程任务</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++) &#123;</span><br><span class="line">System.out.println(Thread.currentThread().getName()+<span class="string">"--&gt;Thread"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;.start();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*----------------------------------*/</span></span><br><span class="line"><span class="comment">//new 接口Runnable</span></span><br><span class="line"><span class="comment">//Runnable r = new RunnableTest(); 创建Runnable接口的实现类对象</span></span><br><span class="line">Runnable r = <span class="keyword">new</span> Runnable() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++) &#123;</span><br><span class="line">System.out.println(Thread.currentThread().getName()+<span class="string">"--&gt;Runnable"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//创建Thread类对象，构造方法床底Runnable接口的实现类对象</span></span><br><span class="line"><span class="comment">//调用start方法开启线程</span></span><br><span class="line"><span class="keyword">new</span> Thread(r).start();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*----------------------------------*/</span></span><br><span class="line"><span class="comment">//简化Runnable</span></span><br><span class="line"><span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++) &#123;</span><br><span class="line">System.out.println(Thread.currentThread().getName()+<span class="string">"--&gt;Runnable01"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;).start();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191017222321.png" class="lozad"></p><h1 id="3-线程安全"><a href="#3-线程安全" class="headerlink" title="3. 线程安全"></a>3. 线程安全</h1><h2 id="3-1-线程安全问题"><a href="#3-1-线程安全问题" class="headerlink" title="3.1. 线程安全问题"></a>3.1. 线程安全问题</h2><p>当多个线程访问共享的资源时，这些线程会抢占cpu的执行权，就会产生线程安全问题。</p><p>例如3个售票处同时售卖100张票，但会卖到同一张票，而一张票只能卖给一个人，此时的售票员多尴尬啊。</p><p>以下程序中不仅出现重复卖票，还出现不存在的票。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test.ThreadDemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RunnableImpl</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义票数，这是一个共享的资源</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> ticket=<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//模拟售票</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span><br><span class="line"><span class="keyword">if</span>(ticket&gt;<span class="number">0</span>) &#123;</span><br><span class="line">System.out.println(Thread.currentThread().getName()+<span class="string">"第"</span>+ticket+<span class="string">"张票已出售！"</span>);</span><br><span class="line">ticket--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test.ThreadDemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ThreadSecurityDemo</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建实现Runnable接口的实现类对象</span></span><br><span class="line">RunnableImpl run = <span class="keyword">new</span> RunnableImpl();</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义Thread类的子类对象，其构造方法的参数为实现Runnable接口的实现类对象</span></span><br><span class="line">Thread t1 = <span class="keyword">new</span> Thread(run);</span><br><span class="line">Thread t2 = <span class="keyword">new</span> Thread(run);</span><br><span class="line">Thread t3 = <span class="keyword">new</span> Thread(run);</span><br><span class="line"></span><br><span class="line"><span class="comment">//开启多线程</span></span><br><span class="line">t1.start();</span><br><span class="line">t2.start();</span><br><span class="line">t3.start();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/1571324287236.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191017230417.png" class="lozad"></p><h2 id="3-2-解决线程安全问题（3种方法）"><a href="#3-2-解决线程安全问题（3种方法）" class="headerlink" title="3.2. 解决线程安全问题（3种方法）"></a>3.2. 解决线程安全问题（3种方法）</h2><h3 id="（1）同步代码块"><a href="#（1）同步代码块" class="headerlink" title="（1）同步代码块"></a>（1）同步代码块</h3><p><code>synchronized</code>关键字可用于方法中的某个区块中，表示只对该区块的资源进行互斥访问。</p><p>格式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">synchronized</span>(同步锁对象)&#123;</span><br><span class="line">    可能会出现线程安全问题的代码（共享数据的代码）</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>锁对象：锁对象可以使用任意的对象，多个线程使用的锁对象必须使同一个，</p><p>锁对象的作用：把同步代码块锁住，只允许一个线程在同步代码块中执行。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test.ThreadDemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RunnableImpl</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义一个票数，这是一个共享的资源</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> ticket=<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义锁对象</span></span><br><span class="line">Object obj = <span class="keyword">new</span> Object();</span><br><span class="line"></span><br><span class="line"><span class="comment">//模拟售票</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//同步代码块</span></span><br><span class="line"><span class="keyword">synchronized</span>(obj) &#123;</span><br><span class="line"><span class="keyword">if</span>(ticket&gt;<span class="number">0</span>) &#123;</span><br><span class="line"><span class="comment">//提高安全问题出现的概率，使程序睡眠</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Thread.sleep(<span class="number">5</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//售票</span></span><br><span class="line">System.out.println(Thread.currentThread().getName()+<span class="string">"第"</span>+ticket+<span class="string">"张票已出售！"</span>);</span><br><span class="line">ticket--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191017234134.png" class="lozad"></p><h3 id="（2）同步方法"><a href="#（2）同步方法" class="headerlink" title="（2）同步方法"></a>（2）同步方法</h3><p><code>synchronized</code>关键字修饰的方法，当某个线程执行该方法时，锁住代码，其他线程只能在方法外等候。</p><table><thead><tr><th>同步方法</th><th>格式</th><th>锁对象</th><th>原因</th></tr></thead><tbody><tr><td>非静态同步方法</td><td>修饰符 synchronized 返回值类型 方法名(参数列表){<br>    //需要同步的代码<br>}</td><td>this</td><td></td></tr><tr><td>静态同步方法</td><td>修饰符  static synchronized 返回值类型 方法名(参数列表){<br>    //需要同步的代码<br>}</td><td>本类的class文件对象<br></td><td>因为this是创建对象后产生的，而静态方法优先于对象，因此静态同步方法的锁对象是本类的class文件对象</td></tr></tbody></table><h4 id="非静态同步方法"><a href="#非静态同步方法" class="headerlink" title="非静态同步方法"></a>非静态同步方法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test.ThreadDemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RunnableImpl</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义一个票数，这是一个共享的资源</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> ticket=<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义锁对象</span></span><br><span class="line">Object obj = <span class="keyword">new</span> Object();</span><br><span class="line"></span><br><span class="line"><span class="comment">//模拟售票</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"this___"</span>+<span class="keyword">this</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span><br><span class="line"></span><br><span class="line">saleTicket();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//同步方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">saleTicket</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(ticket&gt;<span class="number">0</span>) &#123;</span><br><span class="line"><span class="comment">//提高安全问题出现的概率，使程序睡眠</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Thread.sleep(<span class="number">5</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//售票</span></span><br><span class="line">System.out.println(Thread.currentThread().getName()+<span class="string">"第"</span>+ticket+<span class="string">"张票已出售！"</span>);</span><br><span class="line">ticket--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test.ThreadDemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ThreadSecurityDemo</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建实现Runnable接口的实现类对象</span></span><br><span class="line">RunnableImpl run = <span class="keyword">new</span> RunnableImpl();</span><br><span class="line">System.out.println(<span class="string">"run___"</span>+run);</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义Thread类的子类对象，其构造方法的参数为实现Runnable接口的实现类对象</span></span><br><span class="line">Thread t1 = <span class="keyword">new</span> Thread(run);</span><br><span class="line">Thread t2 = <span class="keyword">new</span> Thread(run);</span><br><span class="line">Thread t3 = <span class="keyword">new</span> Thread(run);</span><br><span class="line"></span><br><span class="line"><span class="comment">//开启多线程</span></span><br><span class="line">t1.start();</span><br><span class="line">t2.start();</span><br><span class="line">t3.start();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>非静态同步方法的锁对象是对应的Runnable接口的实现类对象，即this</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191018000622.png" class="lozad"></p><h4 id="静态同步方法"><a href="#静态同步方法" class="headerlink" title="静态同步方法"></a>静态同步方法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test.ThreadDemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RunnableImpl</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义一个票数，这是一个共享的资源</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> ticket=<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义锁对象</span></span><br><span class="line">Object obj = <span class="keyword">new</span> Object();</span><br><span class="line"></span><br><span class="line"><span class="comment">//模拟售票</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"this___"</span>+<span class="keyword">this</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span><br><span class="line"></span><br><span class="line">saleTicket();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//同步方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">saleTicket</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(ticket&gt;<span class="number">0</span>) &#123;</span><br><span class="line"><span class="comment">//提高安全问题出现的概率，使程序睡眠</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Thread.sleep(<span class="number">5</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//售票</span></span><br><span class="line">System.out.println(Thread.currentThread().getName()+<span class="string">"第"</span>+ticket+<span class="string">"张票已出售！"</span>);</span><br><span class="line">ticket--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191018143055.png" class="lozad"></p><h3 id="（3）Lock锁"><a href="#（3）Lock锁" class="headerlink" title="（3）Lock锁"></a>（3）Lock锁</h3><p>java.util.concurrent/locks.Lock接口</p><p>Lock实现提供了比使用synchronized方法和语句可获得的更广泛的锁定操作</p><p>Lock接口中的方法:</p><ul><li>void lock()————————获取锁</li><li>void unlock()————————释放锁</li></ul><p>Lock接口有个实现类：</p><p>java.util.concurrent.locks.ReentrantLock</p><p>使用步骤：</p><ul><li>在成员位置创建ReentrantLock对象</li><li>在可能会出现安全问题的代码前调用Lock接口的lock方法来获取锁</li><li>在可能会出现安全问题的代码后调用Lock接口的unlock方法来释放锁</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test.ThreadDemo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.locks.Lock;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.locks.ReentrantLock;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RunnableImpl</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义一个票数，这是一个共享的资源</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> ticket=<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*1.创建ReentrantLock对象*/</span></span><br><span class="line">Lock l =<span class="keyword">new</span> ReentrantLock();</span><br><span class="line"></span><br><span class="line"><span class="comment">//模拟售票</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"this___"</span>+<span class="keyword">this</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*2. 在线程安全代码之前获取锁*/</span></span><br><span class="line">l.lock();</span><br><span class="line"><span class="keyword">if</span>(ticket&gt;<span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">//睡眠，相当于冷却</span></span><br><span class="line">Thread.sleep(<span class="number">5</span>);</span><br><span class="line"><span class="comment">//售票</span></span><br><span class="line">System.out.println(Thread.currentThread().getName()+<span class="string">"第"</span>+ticket+<span class="string">"张票已出售！"</span>);</span><br><span class="line">ticket--;</span><br><span class="line">&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;<span class="keyword">finally</span> &#123;</span><br><span class="line"><span class="comment">/*3. 在线程安全代码之后释放锁*/</span></span><br><span class="line">l.unlock();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191018144701.png" class="lozad"></p><h1 id="4-线程状态"><a href="#4-线程状态" class="headerlink" title="4. 线程状态"></a>4. 线程状态</h1><p>Thread的内部类State描述了线程的6种状态</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191018145256.png" class="lozad"></p><h2 id="4-1-TimedWaiting（计时等待）"><a href="#4-1-TimedWaiting（计时等待）" class="headerlink" title="4.1. TimedWaiting（计时等待）"></a>4.1. TimedWaiting（计时等待）</h2><p>调用sleep()，使线程进入睡眠状态；</p><p>调用wait(long m)，等待毫秒值结束后，若没有被notify()唤醒，则自动醒来，线程进入运行状态或阻塞状态</p><h2 id="4-2-BLOCKED（锁阻塞）"><a href="#4-2-BLOCKED（锁阻塞）" class="headerlink" title="4.2. BLOCKED（锁阻塞）"></a>4.2. BLOCKED（锁阻塞）</h2><p>当线程抢到cpu执行权时，进入运行状态。未强抢到执行权时，进入阻塞状态</p><h2 id="4-3-Waiting（无限等待）"><a href="#4-3-Waiting（无限等待）" class="headerlink" title="4.3. Waiting（无限等待）"></a>4.3. Waiting（无限等待）</h2><p>线程进入等待状态，需要等待被唤醒。</p><p>wait()线程等待，需要notify唤醒</p><p>wait(long m)，等待毫秒值结束后，若没有被notify()唤醒，则自动醒来，线程进入运行状态或阻塞状态</p><p>notify()唤醒在该对象监视器等待的单个线程</p><p>notifyAll()唤醒在该对象监视器等待的所有线程</p><h2 id="4-4-其他"><a href="#4-4-其他" class="headerlink" title="4.4. 其他"></a>4.4. 其他</h2><h1 id="5-等待唤醒机制"><a href="#5-等待唤醒机制" class="headerlink" title="5. 等待唤醒机制"></a>5. 等待唤醒机制</h1><p>我们知道。多个线程并发执行时，cpu是随机切换线程的，当我们需要多个线程共同执行一项任务时，必然是需要有规律的执行，只做包子不吃或者只吃包子不做都是不符合规律的，因此我们需要他们之间协调通信来完成任务。</p><p><img alt="1571383425992" data-src="C:%5CUsers%5CAdministrator.RG4-44%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1571383425992.png" class="lozad"></p><p><img alt="1571383705241" data-src="C:%5CUsers%5CAdministrator.RG4-44%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1571383705241.png" class="lozad"></p><p>什么是等待唤醒机制？线程之间的通信</p><p>为了解决线程之间的<code>通信</code>问题，为了有效利用共享的资源</p><p>用到的方法：</p><ul><li>wait()：线程进入等待状态，进入对象的waiting set中，不再占用cpu资源和竞争锁。需要得到<code>通知notify</code>才能重新进入到调度队列中</li><li>notify()：释放对象的waiting set中等待时间最长的线程</li><li>notifyAll()：释放对象的waiting set中的全部线程</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;2&lt;/p&gt;
&lt;h1 id=&quot;1-概念理解&quot;&gt;&lt;a href=&quot;#1-概念理解&quot; class=&quot;headerlink&quot; title=&quot;1. 概念理解&quot;&gt;&lt;/a&gt;1. 概念理解&lt;/h1&gt;&lt;h2 id=&quot;1-1-并发与并行&quot;&gt;&lt;a href=&quot;#1-1-并发与并行&quot; class=
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>JAVA——集合</title>
    <link href="https://cometorbityh.github.io/2019/10/16/JAVA%E2%80%94%E2%80%94%E9%9B%86%E5%90%88/"/>
    <id>https://cometorbityh.github.io/2019/10/16/JAVA——集合/</id>
    <published>2019-10-16T11:22:04.000Z</published>
    <updated>2019-10-23T06:59:00.173Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-Collection"><a href="#1-Collection" class="headerlink" title="1.Collection"></a>1.Collection</h1><p>Collection的常用方法</p><table><thead><tr><th>操作对象</th><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>单个容器</td><td>boolean add(Object element)</td><td>增加元素到容器中</td></tr><tr><td></td><td>boolean remove(Object element)</td><td>从容器中移除元素</td></tr><tr><td></td><td>boolean contains(Object element)</td><td>容器中是否包含该元素</td></tr><tr><td></td><td>int size()</td><td>容器中元素的数量</td></tr><tr><td></td><td>boolean isEmpty()</td><td>容器中是否为空</td></tr><tr><td></td><td>void clear()</td><td>清空容器中所有元素</td></tr><tr><td>迭代器</td><td>Interator</td><td>提供了统一的遍历容器的方式</td></tr><tr><td>多个容器</td><td>boolean addAll(Collection c)</td><td>将容器C的所有元素添加到本容器中</td></tr><tr><td></td><td>boolean removeAll(Collection c)</td><td>移除本容器和C容器中都包含的元素</td></tr><tr><td></td><td>boolean containsAll(Collection c)</td><td>本容器中是否包含c容器中的所有元素</td></tr><tr><td></td><td>boolean retainAll(Collection c)</td><td>留下本容器和容器C都包含的元素，移除本容器和C容器中非交集的元素</td></tr><tr><td></td><td>Object[] toArray()</td><td>转化为Object数组</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.orbit.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CollectionDemo</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建一个容器</span></span><br><span class="line">Collection&lt;String&gt; c = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">c.add(<span class="string">"张三"</span>);</span><br><span class="line">c.add(<span class="string">"李四"</span>);</span><br><span class="line"></span><br><span class="line">System.out.println(c.toString());</span><br><span class="line">System.out.println(<span class="string">"当前容器是否为空 ==&gt; "</span>+c.isEmpty());</span><br><span class="line">System.out.println(<span class="string">"当前容器元素个数 ==&gt; "</span>+c.size());</span><br><span class="line">System.out.println(<span class="string">"当前容器是否包含李四 ==&gt; "</span>+c.contains(<span class="string">"李四"</span>));</span><br><span class="line">System.out.println(<span class="string">"转为Object数组 ==&gt; "</span>+c.toArray().toString());</span><br><span class="line">System.out.println(<span class="string">"移除李四"</span>);</span><br><span class="line">c.remove(<span class="string">"李四"</span>);</span><br><span class="line">System.out.println(c.toString());</span><br><span class="line">System.out.println(<span class="string">"清空"</span>);</span><br><span class="line">c.clear();</span><br><span class="line">System.out.println(<span class="string">"当前容器元素个数 ==&gt; "</span>+c.size());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191016195138.png" class="lozad"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.orbit.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CollectionDemo</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建一个容器</span></span><br><span class="line">List&lt;String&gt; list01 = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">list01.add(<span class="string">"aa"</span>);</span><br><span class="line">list01.add(<span class="string">"bb"</span>);</span><br><span class="line">list01.add(<span class="string">"cc"</span>);</span><br><span class="line"></span><br><span class="line">List&lt;String&gt; list02 = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">list02.add(<span class="string">"aa"</span>);</span><br><span class="line">list02.add(<span class="string">"dd"</span>);</span><br><span class="line">list02.add(<span class="string">"ee"</span>);</span><br><span class="line"></span><br><span class="line">System.out.println(list01);</span><br><span class="line">System.out.println(list02);</span><br><span class="line"></span><br><span class="line">list01.addAll(list02);<span class="comment">//list02添加到list01（可重复）</span></span><br><span class="line">System.out.println(list01);</span><br><span class="line"></span><br><span class="line">System.out.println(list01.containsAll(list02));<span class="comment">//list01是否包含list02</span></span><br><span class="line"></span><br><span class="line">list01.removeAll(list02);<span class="comment">//删除交集元素</span></span><br><span class="line">System.out.println(list01);</span><br><span class="line"></span><br><span class="line">list01.retainAll(list02);<span class="comment">//删除非交集元素</span></span><br><span class="line">System.out.println(list01);</span><br><span class="line">&#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191016200232.png" class="lozad"></p><h1 id="2-List接口"><a href="#2-List接口" class="headerlink" title="2.List接口"></a>2.List接口</h1><p>List是有序的、可重复的容器。</p><ul><li><p>有序：每个元素都有索引，可通过索引访问元素</p></li><li><p>可重复：允许加入重复元素</p></li></ul><p>List接口常用的实现类有3个：ArrayList，LinkedList，Vector</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.orbit.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CollectionDemo</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建一个容器</span></span><br><span class="line">List&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">list.add(<span class="string">"aa"</span>);</span><br><span class="line">list.add(<span class="string">"bb"</span>);</span><br><span class="line">list.add(<span class="string">"cc"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">list.add(<span class="string">"dd"</span>);<span class="comment">//在最后增加元素</span></span><br><span class="line">System.out.println(list);</span><br><span class="line">list.add(<span class="number">2</span>, <span class="string">"AA"</span>);<span class="comment">//在索引处插入元素</span></span><br><span class="line">System.out.println(list);</span><br><span class="line"></span><br><span class="line">list.remove(<span class="number">2</span>);<span class="comment">//移除指定索引的元素</span></span><br><span class="line">System.out.println(list);</span><br><span class="line"></span><br><span class="line">list.set(<span class="number">2</span>, <span class="string">"aa"</span>);<span class="comment">//覆盖指定索引的元素</span></span><br><span class="line">System.out.println(list);</span><br><span class="line"></span><br><span class="line">System.out.println(list.get(<span class="number">2</span>));<span class="comment">//获取指定索引的元素</span></span><br><span class="line"></span><br><span class="line">System.out.println(list.indexOf(<span class="string">"aa"</span>));<span class="comment">//获取该元素第一次出现的索引位置。不存在则返回-1</span></span><br><span class="line">System.out.println(list.indexOf(<span class="string">"bc"</span>));</span><br><span class="line">System.out.println(list.lastIndexOf(<span class="string">"aa"</span>));<span class="comment">//获取该元素最后一次出现的索引位置。不存在则返回-1</span></span><br><span class="line"></span><br><span class="line">&#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-1-ArrayList（常用）"><a href="#2-1-ArrayList（常用）" class="headerlink" title="2.1 ArrayList（常用）"></a>2.1 ArrayList（常用）</h2><p>ArrayList底层是用<code>数组</code>实现的存储。 数组占用空间连续</p><p>特点：查询效率高，增删效率低，线程不安全。</p><p><strong>数组长度有限，但ArrayList长度不限，可存放任意数量的对象。它是如何实现的？</strong></p><ul><li>扩容。数组的默认长度为10，当长度满时，创建一个新的长度为原来的1.5倍（原长度+原长度右移1位）长度的数组，再将旧数组的元素复制到新数组中。</li></ul><h2 id="2-2-LinkedList"><a href="#2-2-LinkedList" class="headerlink" title="2.2 LinkedList"></a>2.2 LinkedList</h2><p>LinkedList底层时采用<code>双向链表</code>实现的存储。链表占用空间不连续 </p><p>特点：查询效率低，增删效率高，线程不安全</p><p>双向链表：每个数据节点（node）都有2个指针，分别指向前一个节点和后一个节点。</p><ul><li>上节点地址 || 元素数据 || 下节点地址</li></ul><h2 id="2-3-Vector"><a href="#2-3-Vector" class="headerlink" title="2.3 Vector"></a>2.3 Vector</h2><p>Vector底层是采用<code>数组</code>实现的List，相关方法都增加了同步检查（synchronized）</p><p>特点：效率低（同步检查耗费时间），线程安全</p><h1 id="3-Map接口"><a href="#3-Map接口" class="headerlink" title="3. Map接口"></a>3. Map接口</h1><p>显示生活中，常需要成对存储某些信息，比如一个手机号对应一个微信号，这就是成对存储关系，</p><p>在Java中，这对数据称为<code>键值对（key-value）</code>，</p><p>Map就是用来存储键值对的，通过键来获取值，因此键对象是唯一的不可重复。</p><p>若重复，则新的键值对会覆盖旧的键值对 。</p><p>Map接口的实现类：<code>HashMap，TreeMap，HashTable，Properties</code></p><table><thead><tr><th>操作对象</th><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>单个Map</td><td>Object put(Object key,Object value)</td><td>存放键值对</td></tr><tr><td></td><td>Object get(Object key)</td><td>通过键对象查找得到值对象</td></tr><tr><td></td><td>Object remove(Object key)</td><td>删除键对象对应的值对象</td></tr><tr><td></td><td>boolean containsKey(Object key)</td><td>Map容器中是否包含键对象对应的键值对</td></tr><tr><td></td><td>boolean containsValue(Object value)</td><td>Map容器中是否包含值对象对应的键值对</td></tr><tr><td></td><td>int size()</td><td>键值对的数量</td></tr><tr><td></td><td>boolean isEmpty()</td><td>判断Map是否为空</td></tr><tr><td></td><td>void clear()</td><td>清空所有键值对</td></tr><tr><td>多个Map</td><td>void putAll(Map m)</td><td>将m容器中的所有键值对存放到本map对象</td></tr></tbody></table><h2 id="3-1-HashMap类"><a href="#3-1-HashMap类" class="headerlink" title="3.1  HashMap类"></a>3.1  HashMap类</h2><p>HashMap底层实现使用了<code>哈希表</code>，这是一种重要的数据结构。</p><ul><li><p>哈希表的基本结构是<code>&quot;数组＋单向链表&quot;</code>。即结合了两者的优点，查询快，增删效率也快。</p></li><li><p>存储方式：将很多链保存在数组中</p></li><li><p>约定数组的长度必须是2的整数次幂，这样采用位算法可以实现取余的效果。</p></li><li><p>这些键值对越散越好，便于查询，因此为了得到更好的散列效果，jdk对hashcode还进行了2次<code>散列</code>处理，即移位操作，核心目标是为了分布更散更均匀</p></li></ul><h3 id="1-hashmap如何存储数据"><a href="#1-hashmap如何存储数据" class="headerlink" title="(1). hashmap如何存储数据"></a>(1). hashmap如何存储数据</h3><h4 id="①-put存储数据过程"><a href="#①-put存储数据过程" class="headerlink" title="①. put存储数据过程"></a>①. put存储数据过程</h4><p><strong>核心：产生hash值，该值用来对应数组的存储位置</strong><br>第一步，调用方法 key对象.hashcode() 生成 哈希码，注意<strong>整形数的哈希码是它本身</strong><br>第二步，调用hashMap的hash()方法 计算出哈希值，hash值=hashcode＆(数组长度-1)，哈希值的范围[0，table数组的length-1]，即数组的索引位置<br>第三步，结合 hash值，key对象，value对象，next 四个数据生成entry对象，即链<br>第四步，将这个entry对象存储到数组索引位置，当有多个entry对象的hash值一样时，前一个entry对象的next即指向后一个entry对象。 </p><h4 id="②-get获取数据过程"><a href="#②-get获取数据过程" class="headerlink" title="②. get获取数据过程"></a>②. get获取数据过程</h4><h2 id="3-2-HashTable类——线程同步的HashMap类"><a href="#3-2-HashTable类——线程同步的HashMap类" class="headerlink" title="3.2 HashTable类——线程同步的HashMap类"></a>3.2 HashTable类——线程同步的HashMap类</h2><p>底层和用法与hashmap几乎一样，只是hashtable的方法添加了synchronized关键字，确保线程同步检查，效率较低。<br>区别<br> hashmap线程不安全，效率高，允许key或value为null<br>treemap线程安全，效率低，不允许key或value为null</p><h2 id="3-3-TreeMap类"><a href="#3-3-TreeMap类" class="headerlink" title="3.3 TreeMap类"></a>3.3 TreeMap类</h2><p>treemap是红黑二叉树的典型实现<br>源码中，root用来存储整个树的根节点，其类型为entry，<br>entr底层源码中，存储了本身数据，左节点，右节点，父节点，节点颜色。<br>treemap和hashmap实现了同样的接口map,因此用法对于调用者来说无区别，hashmap的效率高于treemap，在需要排序的map时才选用treemap</p><p>#4. set接口<br>继承自collection接口，有collection所有的方法，无新增方法</p><p>特点：无序，不可重复，</p><ul><li><p>五序指set中元素无索引，只能遍历查找，</p></li><li><p>不可重复指不允许加入重复的元素。即新元素与set中的元素通过equal()方法对比为true，则不可加入。因此set中也只能放一个null元素。</p></li></ul><p>(其实hashset的元素底层是map的key，因此不可重复，至于value只是定义了一个恒定的Object对象)</p><p>实现类：<code>HashSet,TreeSet</code></p><h2 id="4-1-HashSet-常用"><a href="#4-1-HashSet-常用" class="headerlink" title="4.1 HashSet(常用)"></a>4.1 HashSet(常用)</h2><h2 id="4-2-TreeSet"><a href="#4-2-TreeSet" class="headerlink" title="4.2 TreeSet"></a>4.2 TreeSet</h2><p>底层用treemap实现，内部维持了一个简化版的treemap.与hashset一样，通过key来存储set的元素，value是一个默认的Object对象。treeset需要对存储的元素进行排序，因此对应类需要实现Comparable接口，这样才能根据compareTo()方法比较对象之间的大小进行内部排序。</p><p>#5. Iterator迭代器的使用<br>提供了统一的遍历容器的方式。</p><h1 id="6-Collections工具类"><a href="#6-Collections工具类" class="headerlink" title="6. Collections工具类"></a>6. Collections工具类</h1><p>提供了对set，list，map，进行排序填充，查找元素的辅助方法，注意Collection是接口，Collections是工具类<br>sort(list)按升序排序<br>shuffle(list)随机排序<br>reverse(list)倒序排序<br>int binarySearch(list，Object)二分查找法查找特定对象 </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-Collection&quot;&gt;&lt;a href=&quot;#1-Collection&quot; class=&quot;headerlink&quot; title=&quot;1.Collection&quot;&gt;&lt;/a&gt;1.Collection&lt;/h1&gt;&lt;p&gt;Collection的常用方法&lt;/p&gt;
&lt;table&gt;
&lt;t
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>SSM整合实例_05_删除人员</title>
    <link href="https://cometorbityh.github.io/2019/10/10/SSM%E6%95%B4%E5%90%88%E5%AE%9E%E4%BE%8B-05-%E5%88%A0%E9%99%A4%E4%BA%BA%E5%91%98/"/>
    <id>https://cometorbityh.github.io/2019/10/10/SSM整合实例-05-删除人员/</id>
    <published>2019-10-10T08:46:39.000Z</published>
    <updated>2019-10-10T08:47:01.723Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="SSM" scheme="https://cometorbityh.github.io/categories/SSM/"/>
    
    
      <category term="SSM" scheme="https://cometorbityh.github.io/tags/SSM/"/>
    
  </entry>
  
  <entry>
    <title>SSM整合实例_04_修改人员</title>
    <link href="https://cometorbityh.github.io/2019/10/10/SSM%E6%95%B4%E5%90%88%E5%AE%9E%E4%BE%8B-04-%E4%BF%AE%E6%94%B9%E4%BA%BA%E5%91%98/"/>
    <id>https://cometorbityh.github.io/2019/10/10/SSM整合实例-04-修改人员/</id>
    <published>2019-10-10T08:46:28.000Z</published>
    <updated>2019-10-10T12:38:18.452Z</updated>
    
    <content type="html"><![CDATA[<h1 id="修改操作"><a href="#修改操作" class="headerlink" title="修改操作"></a>修改操作</h1><p>1.点击编辑，弹出修改的模态框，并显示用户信息</p><p>2.点击更新，完成用户修改</p><h1 id="删除操作"><a href="#删除操作" class="headerlink" title="删除操作"></a>删除操作</h1><p>单个：url:/emp/{id} DELETE</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;修改操作&quot;&gt;&lt;a href=&quot;#修改操作&quot; class=&quot;headerlink&quot; title=&quot;修改操作&quot;&gt;&lt;/a&gt;修改操作&lt;/h1&gt;&lt;p&gt;1.点击编辑，弹出修改的模态框，并显示用户信息&lt;/p&gt;
&lt;p&gt;2.点击更新，完成用户修改&lt;/p&gt;
&lt;h1 id=&quot;删除操作&quot;
      
    
    </summary>
    
      <category term="SSM" scheme="https://cometorbityh.github.io/categories/SSM/"/>
    
    
      <category term="SSM" scheme="https://cometorbityh.github.io/tags/SSM/"/>
    
  </entry>
  
  <entry>
    <title>SSM整合实例_03_增加人员</title>
    <link href="https://cometorbityh.github.io/2019/10/08/SSM%E6%95%B4%E5%90%88%E5%AE%9E%E4%BE%8B-03-%E5%A2%9E%E5%8A%A0%E4%BA%BA%E5%91%98/"/>
    <id>https://cometorbityh.github.io/2019/10/08/SSM整合实例-03-增加人员/</id>
    <published>2019-10-08T14:14:41.000Z</published>
    <updated>2019-10-10T08:45:16.614Z</updated>
    
    <content type="html"><![CDATA[<h1 id="新增操作"><a href="#新增操作" class="headerlink" title="新增操作"></a>新增操作</h1><table><thead><tr><th></th><th>需求：</th><th>思路：</th></tr></thead><tbody><tr><td></td><td>点击“新增”按钮时弹出对话框，该对话框的功能为增加人员，需要获取到部门的数据到下拉框中</td><td>为“新增”绑定点击事件，包括：<br><br>　<strong>1. 先清除表单数据</strong><br>　<strong>2. 调用获取部门数据的方法</strong>：<br>　　　获取部门数据：发送ajax请求到处理器相应方法，收到返回结果，该返回结果是去数据库查询的部门列表<br>　　　部门数据放到下拉框中：在ajax中，将success的result进行遍历，并拼接到<option>标签中<br>　<strong>3. 弹出模态框</strong>：利用bootstrap的<code>$(id).modal({backdrop:&quot;static&quot;});</code></option></td></tr><tr><td></td><td>对用户名进行ajax“重复”检验</td><td>为用户名输入框的change绑定事件：<br>获取到输入框的值；<br>发送ajax请求（发送用户名数据）到处理器校验用户名是否可用，得到返回值，返回值是一个状态码；<br>判断该状态码：<br>状态码为可用状态时，<strong>调用显示校验提示的方法</strong>，并给保存按钮添加一个自定义属性，属性值为success（<code>$(&quot;按钮&quot;).attr(&quot;属性&quot;，“属性值”)</code>）<br>状态码为不可用状态时，<strong>调用显示校验提示的方法</strong>，显示提示信息，并给保存按钮添加一个自定义属性，属性值为error（<code>$(&quot;按钮&quot;).attr(&quot;属性&quot;，“属性值”)</code>），点击无效</td></tr><tr><td></td><td>点击“保存”按钮：<br>对要提交给服务器的数据进行校验<br>此时自动调转到包含该员工数据的那一页</td><td>为提示框的添加按钮绑定点击事件，包括：<br>　<strong>1. 调用数据校验的方法。若该方法返回值为false,return false;该方法具体如下:</strong><br>　　　获取对应文本框中输入的值（<code>var value=$(&quot;#文本框id&quot;).val()</code>）；<br>　　　定义一个正则表达式（<code>var regValue=xxxxx</code>）；<br>　　　使用正则表达式对该值进行校验（<code>regValue.test(value)</code>），判断该语句的值；<br>　　　　是false则<em>调用显示校验提示的方法</em>并return false；<br>　　　　是true继续校验下一个；<br>　　　　以此类推，全部检验完毕，return true<br>　　<strong>1-1.</strong> <strong>调用显示校验提示的方法</strong>：<br>　　　　　先在每一个文本框下添加一个<code>span</code>标签，用来输出提示信息<br>　　　　　清空当前元素的校验状态<br>　　　　　判断输入框的格式<br>　　　　　　　如果输入框格式有误，就在输入框的父标签（div）的class添加<code>has error</code>字段（bootstrap语法，该语法使文本框变红），在输入框的下一个标签（span）添加文本，文本为错误提示信息。<br>　　　　　　　如果输入框格式正确，就在输入框的父标签（div）的class添加<code>has success</code>字段（bootstrap语法，该语法使文本框变绿）<br>　　　　　该方法有相同之处，可抽取3个参数（输入框id，输入框格式状态，提示信息），不再详细说明。<br>　　<strong>2. 判断添加按钮的自定义属性</strong>（在上一个需求）是否为error，若是则return false;<br>　　<strong>3. 保存新增的员工数据</strong>：页面发送ajax请求（将表单数据序列化）到处理器的新增人员的方法，完成数据库数据的添加<br>　　<strong>4. 跳转到新员工的页面</strong>：调用to_page();，定义一个变量，赋值为总记录数，to_page(变量)即可跳转</td></tr><tr><td></td><td>重要数据，对用户进行后端校验（JSR303），唯一约束</td><td>1. 导入jar包：hibernate-validator（JSR303数据校验支持）<br>2. 在处理器的保存人员方法中添加检验，并返回一个参数给请求页面的ajax解析</td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;新增操作&quot;&gt;&lt;a href=&quot;#新增操作&quot; class=&quot;headerlink&quot; title=&quot;新增操作&quot;&gt;&lt;/a&gt;新增操作&lt;/h1&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;需求：&lt;/th&gt;
&lt;th&gt;思路：&lt;/th&gt;
&lt;/tr&gt;
&lt;/
      
    
    </summary>
    
      <category term="SSM" scheme="https://cometorbityh.github.io/categories/SSM/"/>
    
    
      <category term="SSM" scheme="https://cometorbityh.github.io/tags/SSM/"/>
    
  </entry>
  
  <entry>
    <title>SSM整合实例_02_主页设计</title>
    <link href="https://cometorbityh.github.io/2019/10/08/SSM%E6%95%B4%E5%90%88%E5%AE%9E%E4%BE%8B_02_%E4%B8%BB%E9%A1%B5%E8%AE%BE%E8%AE%A1/"/>
    <id>https://cometorbityh.github.io/2019/10/08/SSM整合实例_02_主页设计/</id>
    <published>2019-10-08T14:08:54.000Z</published>
    <updated>2019-10-08T14:15:36.119Z</updated>
    
    <content type="html"><![CDATA[<h1 id="查询操作"><a href="#查询操作" class="headerlink" title="查询操作"></a>查询操作</h1><p>需求：获取数据库的数据到主页。</p><h2 id="1，查询步骤（model方法）"><a href="#1，查询步骤（model方法）" class="headerlink" title="1，查询步骤（model方法）"></a>1，查询步骤（model方法）</h2><ul><li>访问index.jsp</li><li>index.jsp页面发出查询人员列表的请求</li><li>对应处理器（EmployeeController.java）接收请求，查询人员数据</li><li>响应数据到index.jsp页面</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查询所有员工（分页查询）</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/emps"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getEmps</span><span class="params">(@RequestParam(value = <span class="string">"pn"</span>,defaultValue = <span class="string">"1"</span>)</span>Integer pn, Model model)</span>&#123;</span><br><span class="line">    <span class="comment">//查询方法前调用PageHelper.startPage方法，紧跟在这个方法后的第一个MyBatis查询方法会被进行分页。</span></span><br><span class="line">    PageHelper.startPage(pn,<span class="number">5</span>);     <span class="comment">//获取第pn页，10条内容</span></span><br><span class="line">    List&lt;Employee&gt; emps =  employeeService.getAll();</span><br><span class="line">    <span class="comment">//用PageInfo包装查询后的结果，只需将PageInfo交给页面即可</span></span><br><span class="line">    <span class="comment">//PageInfo对象包含了详细的分页信息，包括查询出的数据,连续显示的页数</span></span><br><span class="line">    PageInfo page = <span class="keyword">new</span> PageInfo(emps,<span class="number">5</span>);</span><br><span class="line">    model.addAttribute(<span class="string">"pageInfo"</span>,page);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"list"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">"java"</span> contentType=<span class="string">"text/html; charset=utf-8"</span></span><br><span class="line">         pageEncoding=<span class="string">"utf-8"</span> isELIgnored=<span class="string">"false"</span> %&gt;</span><br><span class="line">&lt;%--引入核心标签库--%&gt;</span><br><span class="line">&lt;%<span class="meta">@taglib</span> uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> prefix=<span class="string">"c"</span>%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;员工列表&lt;/title&gt;</span><br><span class="line"></span><br><span class="line">    &lt;%</span><br><span class="line">        pageContext.setAttribute(<span class="string">"APP_PATH"</span>, request.getContextPath());</span><br><span class="line">    %&gt;</span><br><span class="line">    &lt;script type="text/javascript" src="static/js/jquery-1.12.4.min.js"&gt;&lt;/script&gt;</span><br><span class="line">    &lt;link href=<span class="string">"static/bootstrap-3.3.7-dist/css/bootstrap.min.css"</span> rel=<span class="string">"stylesheet"</span>&gt;</span><br><span class="line">    &lt;script src="static/bootstrap-3.3.7-dist/js/bootstrap.min.js"&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;!-- 搭建显示页面 --&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"container"</span>&gt;</span><br><span class="line">    &lt;!-- 标题 --&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"row"</span>&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-md-12"</span>&gt;</span><br><span class="line">            &lt;h1&gt;SSM-CRUD&lt;/h1&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;!-- 按钮 --&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"row"</span>&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-md-4 col-md-offset-8"</span>&gt;</span><br><span class="line">            &lt;button class="btn btn-primary"&gt;新增&lt;/button&gt;</span><br><span class="line">            &lt;button class="btn btn-danger"&gt;删除&lt;/button&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">        &lt;!--数据--&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"row"</span>&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-md-12"</span>&gt;</span><br><span class="line">                &lt;table <span class="class"><span class="keyword">class</span></span>=<span class="string">"table table-hover"</span>&gt;</span><br><span class="line">                    &lt;tr&gt;</span><br><span class="line">                        &lt;th&gt;#&lt;/th&gt;</span><br><span class="line">                        &lt;th&gt;姓名&lt;/th&gt;</span><br><span class="line">                        &lt;th&gt;性别&lt;/th&gt;</span><br><span class="line">                        &lt;th&gt;邮箱&lt;/th&gt;</span><br><span class="line">                        &lt;th&gt;部门&lt;/th&gt;</span><br><span class="line">                        &lt;th&gt;操作&lt;/th&gt;</span><br><span class="line">                    &lt;/tr&gt;</span><br><span class="line"></span><br><span class="line">                    &lt;%--取出pageInfo属性中的list，将每一个list都命名为emp--%&gt;</span><br><span class="line">                    &lt;c:forEach items=<span class="string">"$&#123;pageInfo.list&#125;"</span> <span class="keyword">var</span>=<span class="string">"emp"</span>&gt;</span><br><span class="line">                        &lt;tr&gt;</span><br><span class="line">                            &lt;td&gt;$&#123;emp.empId&#125;&lt;/td&gt;</span><br><span class="line">                            &lt;td&gt;$&#123;emp.empName&#125;&lt;/td&gt;</span><br><span class="line">                            &lt;td&gt;$&#123;emp.gender=='M'?'男':'女'&#125;&lt;/td&gt;</span><br><span class="line">                            &lt;td&gt;$&#123;emp.email&#125;&lt;/td&gt;</span><br><span class="line">                            &lt;td&gt;$&#123;emp.department.deptName&#125;&lt;/td&gt;</span><br><span class="line">                            &lt;td&gt;</span><br><span class="line">                                &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-primary btn-sm"</span>&gt;</span><br><span class="line">                                    &lt;span class="glyphicon glyphicon-pencil" aria-hidden="true"&gt;&lt;/span&gt;</span><br><span class="line">                                    编辑</span><br><span class="line">                                &lt;/button&gt;</span><br><span class="line">                                &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-danger btn-sm"</span>&gt;</span><br><span class="line">                                    &lt;span class="glyphicon glyphicon-trash" aria-hidden="true"&gt;&lt;/span&gt;</span><br><span class="line">                                    删除</span><br><span class="line">                                &lt;/button&gt;</span><br><span class="line">                            &lt;/td&gt;</span><br><span class="line">                        &lt;/tr&gt;</span><br><span class="line">                    &lt;/c:forEach&gt;</span><br><span class="line">                &lt;/table&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;!--分页信息--&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"row"</span>&gt;</span><br><span class="line">            &lt;!-- 分页文字信息 --&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-md-6"</span>&gt;</span><br><span class="line">                当前$&#123;pageInfo.pageNum&#125;/$&#123;pageInfo.pages&#125;页，共$&#123;pageInfo.total&#125;条记录</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;!--分页条信息 --&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-md-6"</span>&gt;</span><br><span class="line">                &lt;nav aria-label=<span class="string">"Page navigation"</span>&gt;</span><br><span class="line">                    &lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"pagination"</span>&gt;</span><br><span class="line"></span><br><span class="line">                        &lt;%--首页即第一页--%&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href="$&#123;APP_PATH&#125;/emps?pn=1"&gt;首页&lt;/a&gt;&lt;/li&gt;</span><br><span class="line"></span><br><span class="line">                    &lt;%-- 点击上一页，当前页面减<span class="number">1</span> --%&gt;</span><br><span class="line">                        &lt;%--如有上一页，就显示上一页图标，否则不显示（因为第一页时点击上一页会显示-<span class="number">1</span>，不符合规范）--%&gt;</span><br><span class="line">                        &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;pageInfo.hasPreviousPage&#125;"</span>&gt;</span><br><span class="line">                            &lt;li&gt;</span><br><span class="line">                                &lt;a href=<span class="string">"$&#123;APP_PATH&#125;/emps?pn=$&#123;pageInfo.pageNum-1&#125;"</span> aria-label=<span class="string">"Previous"</span>&gt;</span><br><span class="line">                                    &lt;span aria-hidden="true"&gt;&amp;laquo;&lt;/span&gt;</span><br><span class="line">                                &lt;/a&gt;</span><br><span class="line">                            &lt;/li&gt;</span><br><span class="line">                        &lt;/c:if&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                    &lt;%--该分页条显示的页码，每一个页码都用pageNum表示，遍历出来--%&gt;</span><br><span class="line">                        &lt;c:forEach items=<span class="string">"$&#123;pageInfo.navigatepageNums&#125;"</span> <span class="keyword">var</span>=<span class="string">"page_Num"</span>&gt;</span><br><span class="line">                            &lt;%--当遍历出的这个页码和该显示页面的页码一致时,页码高亮--%&gt;</span><br><span class="line">                            &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;page_Num == pageInfo.pageNum&#125;"</span>&gt;</span><br><span class="line">                                &lt;li class="active"&gt;&lt;a href="#"&gt;$&#123;page_Num&#125;&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                            &lt;/c:if&gt;</span><br><span class="line">                            &lt;%--当遍历出的这个页码和该显示页面的页码不一致时,页码不高亮，点击时可跳转至对应页面--%&gt;</span><br><span class="line">                            &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;page_Num != pageInfo.pageNum&#125;"</span>&gt;</span><br><span class="line">                                &lt;li&gt;&lt;a href="$&#123;APP_PATH&#125;/emps?pn=$&#123;page_Num&#125;"&gt;$&#123;page_Num&#125;&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                            &lt;/c:if&gt;</span><br><span class="line"></span><br><span class="line">                        &lt;/c:forEach&gt;</span><br><span class="line"></span><br><span class="line">                    &lt;%-- 点击下一页，当前页面加<span class="number">1</span> --%&gt;</span><br><span class="line">                        &lt;%--如有下一页，就显示下一页图标，否则不显示（因为最后一页时点击下一页会显示不存在的页数，不符合规范）--%&gt;</span><br><span class="line">                        &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;pageInfo.hasNextPage&#125;"</span>&gt;</span><br><span class="line">                            &lt;li&gt;</span><br><span class="line">                                &lt;a href=<span class="string">"$&#123;APP_PATH&#125;/emps?pn=$&#123;pageInfo.pageNum+1&#125;"</span> aria-label=<span class="string">"Next"</span>&gt;</span><br><span class="line">                                    &lt;span aria-hidden="true"&gt;&amp;raquo;&lt;/span&gt;</span><br><span class="line">                                &lt;/a&gt;</span><br><span class="line">                            &lt;/li&gt;</span><br><span class="line">                        &lt;/c:if&gt;</span><br><span class="line">                        &lt;%--末页即总页码--%&gt;</span><br><span class="line">                        &lt;li&gt;&lt;a href="$&#123;APP_PATH&#125;/emps?pn=$&#123;pageInfo.pages&#125;"&gt;末页&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                    &lt;/ul&gt;</span><br><span class="line">                &lt;/nav&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="2，查询步骤（ajax方法）（推荐）"><a href="#2，查询步骤（ajax方法）（推荐）" class="headerlink" title="2，查询步骤（ajax方法）（推荐）"></a>2，查询步骤（ajax方法）（推荐）</h2><ul><li>index.jsp页面发送ajax请求查询</li><li>服务器将查到的数据，以json字符串的形式返回给浏览器</li><li>浏览器收到js字符串，可使用js对json进行解析，使用js通过dom增删改来改变页面</li><li>返回json，实现客户端的无关性</li></ul><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191008163338.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191008163550.png" class="lozad"></p><ul><li>给浏览器添加提示信息<code>Msg,java</code></li></ul><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191008171200.png" class="lozad"></p><p>EmployeeController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yanghan.crud.controller;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.PageHelper;</span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.PageInfo;</span><br><span class="line"><span class="keyword">import</span> com.yanghan.crud.bean.Employee;</span><br><span class="line"><span class="keyword">import</span> com.yanghan.crud.bean.Msg;</span><br><span class="line"><span class="keyword">import</span> com.yanghan.crud.service.EmployeeService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 处理员工CRUD请求</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmployeeController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    EmployeeService employeeService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询所有员工（ajax分页查询）</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/emps"</span>)</span><br><span class="line">    <span class="meta">@ResponseBody</span>   <span class="comment">//可以将返回的pageInfo对象转为json字符串,需要导入Jackson包</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Msg <span class="title">getEmpsWithJson</span><span class="params">(@RequestParam(value = <span class="string">"pn"</span>,defaultValue = <span class="string">"1"</span>)</span>Integer pn, Model model) </span>&#123;</span><br><span class="line">        <span class="comment">//查询方法前调用PageHelper.startPage方法，紧跟在这个方法后的第一个MyBatis查询方法会被进行分页。</span></span><br><span class="line">        PageHelper.startPage(pn, <span class="number">5</span>);     <span class="comment">//获取第pn页，10条内容</span></span><br><span class="line">        List&lt;Employee&gt; emps = employeeService.getAll();</span><br><span class="line">        <span class="comment">//用PageInfo包装查询后的结果，只需将PageInfo交给页面即可</span></span><br><span class="line">        <span class="comment">//PageInfo对象包含了详细的分页信息，包括查询出的数据,连续显示的页数</span></span><br><span class="line">        PageInfo page = <span class="keyword">new</span> PageInfo(emps, <span class="number">5</span>);</span><br><span class="line">        <span class="keyword">return</span> Msg.success().add(<span class="string">"pageInfo"</span>,page);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>index.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">"java"</span> contentType=<span class="string">"text/html; charset=utf-8"</span></span><br><span class="line">         pageEncoding=<span class="string">"utf-8"</span> isELIgnored=<span class="string">"false"</span> %&gt;</span><br><span class="line">&lt;%--引入核心标签库--%&gt;</span><br><span class="line">&lt;%<span class="meta">@taglib</span> uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> prefix=<span class="string">"c"</span>%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;员工列表&lt;/title&gt;</span><br><span class="line"></span><br><span class="line">    &lt;%</span><br><span class="line">        pageContext.setAttribute(<span class="string">"APP_PATH"</span>, request.getContextPath());</span><br><span class="line">    %&gt;</span><br><span class="line">    &lt;script type="text/javascript" src="static/js/jquery-1.12.4.min.js"&gt;&lt;/script&gt;</span><br><span class="line">    &lt;link href=<span class="string">"static/bootstrap-3.3.7-dist/css/bootstrap.min.css"</span> rel=<span class="string">"stylesheet"</span>&gt;</span><br><span class="line">    &lt;script src="static/bootstrap-3.3.7-dist/js/bootstrap.min.js"&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;!-- 搭建显示页面 --&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"container"</span>&gt;</span><br><span class="line">    &lt;!-- 标题 --&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"row"</span>&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-md-12"</span>&gt;</span><br><span class="line">            &lt;h1&gt;SSM-CRUD&lt;/h1&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;!-- 按钮 --&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"row"</span>&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-md-4 col-md-offset-8"</span>&gt;</span><br><span class="line">            &lt;button class="btn btn-primary"&gt;新增&lt;/button&gt;</span><br><span class="line">            &lt;button class="btn btn-danger"&gt;删除&lt;/button&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;!--数据--&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"row"</span>&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-md-12"</span>&gt;</span><br><span class="line">            &lt;table <span class="class"><span class="keyword">class</span></span>=<span class="string">"table table-hover"</span> id=<span class="string">"emps_table"</span>&gt;</span><br><span class="line">                &lt;thead&gt;</span><br><span class="line">                    &lt;tr&gt;</span><br><span class="line">                        &lt;th&gt;#&lt;/th&gt;</span><br><span class="line">                        &lt;th&gt;姓名&lt;/th&gt;</span><br><span class="line">                        &lt;th&gt;性别&lt;/th&gt;</span><br><span class="line">                        &lt;th&gt;邮箱&lt;/th&gt;</span><br><span class="line">                        &lt;th&gt;部门&lt;/th&gt;</span><br><span class="line">                        &lt;th&gt;操作&lt;/th&gt;</span><br><span class="line">                    &lt;/tr&gt;</span><br><span class="line">                &lt;/thead&gt;</span><br><span class="line">                &lt;tbody&gt;</span><br><span class="line"></span><br><span class="line">                &lt;/tbody&gt;</span><br><span class="line">            &lt;/table&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;!--分页信息--&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"row"</span>&gt;</span><br><span class="line">        &lt;!-- 分页文字信息 --&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-md-6"</span> id=<span class="string">"page_info_area"</span>&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;!--分页条信息 --&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-md-6"</span> id=<span class="string">"page_nav_area"</span>&gt;</span><br><span class="line"></span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//页面加载完成后，直接发送ajax请求，获取到分页数据</span></span><br><span class="line"></span><br><span class="line">    $(function () &#123;</span><br><span class="line">        <span class="comment">//第一次去首页</span></span><br><span class="line">        to_page(<span class="number">1</span>);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    $(function () &#123;</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            url:<span class="string">"$&#123;APP_PATH&#125;/emps"</span>,</span><br><span class="line">            data:<span class="string">"pn=1"</span>,</span><br><span class="line">            type:<span class="string">"get"</span>,</span><br><span class="line">            success:function (result) &#123;</span><br><span class="line">                <span class="comment">//获得数据</span></span><br><span class="line">                <span class="comment">// console.log(result);</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">//1.解析并显示分页数据</span></span><br><span class="line">                build_emps_table(result);</span><br><span class="line">                <span class="comment">//2.解析并显示分页信息</span></span><br><span class="line">                build_page_info(result);</span><br><span class="line">                <span class="comment">//3.解析并显示分页条</span></span><br><span class="line">                build_page_nav(result);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//跳到指定页面</span></span><br><span class="line">    <span class="function">function <span class="title">to_page</span><span class="params">(pn)</span></span>&#123;</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            url:<span class="string">"$&#123;APP_PATH&#125;/emps"</span>,</span><br><span class="line">            data:<span class="string">"pn="</span>+pn,</span><br><span class="line">            type:<span class="string">"get"</span>,</span><br><span class="line">            success:function (result) &#123;</span><br><span class="line">                <span class="comment">//获得数据</span></span><br><span class="line">                <span class="comment">// console.log(result);</span></span><br><span class="line">                <span class="comment">//1.解析并显示分页数据</span></span><br><span class="line">                build_emps_table(result);</span><br><span class="line">                <span class="comment">//2.解析并显示分页信息</span></span><br><span class="line">                build_page_info(result);</span><br><span class="line">                <span class="comment">//3.解析并显示分页条</span></span><br><span class="line">                build_page_nav(result);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//解析显示表格数据</span></span><br><span class="line">    <span class="function">function <span class="title">build_emps_table</span><span class="params">(result)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//先清空上一次的数据</span></span><br><span class="line">        $(<span class="string">"#emps_table tbody"</span>).empty();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//取出json字符串的分页数据</span></span><br><span class="line">        <span class="keyword">var</span> emps = result.extend.pageInfo.list;</span><br><span class="line">        <span class="comment">//遍历分页数据，index是索引，item是某个属性的集合</span></span><br><span class="line">        $.each(emps,function(index,item)&#123;</span><br><span class="line">           <span class="comment">// alert(item.empName);</span></span><br><span class="line">            <span class="comment">//构建单元格(append用来追加元素)</span></span><br><span class="line">            <span class="keyword">var</span> empIdTd = $(<span class="string">"&lt;td&gt;&lt;/td&gt;"</span>).append(item.empId);</span><br><span class="line">            <span class="keyword">var</span> empNameTd = $(<span class="string">"&lt;td&gt;&lt;/td&gt;"</span>).append(item.empName);</span><br><span class="line">            <span class="keyword">var</span> genderTd = $(<span class="string">"&lt;td&gt;&lt;/td&gt;"</span>).append(item.gender==<span class="string">'M'</span>?<span class="string">"男"</span>:<span class="string">"女"</span>);</span><br><span class="line">            <span class="keyword">var</span> emailTd = $(<span class="string">"&lt;td&gt;&lt;/td&gt;"</span>).append(item.email);</span><br><span class="line">            <span class="keyword">var</span> deptNameTd = $(<span class="string">"&lt;td&gt;&lt;/td&gt;"</span>).append(item.department.deptName);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// &lt;button class="btn btn-primary btn-sm"&gt;</span></span><br><span class="line">            <span class="comment">//     &lt;span class="glyphicon glyphicon-pencil" aria-hidden="true"&gt;&lt;/span&gt;编辑</span></span><br><span class="line">            <span class="comment">// &lt;/button&gt;</span></span><br><span class="line">            <span class="comment">// &lt;button class="btn btn-danger btn-sm"&gt;</span></span><br><span class="line">            <span class="comment">//     &lt;span class="glyphicon glyphicon-trash" aria-hidden="true"&gt;&lt;/span&gt;删除</span></span><br><span class="line">            <span class="comment">// &lt;/button&gt;</span></span><br><span class="line">            <span class="keyword">var</span> editBtn = $(<span class="string">"&lt;button&gt;&lt;/button&gt;"</span>).addClass(<span class="string">"btn btn-primary btn-sm"</span>)</span><br><span class="line">                .append(<span class="string">"&lt;span&gt;&lt;/span&gt;"</span>).addClass(<span class="string">"glyphicon glyphicon-pencil"</span>).append(<span class="string">"修改"</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> delBtn = $(<span class="string">"&lt;button&gt;&lt;/button&gt;"</span>).addClass(<span class="string">"btn btn-danger btn-sm"</span>)</span><br><span class="line">                .append(<span class="string">"&lt;span&gt;&lt;/span&gt;"</span>).addClass(<span class="string">"glyphicon glyphicon-trash"</span>).append(<span class="string">"删除"</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//将按钮放在一个单元格中</span></span><br><span class="line">            <span class="keyword">var</span> btnTd = $(<span class="string">"&lt;td&gt;&lt;/td&gt;"</span>).append(editBtn).append(<span class="string">" "</span>).append(delBtn);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//构建行(将单元格拼接成行，appendTo表示将该行添加到id为emps_table的tbody标签中)</span></span><br><span class="line">            $(<span class="string">"&lt;tr&gt;&lt;/tr&gt;"</span>).append(empIdTd).append(empNameTd)</span><br><span class="line">                .append(genderTd).append(emailTd).append(deptNameTd)</span><br><span class="line">                .append(btnTd).appendTo(<span class="string">"#emps_table tbody"</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//解析显示分页信息</span></span><br><span class="line">    <span class="function">function <span class="title">build_page_info</span><span class="params">(result)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//先清空上一次的数据</span></span><br><span class="line">        $(<span class="string">"#page_info_area"</span>).empty();</span><br><span class="line">        $(<span class="string">"#page_info_area"</span>).append(<span class="string">"当前"</span> + result.extend.pageInfo.pageNum + <span class="string">"/"</span></span><br><span class="line">            + result.extend.pageInfo.pages + <span class="string">"页，共"</span> + result.extend.pageInfo.total + <span class="string">"页"</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//解析构建分页条信息，点击进行跳转下一页</span></span><br><span class="line">    <span class="function">function <span class="title">build_page_nav</span><span class="params">(result)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//先清空上一次的数据</span></span><br><span class="line">        $(<span class="string">"#page_nav_area"</span>).empty();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">var</span> ul = $(<span class="string">"&lt;ul&gt;&lt;/ul&gt;"</span>).addClass(<span class="string">"pagination"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//构建元素</span></span><br><span class="line">        <span class="keyword">var</span> firstPageLi = $(<span class="string">"&lt;li&gt;&lt;/li&gt;"</span>).append($(<span class="string">"&lt;a&gt;&lt;/a&gt;"</span>).append(<span class="string">"首页"</span>).attr(<span class="string">"href"</span>,<span class="string">"#"</span>));</span><br><span class="line">        <span class="keyword">var</span> prePageLi = $(<span class="string">"&lt;li&gt;&lt;/li&gt;"</span>).append($(<span class="string">"&lt;a&gt;&lt;/a&gt;"</span>).append(<span class="string">"&amp;laquo;"</span>));</span><br><span class="line">        <span class="keyword">if</span> (result.extend.pageInfo.hasPreviousPage == <span class="keyword">false</span>) &#123;</span><br><span class="line">            firstPageLi.addClass(<span class="string">"disabled"</span>);</span><br><span class="line">            prePageLi.addClass(<span class="string">"disabled"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//为元素添加翻页事件</span></span><br><span class="line">            firstPageLi.click(function () &#123;</span><br><span class="line">                to_page(<span class="number">1</span>);</span><br><span class="line">            &#125;);</span><br><span class="line">            prePageLi.click(function () &#123;</span><br><span class="line">                to_page(result.extend.pageInfo.pageNum -<span class="number">1</span>);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> nextPageLi = $(<span class="string">"&lt;li&gt;&lt;/li&gt;"</span>).append($(<span class="string">"&lt;a&gt;&lt;/a&gt;"</span>).append(<span class="string">"&amp;raquo;"</span>));</span><br><span class="line">        <span class="keyword">var</span> lastPageLi = $(<span class="string">"&lt;li&gt;&lt;/li&gt;"</span>).append($(<span class="string">"&lt;a&gt;&lt;/a&gt;"</span>).append(<span class="string">"末页"</span>).attr(<span class="string">"href"</span>,<span class="string">"#"</span>));</span><br><span class="line">        <span class="keyword">if</span> (result.extend.pageInfo.hasNextPage == <span class="keyword">false</span>) &#123;</span><br><span class="line">            nextPageLi.addClass(<span class="string">"disabled"</span>);</span><br><span class="line">            lastPageLi.addClass(<span class="string">"disabled"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            nextPageLi.click(function () &#123;</span><br><span class="line">                to_page(result.extend.pageInfo.pageNum +<span class="number">1</span>);</span><br><span class="line">            &#125;);</span><br><span class="line">            lastPageLi.click(function () &#123;</span><br><span class="line">                to_page(result.extend.pageInfo.pages);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//页码1，2，3，4</span></span><br><span class="line">        ul.append(firstPageLi).append(prePageLi);</span><br><span class="line">        $.each(result.extend.pageInfo.navigatepageNums,function (index, item) &#123;</span><br><span class="line">            <span class="keyword">var</span> numLi = $(<span class="string">"&lt;li&gt;&lt;/li&gt;"</span>).append($(<span class="string">"&lt;a&gt;&lt;/a&gt;"</span>).append(item));</span><br><span class="line">            <span class="keyword">if</span> (result.extend.pageInfo.pageNum == item) &#123;</span><br><span class="line">                numLi.addClass(<span class="string">"active"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            numLi.click(function () &#123;</span><br><span class="line">                to_page(item);</span><br><span class="line">            &#125;);</span><br><span class="line">            ul.append(numLi);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        ul.append(nextPageLi).append(lastPageLi);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//把ul加入到nav</span></span><br><span class="line">        <span class="keyword">var</span> navEle = $(<span class="string">"&lt;nav&gt;&lt;/nav&gt;"</span>).append(ul);</span><br><span class="line">        navEle.appendTo(<span class="string">"#page_nav_area"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191008211100.png" class="lozad"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;查询操作&quot;&gt;&lt;a href=&quot;#查询操作&quot; class=&quot;headerlink&quot; title=&quot;查询操作&quot;&gt;&lt;/a&gt;查询操作&lt;/h1&gt;&lt;p&gt;需求：获取数据库的数据到主页。&lt;/p&gt;
&lt;h2 id=&quot;1，查询步骤（model方法）&quot;&gt;&lt;a href=&quot;#1，查询步骤（
      
    
    </summary>
    
      <category term="SSM" scheme="https://cometorbityh.github.io/categories/SSM/"/>
    
    
      <category term="SSM" scheme="https://cometorbityh.github.io/tags/SSM/"/>
    
  </entry>
  
  <entry>
    <title>JS语法基础2</title>
    <link href="https://cometorbityh.github.io/2019/10/08/JS%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%802/"/>
    <id>https://cometorbityh.github.io/2019/10/08/JS语法基础2/</id>
    <published>2019-10-08T07:15:05.000Z</published>
    <updated>2019-10-08T07:15:05.569Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>JS语法基础</title>
    <link href="https://cometorbityh.github.io/2019/10/08/JS%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/"/>
    <id>https://cometorbityh.github.io/2019/10/08/JS语法基础/</id>
    <published>2019-10-08T07:14:58.000Z</published>
    <updated>2019-10-08T07:14:58.895Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>SSM整合实例_01_环境搭建</title>
    <link href="https://cometorbityh.github.io/2019/10/07/SSM%E6%95%B4%E5%90%88%E5%AE%9E%E4%BE%8B_01_%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>https://cometorbityh.github.io/2019/10/07/SSM整合实例_01_环境搭建/</id>
    <published>2019-10-07T05:59:45.000Z</published>
    <updated>2019-10-08T14:19:02.021Z</updated>
    
    <content type="html"><![CDATA[<h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><h2 id="1，创建maven工程"><a href="#1，创建maven工程" class="headerlink" title="1，创建maven工程"></a>1，创建maven工程</h2><h2 id="2，引入jar包"><a href="#2，引入jar包" class="headerlink" title="2，引入jar包"></a>2，引入jar包</h2><ul><li>spring相关jar包</li><li>springmvc相关jar包</li><li>mybatis相关jar包（逆向工程jar包）</li><li>数据库连接池，驱动包</li><li>其他（jstl，servlet-api，junit，pageHelper分页插件）</li></ul><h2 id="3，引入bootstrap前端框架-JS"><a href="#3，引入bootstrap前端框架-JS" class="headerlink" title="3，引入bootstrap前端框架+JS"></a>3，引入bootstrap前端框架+JS</h2><h2 id="4，编写ssm整合的关键配置文件"><a href="#4，编写ssm整合的关键配置文件" class="headerlink" title="4，编写ssm整合的关键配置文件"></a>4，编写ssm整合的关键配置文件</h2><ul><li><code>web.xml</code></li><li><code>applicationContext.xml</code></li><li><code>springmvc.xml</code></li><li><code>mybatis-config.xml</code></li></ul><h2 id="5，mybatis逆向工程-测试"><a href="#5，mybatis逆向工程-测试" class="headerlink" title="5，mybatis逆向工程 + 测试"></a>5，mybatis逆向工程 + 测试</h2><p>（1）mybatis<code>逆向工程</code>生成对应的bean以及mapper</p><p>在项目下新建mbg.xml，修改部分内容。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE generatorConfiguration</span></span><br><span class="line"><span class="meta">        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"</span></span><br><span class="line"><span class="meta">        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd"&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">generatorConfiguration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--mybatis逆向工程--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context</span> <span class="attr">id</span>=<span class="string">"DB2Tables"</span> <span class="attr">targetRuntime</span>=<span class="string">"MyBatis3"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">commentGenerator</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--不生成注释--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suppressAllComments"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">commentGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--        配置数据库连接信息--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">jdbcConnection</span> <span class="attr">driverClass</span>=<span class="string">"com.mysql.jdbc.Driver"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">connectionURL</span>=<span class="string">"jdbc:mysql://localhost:3306/ssm_crud"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">userId</span>=<span class="string">"root"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">password</span>=<span class="string">"123456"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">jdbcConnection</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaTypeResolver</span> &gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"forceBigDecimals"</span> <span class="attr">value</span>=<span class="string">"false"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaTypeResolver</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--        指定javaBean生成的位置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaModelGenerator</span> <span class="attr">targetPackage</span>=<span class="string">"com.yanghan.crud.bean"</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">targetProject</span>=<span class="string">".\src\main\java"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"enableSubPackages"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"trimStrings"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaModelGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--        指定sql映射文件位置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">sqlMapGenerator</span> <span class="attr">targetPackage</span>=<span class="string">"mapper"</span></span></span><br><span class="line"><span class="tag">                         <span class="attr">targetProject</span>=<span class="string">".\src\main\resources"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"enableSubPackages"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">sqlMapGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--        指定dao接口生成的位置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaClientGenerator</span> <span class="attr">type</span>=<span class="string">"XMLMAPPER"</span></span></span><br><span class="line"><span class="tag">                             <span class="attr">targetPackage</span>=<span class="string">"com.yanghan.crud.dao"</span></span></span><br><span class="line"><span class="tag">                             <span class="attr">targetProject</span>=<span class="string">".\src\main\java"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"enableSubPackages"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaClientGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--        指定每个表的生成策略:javaBean的名字--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--        &lt;table schema="DB2ADMIN" tableName="ALLTYPES" domainObjectName="Customer" &gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--            &lt;property name="useActualColumnNames" value="true"/&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--            &lt;generatedKey column="ID" sqlStatement="DB2" identity="true" /&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--            &lt;columnOverride column="DATE_FIELD" property="startDate" /&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--            &lt;ignoreColumn column="FRED" /&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--            &lt;columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR" /&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--        &lt;/table&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">"tbl_emp"</span> <span class="attr">domainObjectName</span>=<span class="string">"Employee"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">"tbl_dept"</span> <span class="attr">domainObjectName</span>=<span class="string">"Department"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">generatorConfiguration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>com.xxx.crud.test包下新建MBGTest.java。</p><p>把以下内容复制进入。并修改<code>File configFile = new File(&quot;mbg.xml&quot;);</code></p><p>执行该方法，即可自动生成。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yanghan.crud.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.mybatis.generator.api.MyBatisGenerator;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.generator.config.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.generator.config.xml.ConfigurationParser;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.generator.internal.DefaultShellCallback;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//逆向工程测试类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MBGTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        List&lt;String&gt; warnings = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">        <span class="keyword">boolean</span> overwrite = <span class="keyword">true</span>;</span><br><span class="line">        File configFile = <span class="keyword">new</span> File(<span class="string">"mbg.xml"</span>);</span><br><span class="line">        ConfigurationParser cp = <span class="keyword">new</span> ConfigurationParser(warnings);</span><br><span class="line">        Configuration config = cp.parseConfiguration(configFile);</span><br><span class="line">        DefaultShellCallback callback = <span class="keyword">new</span> DefaultShellCallback(overwrite);</span><br><span class="line">        MyBatisGenerator myBatisGenerator = <span class="keyword">new</span> MyBatisGenerator(config, callback, warnings);</span><br><span class="line">        myBatisGenerator.generate(<span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>MapperTest.java测试是否连接成功数据库（可做增删改操作）</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yanghan.crud.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.yanghan.crud.bean.Department;</span><br><span class="line"><span class="keyword">import</span> com.yanghan.crud.bean.Employee;</span><br><span class="line"><span class="keyword">import</span> com.yanghan.crud.dao.DepartmentMapper;</span><br><span class="line"><span class="keyword">import</span> com.yanghan.crud.dao.EmployeeMapper;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.ContextConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringJUnit4ClassRunner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 测试dao层工作</span></span><br><span class="line"><span class="comment"> * Spring的项目可以使用Spring的单元测试，可以自动注入我们需要的组件</span></span><br><span class="line"><span class="comment"> * 1、导入SpringTest模块</span></span><br><span class="line"><span class="comment"> * 2、<span class="doctag">@ContextConfiguration</span>指定spring配置文件的位置</span></span><br><span class="line"><span class="comment"> * 3、直接autowired要使用的组件即可</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RunWith</span>(SpringJUnit4ClassRunner.class)</span><br><span class="line"><span class="meta">@ContextConfiguration</span>(locations = &#123;<span class="string">"classpath:applicationContext.xml"</span>&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MapperTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    DepartmentMapper departmentMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    EmployeeMapper employeeMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    SqlSession sqlSession;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 测试DepartmentMapper</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testCRUD</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//1、插入/删除部门</span></span><br><span class="line"><span class="comment">//        departmentMapper.insertSelective(new Department(null,"测试1"));</span></span><br><span class="line"><span class="comment">//        departmentMapper.insertSelective(new Department(null,"测试2"));</span></span><br><span class="line"><span class="comment">//        departmentMapper.deleteByPrimaryKey(3);</span></span><br><span class="line">        <span class="comment">//2、生成员工数据，测试员工插入</span></span><br><span class="line"><span class="comment">//        employeeMapper.insertSelective(new Employee(null,"Jerry","M","Jerry@qq.com",1));</span></span><br><span class="line">        <span class="comment">//3、批量插入多个员工；使用可执行批量操作的sqlSession</span></span><br><span class="line">        <span class="comment">//for循环并非批量，是插入1000次，而sqlsession是预编译sql，然后修改参数进行插入</span></span><br><span class="line"></span><br><span class="line">        EmployeeMapper mapper = sqlSession.getMapper(EmployeeMapper.class);</span><br><span class="line"></span><br><span class="line">        String uid = <span class="string">"initUid"</span>;</span><br><span class="line">        <span class="keyword">int</span> rid1 = <span class="number">666</span>;</span><br><span class="line">        <span class="keyword">int</span> rid2 = <span class="number">666</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">            uid = UUID.randomUUID().toString().substring(<span class="number">0</span>, <span class="number">5</span>)+i;</span><br><span class="line">            rid1 = (<span class="keyword">int</span>)(<span class="number">1</span>+Math.random()*(<span class="number">2</span>-<span class="number">1</span>+<span class="number">1</span>));</span><br><span class="line">            rid2 = (<span class="keyword">int</span>)(<span class="number">1</span>+Math.random()*(<span class="number">2</span>-<span class="number">1</span>+<span class="number">1</span>));</span><br><span class="line">            mapper.insertSelective(<span class="keyword">new</span> Employee(<span class="keyword">null</span>,uid,(rid1==<span class="number">1</span>)?(<span class="string">"M"</span>):(<span class="string">"W"</span>),uid+<span class="string">"@test.com"</span>,rid2));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;环境搭建&quot;&gt;&lt;a href=&quot;#环境搭建&quot; class=&quot;headerlink&quot; title=&quot;环境搭建&quot;&gt;&lt;/a&gt;环境搭建&lt;/h1&gt;&lt;h2 id=&quot;1，创建maven工程&quot;&gt;&lt;a href=&quot;#1，创建maven工程&quot; class=&quot;headerlink&quot; ti
      
    
    </summary>
    
      <category term="SSM" scheme="https://cometorbityh.github.io/categories/SSM/"/>
    
    
      <category term="SSM" scheme="https://cometorbityh.github.io/tags/SSM/"/>
    
  </entry>
  
  <entry>
    <title>SpringMVC(3)</title>
    <link href="https://cometorbityh.github.io/2019/10/06/SpringMVC-3/"/>
    <id>https://cometorbityh.github.io/2019/10/06/SpringMVC-3/</id>
    <published>2019-10-06T07:11:34.000Z</published>
    <updated>2019-10-06T07:11:34.539Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>SpringMVC(2)</title>
    <link href="https://cometorbityh.github.io/2019/10/06/SpringMVC-2/"/>
    <id>https://cometorbityh.github.io/2019/10/06/SpringMVC-2/</id>
    <published>2019-10-06T07:11:26.000Z</published>
    <updated>2019-10-06T14:28:25.267Z</updated>
    
    <content type="html"><![CDATA[<h1 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h1><p>文件上传需要的jar包</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="1-传统方式实现文件上传"><a href="#1-传统方式实现文件上传" class="headerlink" title="1.传统方式实现文件上传"></a>1.传统方式实现文件上传</h2><h2 id="2-SpringMVC实现本地服务器文件上传"><a href="#2-SpringMVC实现本地服务器文件上传" class="headerlink" title="2.SpringMVC实现本地服务器文件上传"></a>2.SpringMVC实现本地服务器文件上传</h2><p>在springmvc.xml文件中配置 <strong>文件解析器</strong> 对象</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 配置文件解析器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span>  <span class="attr">id</span>=<span class="string">"multipartResolver"</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.multipart.commons.CommonsMultipartResolver"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--最大上传大小：10MB=10*1024*1024B--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxUploadSize"</span> <span class="attr">value</span>=<span class="string">"10485760"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/03-%E5%8E%9F%E7%90%86.bmp" class="lozad"></p><h2 id="3-SpringMVC实现跨服务器文件上传"><a href="#3-SpringMVC实现跨服务器文件上传" class="headerlink" title="3.SpringMVC实现跨服务器文件上传"></a>3.SpringMVC实现跨服务器文件上传</h2><p>跨服务器上传文件需要的2个jar包</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.sun.jersey<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jersey-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.sun.jersey<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jersey-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/04.bmp" class="lozad"></p><p>4.代码</p><p>index.jsp</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>传统方式文件上传<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"file/fileupload1"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></span><br><span class="line">        上传文件：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"upload"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>SpringMVC方式文件上传<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"file/fileupload1"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></span><br><span class="line">        上传文件：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"upload"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>传统方式文件上传<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"file/fileupload2"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></span><br><span class="line">        上传文件：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"upload"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>跨服务器方式文件上传<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"file/fileupload3"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></span><br><span class="line">        上传文件：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"upload"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>FileController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yanghan.controller;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.jersey.api.client.Client;</span><br><span class="line"><span class="keyword">import</span> com.sun.jersey.api.client.WebResource;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.fileupload.FileItem;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.fileupload.disk.DiskFileItemFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.fileupload.servlet.ServletFileUpload;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartFile;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/file"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 跨服务器文件上传</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/fileupload3"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">fileupload3</span><span class="params">(MultipartFile upload)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"跨服务器文件上传..."</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 定义上传文件服务器路径</span></span><br><span class="line">        String path = <span class="string">"http://localhost:9090/uploads/"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 说明上传文件项</span></span><br><span class="line">        <span class="comment">// 获取上传文件的名称</span></span><br><span class="line">        String filename = upload.getOriginalFilename();</span><br><span class="line">        <span class="comment">// 把文件的名称设置唯一值，uuid</span></span><br><span class="line">        String uuid = UUID.randomUUID().toString().replace(<span class="string">"-"</span>, <span class="string">""</span>);</span><br><span class="line">        filename = uuid+<span class="string">"_"</span>+filename;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建客户端的对象</span></span><br><span class="line">        Client client = Client.create();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 和图片服务器进行连接</span></span><br><span class="line">        WebResource webResource = client.resource(path + filename);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 上传文件</span></span><br><span class="line">        webResource.put(upload.getBytes());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * SpringMVC文件上传</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/fileupload2"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">fileupload2</span><span class="params">(HttpServletRequest request, MultipartFile upload)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"springmvc文件上传..."</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用fileupload组件完成文件上传</span></span><br><span class="line">        <span class="comment">// 上传的位置</span></span><br><span class="line">        String path = request.getSession().getServletContext().getRealPath(<span class="string">"/uploads/"</span>);</span><br><span class="line">        <span class="comment">// 判断，该路径是否存在</span></span><br><span class="line">        File file = <span class="keyword">new</span> File(path);</span><br><span class="line">        <span class="keyword">if</span>(!file.exists())&#123;</span><br><span class="line">            <span class="comment">// 创建该文件夹</span></span><br><span class="line">            file.mkdirs();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 说明上传文件项</span></span><br><span class="line">        <span class="comment">// 获取上传文件的名称</span></span><br><span class="line">        String filename = upload.getOriginalFilename();</span><br><span class="line">        <span class="comment">// 把文件的名称设置唯一值，uuid</span></span><br><span class="line">        String uuid = UUID.randomUUID().toString().replace(<span class="string">"-"</span>, <span class="string">""</span>);</span><br><span class="line">        filename = uuid+<span class="string">"_"</span>+filename;</span><br><span class="line">        <span class="comment">// 完成文件上传</span></span><br><span class="line">        upload.transferTo(<span class="keyword">new</span> File(path,filename));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 文件上传</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/fileupload1"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">fileupload1</span><span class="params">(HttpServletRequest request)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"文件上传..."</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用fileupload组件完成文件上传</span></span><br><span class="line">        <span class="comment">// 上传的位置</span></span><br><span class="line">        String path = request.getSession().getServletContext().getRealPath(<span class="string">"/uploads/"</span>);</span><br><span class="line">        <span class="comment">// 判断，该路径是否存在</span></span><br><span class="line">        File file = <span class="keyword">new</span> File(path);</span><br><span class="line">        <span class="keyword">if</span>(!file.exists())&#123;</span><br><span class="line">            <span class="comment">// 创建该文件夹</span></span><br><span class="line">            file.mkdirs();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 解析request对象，获取上传文件项</span></span><br><span class="line">        DiskFileItemFactory factory = <span class="keyword">new</span> DiskFileItemFactory();</span><br><span class="line">        ServletFileUpload upload = <span class="keyword">new</span> ServletFileUpload(factory);</span><br><span class="line">        <span class="comment">// 解析request</span></span><br><span class="line">        List&lt;FileItem&gt; items = upload.parseRequest(request);</span><br><span class="line">        <span class="comment">// 遍历</span></span><br><span class="line">        <span class="keyword">for</span>(FileItem item:items)&#123;</span><br><span class="line">            <span class="comment">// 进行判断，当前item对象是否是上传文件项</span></span><br><span class="line">            <span class="keyword">if</span>(item.isFormField())&#123;</span><br><span class="line">                <span class="comment">// 说明普通表单向</span></span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">// 说明上传文件项</span></span><br><span class="line">                <span class="comment">// 获取上传文件的名称</span></span><br><span class="line">                String filename = item.getName();</span><br><span class="line">                <span class="comment">// 把文件的名称设置唯一值，uuid</span></span><br><span class="line">                String uuid = UUID.randomUUID().toString().replace(<span class="string">"-"</span>, <span class="string">""</span>);</span><br><span class="line">                filename = uuid+<span class="string">"_"</span>+filename;</span><br><span class="line">                <span class="comment">// 完成文件上传</span></span><br><span class="line">                item.write(<span class="keyword">new</span> File(path,filename));</span><br><span class="line">                <span class="comment">// 删除临时文件</span></span><br><span class="line">                item.delete();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/1570366727793.png" class="lozad"></p><h1 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h1><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/05.bmp" class="lozad"></p><p>web.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE web-app PUBLIC</span></span><br><span class="line"><span class="meta"> "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"</span></span><br><span class="line"><span class="meta"> "http://java.sun.com/dtd/web-app_2_3.dtd" &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Archetype Created Web Application<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 字符过滤器 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>characterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>characterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--前端控制器 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:springmvc.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><p>index.jsp【测试页面】</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span></span><br><span class="line">         language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;a href="ex/testException"&gt;异常测试&lt;/a&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>ExceptionController.java【处理器】</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yanghan.controller;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.yanghan.exception.SysException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/ex"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExceptionController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/testException"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">testException</span><span class="params">()</span> <span class="keyword">throws</span> SysException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"testException执行了..."</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 模拟异常</span></span><br><span class="line">            <span class="keyword">int</span> a = <span class="number">10</span>/<span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="comment">// 打印异常信息</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="comment">// 抛出自定义异常信息</span></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> SysException(<span class="string">"出现异常了..."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>SysException.java【系统异常实体类】</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yanghan.exception;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自定义异常类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SysException</span> <span class="keyword">extends</span> <span class="title">Exception</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 存储提示信息的</span></span><br><span class="line">    <span class="keyword">private</span> String message;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getMessage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> message;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMessage</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.message = message;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SysException</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.message = message;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>SysExceptionResolver.java【异常处理器】</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yanghan.exception;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.HandlerExceptionResolver;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 异常处理器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SysExceptionResolver</span></span></span><br><span class="line"><span class="class">        <span class="keyword">implements</span> <span class="title">HandlerExceptionResolver</span></span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//处理异常业务逻辑</span></span><br><span class="line">    <span class="keyword">public</span> ModelAndView resolveException</span><br><span class="line">    (HttpServletRequest request,</span><br><span class="line">     HttpServletResponse response,</span><br><span class="line">     Object handler, Exception ex) &#123;</span><br><span class="line">        <span class="comment">// 获取到异常对象</span></span><br><span class="line">        SysException e = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span>(ex <span class="keyword">instanceof</span> SysException)&#123;</span><br><span class="line">            e = (SysException)ex;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            e = <span class="keyword">new</span> SysException(<span class="string">"系统正在维护...."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 创建ModelAndView对象</span></span><br><span class="line">        ModelAndView mv = <span class="keyword">new</span> ModelAndView();</span><br><span class="line">        mv.addObject(<span class="string">"errorMsg"</span>,e.getMessage());</span><br><span class="line">        mv.setViewName(<span class="string">"error"</span>);</span><br><span class="line">        <span class="keyword">return</span> mv;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>springmvc.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/mvc/spring-mvc.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context/spring-context.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 开启注解扫描 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.yanghan"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 视图解析器对象 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"internalResourceViewResolver"</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prefix"</span> <span class="attr">value</span>=<span class="string">"/WEB-INF/pages/"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".jsp"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--前端控制器，哪些静态资源不拦截--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">location</span>=<span class="string">"/css/"</span> <span class="attr">mapping</span>=<span class="string">"/css/**"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">location</span>=<span class="string">"/images/"</span> <span class="attr">mapping</span>=<span class="string">"/images/**"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">location</span>=<span class="string">"/js/"</span> <span class="attr">mapping</span>=<span class="string">"/js/**"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--配置异常处理器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"sysExceptionResolver"</span> <span class="attr">class</span>=<span class="string">"com.yanghan.exception.SysExceptionResolver"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 开启SpringMVC框架注解的支持 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>error.jsp【返回的错误信息页面】</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span></span><br><span class="line">         language=<span class="string">"java"</span> isELIgnored=<span class="string">"false"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    $&#123;errorMsg&#125;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191006222417.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191006221736.png" class="lozad"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;文件上传&quot;&gt;&lt;a href=&quot;#文件上传&quot; class=&quot;headerlink&quot; title=&quot;文件上传&quot;&gt;&lt;/a&gt;文件上传&lt;/h1&gt;&lt;p&gt;文件上传需要的jar包&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td c
      
    
    </summary>
    
      <category term="框架" scheme="https://cometorbityh.github.io/categories/%E6%A1%86%E6%9E%B6/"/>
    
    
      <category term="Spring框架" scheme="https://cometorbityh.github.io/tags/Spring%E6%A1%86%E6%9E%B6/"/>
    
      <category term="SpringMVC框架" scheme="https://cometorbityh.github.io/tags/SpringMVC%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>SpringMVC(1)</title>
    <link href="https://cometorbityh.github.io/2019/10/05/SpringMVC-1/"/>
    <id>https://cometorbityh.github.io/2019/10/05/SpringMVC-1/</id>
    <published>2019-10-05T12:17:55.000Z</published>
    <updated>2019-10-06T10:19:45.392Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-SpringMVC"><a href="#1-SpringMVC" class="headerlink" title="1.  SpringMVC"></a>1.  SpringMVC</h1><h2 id="1-1-简介"><a href="#1-1-简介" class="headerlink" title="1.1.  简介"></a>1.1.  简介</h2><p><strong>SpringMVC框架基于组件方式的执行流程</strong></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/springmvc%E6%89%A7%E8%A1%8C%E6%B5%81%E7%A8%8B%E5%8E%9F%E7%90%86.jpg" class="lozad"></p><p>1.导包</p><p>2.写配置</p><p>　配置前端控制器。指明springmvc的配置文件的位置</p><p>　配置视图解析器，简化方法返回值（目标页面地址），实现前缀+返回值+后缀以拼接地址。</p><p>3.测试</p><h2 id="1-2-入门案例"><a href="#1-2-入门案例" class="headerlink" title="1.2.  入门案例"></a>1.2.  入门案例</h2><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191005202523.png" class="lozad"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">==============================  pom.xml  ==============================</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.orbit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springmvc_01_newstart<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>springmvc_01_newstart Maven Webapp<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- FIXME change it to the project's website --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.example.com<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring.version</span>&gt;</span>5.0.2.RELEASE<span class="tag">&lt;/<span class="name">spring.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>springmvc_01_newstart<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">pluginManagement</span>&gt;</span><span class="comment">&lt;!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-clean-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-resources-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-surefire-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.22.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-war-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-install-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-deploy-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">pluginManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">==============================  web.xml  ==============================</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE web-app PUBLIC</span></span><br><span class="line"><span class="meta"> "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"</span></span><br><span class="line"><span class="meta"> "http://java.sun.com/dtd/web-app_2_3.dtd" &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Archetype Created Web Application<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--配置解决中文乱码的过滤器 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>characterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>characterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 前端控制器 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 加载SpringMVC的配置文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:springmvc.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">==============================  springmvc.xml  ==============================</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/mvc/spring-mvc.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context/spring-context.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 开启注解扫描 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.orbit"</span>&gt;</span><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置视图解析器对象:可以根据服务方法的返回值,自动的拼接最终的跳转路径--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"internalResourceViewResolver"</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prefix"</span> <span class="attr">value</span>=<span class="string">"/WEB-INF/pages/"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".jsp"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 开启SpringMVC框架注解的支持：自动配置处理器映射器和处理器适配器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">==============================  FirstController.java  ==============================</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.orbit.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">firstController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(path=<span class="string">"/hello"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sayHello</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"hello,SpringMVC"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">==============================  index,jsp  ==============================</span><br><span class="line"></span><br><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h3&gt;第一个springMVC程序&lt;/h3&gt;</span><br><span class="line"></span><br><span class="line">    &lt;a href="hello"&gt;点我跳转&lt;/a&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line">==============================  success,jsp  ==============================</span><br><span class="line"></span><br><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    跳转成功！</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191005203107.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191005205425.png" class="lozad"></p><h2 id="1-3-用到的注解"><a href="#1-3-用到的注解" class="headerlink" title="1.3.  用到的注解"></a>1.3.  用到的注解</h2><p><code>@RequestMapping</code>:表示请求的具体的模块</p><p>　　　　<code>value=&quot;/xx&quot;</code>或<code>path=&quot;/xx&quot;</code>：指定请求的url</p><p>　　　　<code>method={RequestMethod.GET}</code>：指定请求方式，GET，POST，…，是一个枚举类型的数组</p><p>　　　　<code>params={&quot;&quot;}</code>：指定请求中必须包含的请求参数的表达式集，是一个String类型的数组</p><p>　　　　　　<code>params={&quot;param1&quot;}</code>：请求中必须包含请求参数params1</p><p>　　　　　　<code>params={&quot;!param1&quot;}</code>：请求中不能包含请求参数param1</p><p>　　　　　　<code>params={&quot;param1=123&quot;}</code>：请求中必须包含请求参数params1，且其值必须是123</p><p>　　　　　　<code>params={&quot;param1!=123&quot;}</code>：请求中包含的请求参数的值不能是123（也可不包含param1，此时param1=null）</p><p>　　　　　　<code>params={&quot;param1=123&quot;,&quot;param2=zs&quot;}</code>：请求中必须包含请求参数params1和param2，且param1=123,param2=zs</p><p>　　　　<code>headers={&quot;k=v&quot;}</code>：指定发送的请求中必须包含的请求头</p><p><strong><code>@RequestParam</code></strong>：获取请求的参数值，相当于<code>request.getParameter(&quot;user&quot;);</code></p><p>　　　　<code>value=&quot;user&quot;</code>：指定请求参数的key</p><p>　　　　<code>required</code>：是否必须包含请求参数，true表示url一定要包含该请求参数，false表示可不包含</p><p>　　　　<code>defaultValue</code>：设置该参数的默认值</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191006125455.png" class="lozad"></p><p><code>RequestHeader</code>：获取请求头的部分的值</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191006131214.png" class="lozad"></p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191006131407.png" class="lozad"></p><p><code>@RequestBody</code>：获取请求体内容</p><p><code>@PathVariable</code>获取请求路径中对应占位符的值。例如：url中有/delete/{id}，{id}就是占位符 。注意：1个占位符只能占1层路径<img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191006111417.png" class="lozad"></p><p><code>@ModelAttribute</code>：出现在方法上：表示当前方法会在控制器方法执行前线执行。出现在参数上：获取指定的数据给参数赋值。 </p><p><code>@CookieValue</code>·：用于获取指定cookie的名称的值</p><h1 id="2-请求参数绑定"><a href="#2-请求参数绑定" class="headerlink" title="2.  请求参数绑定"></a>2.  请求参数绑定</h1><h2 id="2-1-传入POJO，级联"><a href="#2-1-传入POJO，级联" class="headerlink" title="2.1.  传入POJO，级联"></a>2.1.  传入POJO，级联</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">==============================  Account.java  ==============================</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.orbit.domain;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Account</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String pwd;</span><br><span class="line">    <span class="keyword">private</span> Double money;</span><br><span class="line">    <span class="keyword">private</span> User user;</span><br><span class="line">    <span class="keyword">private</span> List&lt;User&gt; list;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;String,User&gt; map;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//getter setter toString</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.orbit.domain;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String uname;</span><br><span class="line">    <span class="keyword">private</span> Integer uage;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//getter setter toString</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">==============================  index.jsp  ==============================</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">    &lt;form action=<span class="string">"params/saveAccount"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">序号：&lt;input type=<span class="string">"text"</span> name=<span class="string">"id"</span>&gt;&lt;br&gt;</span><br><span class="line">        密码：&lt;input type=<span class="string">"text"</span> name=<span class="string">"pwd"</span>&gt;&lt;br&gt;</span><br><span class="line">        金额：&lt;input type=<span class="string">"text"</span> name=<span class="string">"money"</span>&gt;&lt;br&gt;</span><br><span class="line">        用户：&lt;input type=<span class="string">"text"</span> name=<span class="string">"user.uname"</span>&gt;&lt;br&gt;</span><br><span class="line">        年龄：&lt;input type=<span class="string">"text"</span> name=<span class="string">"user.uage"</span>&gt;&lt;br&gt;</span><br><span class="line">        用户：&lt;input type=<span class="string">"text"</span> name=<span class="string">"list[0].uname"</span>&gt;&lt;br&gt;</span><br><span class="line">        年龄：&lt;input type=<span class="string">"text"</span> name=<span class="string">"list[0].uage"</span>&gt;&lt;br&gt;</span><br><span class="line">        用户：&lt;input type=<span class="string">"text"</span> name=<span class="string">"map['one'].uname"</span>&gt;&lt;br&gt;</span><br><span class="line">        年龄：&lt;input type=<span class="string">"text"</span> name=<span class="string">"map['one'].uage"</span>&gt;&lt;br&gt;</span><br><span class="line">        &lt;input type=<span class="string">"submit"</span> value=<span class="string">"提交"</span>&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">==============================  ParamsController.java  ==============================</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.orbit.controller;</span><br><span class="line"><span class="keyword">import</span> com.orbit.domain.Account;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/params"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ParamsController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/saveAccount"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">savaAccount</span><span class="params">(Account account)</span></span>&#123;</span><br><span class="line">        System.out.println(account);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">==============================  其他页面同入门案例  ==============================</span><br></pre></td></tr></table></figure><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191005223154.png" class="lozad"></p><h2 id="2-2-数据输出的方式"><a href="#2-2-数据输出的方式" class="headerlink" title="2.2. 数据输出的方式"></a>2.2. 数据输出的方式</h2><h3 id="（1）传入原生API-方式1"><a href="#（1）传入原生API-方式1" class="headerlink" title="（1）传入原生API (方式1)"></a>（1）传入原生API (方式1)</h3><p>SpringMVC的handler接收如下的ServletAPI类型的参数：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">• HttpServletRequest</span><br><span class="line">• HttpServletResponse</span><br><span class="line">• HttpSession</span><br><span class="line">• java<span class="selector-class">.security</span><span class="selector-class">.Principal</span></span><br><span class="line">• Locale</span><br><span class="line">• InputStream</span><br><span class="line">• OutputStream</span><br><span class="line">• Reader</span><br><span class="line">• Writer</span><br></pre></td></tr></table></figure><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191006134635.png" class="lozad"></p><h3 id="（2）Map，Model，ModelMap（方式2）"><a href="#（2）Map，Model，ModelMap（方式2）" class="headerlink" title="（2）Map，Model，ModelMap（方式2）"></a>（2）Map，Model，ModelMap（方式2）</h3><p>处理方法返回时，Map中的数据会自动添加到模型中</p><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191006142531.png" class="lozad"></p><h3 id="（3）ModelAndView作为返回值输出（方式3）"><a href="#（3）ModelAndView作为返回值输出（方式3）" class="headerlink" title="（3）ModelAndView作为返回值输出（方式3）"></a>（3）ModelAndView作为返回值输出（方式3）</h3><ul><li><p>方法的返回值可以是ModelAndView类型，</p></li><li><p>既包含视图信息（页面地址），也包含模型数据（携带到页面的数据），模型数据存放在请求域（requestScope）中。</p></li></ul><p><img alt="1570343906145" data-src="C:%5CUsers%5CAdministrator.RG4-44%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1570343906145.png" class="lozad"></p><h3 id="（4）-SessionAttributes临时保存数据（方式4）-了解"><a href="#（4）-SessionAttributes临时保存数据（方式4）-了解" class="headerlink" title="（4）@SessionAttributes临时保存数据（方式4）(了解)"></a>（4）@SessionAttributes临时保存数据（方式4）(了解)</h3><p><code>@SessionAttributes</code>只能标在类上，是SpringMVC提供的一种临时在session域中保存数据的方式。</p><p>　　　　<code>value=&quot;xx&quot;</code>：本类中以xx为key所对应的值，临时复制到session域中</p><p>规则：将该类中保存在 <strong>BindingAwareModelMap</strong> 或  <strong>ModelAndView</strong> 中的数据，临时复制一份到session域中。</p><h3 id="（5）-ModelAttribute"><a href="#（5）-ModelAttribute" class="headerlink" title="（5）@ModelAttribute"></a>（5）@ModelAttribute</h3><h3 id="（6）-ResponseBody响应json数据"><a href="#（6）-ResponseBody响应json数据" class="headerlink" title="（6）@ResponseBody响应json数据"></a>（6）@ResponseBody响应json数据</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">==============================  pom.xml  ==============================</span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 新增依赖 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-annotations<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">==============================  springmvc.xml  ==============================</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/mvc/spring-mvc.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context/spring-context.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.yanghan"</span>&gt;</span><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"internalResourceViewResolver"</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prefix"</span> <span class="attr">value</span>=<span class="string">"/WEB-INF/pages/"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".jsp"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 告诉前端控制器，哪些路径下的资源不拦截--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">"/js/**"</span> <span class="attr">location</span>=<span class="string">"/js/"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">"/css/**"</span> <span class="attr">location</span>=<span class="string">"/css/"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">"/images/**"</span> <span class="attr">location</span>=<span class="string">"/images/"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span><span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">==============================  index.jsp  ==============================</span><br><span class="line"></span><br><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">    &lt;script src="js/jquery.min.js"&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">// 页面加载，绑定单击事件</span></span><br><span class="line">        $(function()&#123;</span><br><span class="line">            $(<span class="string">"#btn"</span>).click(function()&#123;</span><br><span class="line">                <span class="comment">// alert("hello btn");</span></span><br><span class="line">                <span class="comment">// 发送ajax请求</span></span><br><span class="line">                $.ajax(&#123;</span><br><span class="line">                    <span class="comment">// 编写json格式，设置属性和值</span></span><br><span class="line">                    url:<span class="string">"demo/testAjax"</span>,</span><br><span class="line">                    contentType:<span class="string">"application/json;charset=UTF-8"</span>,</span><br><span class="line">                    data:<span class="string">'&#123;"uid":"10001","uname":"zs","upwd":123&#125;'</span>,</span><br><span class="line">                    dataType:<span class="string">"json"</span>,</span><br><span class="line">                    type:<span class="string">"post"</span>,</span><br><span class="line">                    success:function(data)&#123;</span><br><span class="line">                        <span class="comment">// data服务器端响应的json的数据，进行解析</span></span><br><span class="line">                        alert(data);</span><br><span class="line">                        alert(data.uid);</span><br><span class="line">                        alert(data.uname);</span><br><span class="line">                        alert(data.upwd);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line"></span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button id="btn"&gt;点我&lt;/button&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">==============================  TestController.java  ==============================</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.yanghan.controller;</span><br><span class="line"><span class="keyword">import</span> com.yanghan.domain.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/demo"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/testAjax"</span>)</span><br><span class="line">   <span class="keyword">public</span> <span class="meta">@ResponseBody</span> <span class="function">User <span class="title">testAjax</span><span class="params">(@RequestBody User user)</span></span>&#123;</span><br><span class="line">        System.out.println(user.toString());</span><br><span class="line">        user.setUname(<span class="string">"张三"</span>);</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191006181450.png" class="lozad"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-SpringMVC&quot;&gt;&lt;a href=&quot;#1-SpringMVC&quot; class=&quot;headerlink&quot; title=&quot;1.  SpringMVC&quot;&gt;&lt;/a&gt;1.  SpringMVC&lt;/h1&gt;&lt;h2 id=&quot;1-1-简介&quot;&gt;&lt;a href=&quot;#1-1-简介&quot;
      
    
    </summary>
    
      <category term="框架" scheme="https://cometorbityh.github.io/categories/%E6%A1%86%E6%9E%B6/"/>
    
    
      <category term="Spring框架" scheme="https://cometorbityh.github.io/tags/Spring%E6%A1%86%E6%9E%B6/"/>
    
      <category term="SpringMVC框架" scheme="https://cometorbityh.github.io/tags/SpringMVC%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>Spring框架——AOP</title>
    <link href="https://cometorbityh.github.io/2019/10/05/Spring%E6%A1%86%E6%9E%B6%E2%80%94%E2%80%94AOP/"/>
    <id>https://cometorbityh.github.io/2019/10/05/Spring框架——AOP/</id>
    <published>2019-10-05T05:35:06.000Z</published>
    <updated>2019-10-05T12:22:59.679Z</updated>
    
    <content type="html"><![CDATA[<h1 id="3-Spring中的AOP"><a href="#3-Spring中的AOP" class="headerlink" title="3.  Spring中的AOP"></a>3.  Spring中的AOP</h1><h3 id="3-1-引出问题"><a href="#3-1-引出问题" class="headerlink" title="3.1.  引出问题"></a>3.1.  引出问题</h3><p>（1）完善之前的account案例</p><p>（2）引出问题</p><p>（3）动态代理的2种实现方式</p><p>（4）解决问题</p><h3 id="3-2-AOP的基本概述"><a href="#3-2-AOP的基本概述" class="headerlink" title="3.2.  AOP的基本概述"></a>3.2.  AOP的基本概述</h3><p>（1）AOP中的一些专业术语</p><p>　　<strong><code>连接点（Joinpoint）</code></strong>：业务层中所有的方法</p><p>　　<strong><code>切入点（Pointcut）</code></strong>：业务层中所要代理增强的方法</p><p>　　　　　　<font color="red">切入点一定是连接点，但连接点不一定是切入点</font></p><p>　　<strong><code>通知/增强（advice）</code></strong>：拦截到连接点后做的事情即通知。</p><p>　　　　　　通知类型：前置通知，后置通知，异常通知，最终通知，环绕通知</p><p>　　　　　　<img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/%E9%80%9A%E7%9F%A5%E7%9A%84%E7%B1%BB%E5%9E%8B.jpg" class="lozad"></p><p>　　</p><p>　　<code>引介（Introduction）</code>一种特殊的通知在不修改类代码的前提下, Introduction 可以在运行期为类动态地添加一些方 </p><p>法或 Field。 </p><p>　　<strong><code>目标对象（Target）</code></strong>代理的目标对象。 </p><p>　　<strong><code>代理（Proxy）</code></strong>一个类被 AOP 织入增强后，就产生一个结果代理类。 </p><p>　　<strong><code>切面（Aspect）</code></strong> 是切入点和通知（引介）的结合。 </p><p>　　<strong><code>织入（Weaving）</code>:</strong> 是指把增强应用到目标对象来创建新的代理对象的过程。 </p><p>　　　　　　　　　　　spring 采用动态代理织入，而 AspectJ 采用编译期织入和类装载期织入。 </p><p>　　</p><p>　　</p><p>　　</p><h3 id="3-3-基于XML的AOP配置"><a href="#3-3-基于XML的AOP配置" class="headerlink" title="3.3.  基于XML的AOP配置"></a>3.3.  基于XML的AOP配置</h3><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191004223353.png" class="lozad"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">==============================  pom.xml  ==============================</span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.itheima<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>day03_eesy_04adviceType<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.2.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.8.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">==============================  bean.xml  ==============================</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/aop/spring-aop.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置srping的Ioc,把service对象配置进来--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"accountService"</span> <span class="attr">class</span>=<span class="string">"com.itheima.service.impl.AccountServiceImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置Logger类 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"logger"</span> <span class="attr">class</span>=<span class="string">"com.itheima.utils.Logger"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--配置AOP--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 配置切入点表达式 id属性用于指定表达式的唯一标识。expression属性用于指定表达式内容</span></span><br><span class="line"><span class="comment">              此标签写在aop:aspect标签内部只能当前切面使用。</span></span><br><span class="line"><span class="comment">              它还可以写在aop:aspect外面，此时就变成了所有切面可用</span></span><br><span class="line"><span class="comment">          --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">"pt1"</span> <span class="attr">expression</span>=<span class="string">"execution(* com.itheima.service.impl.*.*(..))"</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:pointcut</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--配置切面 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:aspect</span> <span class="attr">id</span>=<span class="string">"logAdvice"</span> <span class="attr">ref</span>=<span class="string">"logger"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 配置前置通知：在切入点方法执行之前执行</span></span><br><span class="line"><span class="comment">            &lt;aop:before method="beforePrintLog" pointcut-ref="pt1" &gt;&lt;/aop:before&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- 配置后置通知：在切入点方法正常执行之后值。它和异常通知永远只能执行一个</span></span><br><span class="line"><span class="comment">            &lt;aop:after-returning method="afterReturningPrintLog" pointcut-ref="pt1"&gt;&lt;/aop:after-returning&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- 配置异常通知：在切入点方法执行产生异常之后执行。它和后置通知永远只能执行一个</span></span><br><span class="line"><span class="comment">            &lt;aop:after-throwing method="afterThrowingPrintLog" pointcut-ref="pt1"&gt;&lt;/aop:after-throwing&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- 配置最终通知：无论切入点方法是否正常执行它都会在其后面执行</span></span><br><span class="line"><span class="comment">            &lt;aop:after method="afterPrintLog" pointcut-ref="pt1"&gt;&lt;/aop:after&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- 配置环绕通知 详细的注释请看Logger类中--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">aop:around</span> <span class="attr">method</span>=<span class="string">"aroundPringLog"</span> <span class="attr">pointcut-ref</span>=<span class="string">"pt1"</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:around</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">aop:aspect</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br></pre></td><td class="code"><pre><span class="line">==============================  AccountService.java  ==============================</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.itheima.service;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 账户的业务层接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IAccountService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 模拟保存账户</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">   <span class="function"><span class="keyword">void</span> <span class="title">saveAccount</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 模拟更新账户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> i</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">   <span class="function"><span class="keyword">void</span> <span class="title">updateAccount</span><span class="params">(<span class="keyword">int</span> i)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除账户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">   <span class="function"><span class="keyword">int</span>  <span class="title">deleteAccount</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">==============================  AccountServiceImpl.java  ==============================</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.itheima.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.itheima.service.IAccountService;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 账户的业务层实现类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountServiceImpl</span> <span class="keyword">implements</span> <span class="title">IAccountService</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveAccount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"执行了保存"</span>);</span><br><span class="line"><span class="comment">//        int i=1/0;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateAccount</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"执行了更新"</span>+i);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">deleteAccount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"执行了删除"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">==============================  Logger.java  ==============================</span><br><span class="line">    </span><br><span class="line"><span class="keyword">package</span> com.itheima.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.ProceedingJoinPoint;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用于记录日志的工具类，它里面提供了公共的代码</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Logger</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 前置通知</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">beforePrintLog</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"前置通知Logger类中的beforePrintLog方法开始记录日志了。。。"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 后置通知</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">afterReturningPrintLog</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"后置通知Logger类中的afterReturningPrintLog方法开始记录日志了。。。"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 异常通知</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">afterThrowingPrintLog</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"异常通知Logger类中的afterThrowingPrintLog方法开始记录日志了。。。"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 最终通知</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">afterPrintLog</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"最终通知Logger类中的afterPrintLog方法开始记录日志了。。。"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 环绕通知</span></span><br><span class="line"><span class="comment">     * 问题：</span></span><br><span class="line"><span class="comment">     *      当我们配置了环绕通知之后，切入点方法没有执行，而通知方法执行了。</span></span><br><span class="line"><span class="comment">     * 分析：</span></span><br><span class="line"><span class="comment">     *      通过对比动态代理中的环绕通知代码，发现动态代理的环绕通知有明确的切入点方法调用，而我们的代码中没有。</span></span><br><span class="line"><span class="comment">     * 解决：</span></span><br><span class="line"><span class="comment">     *      Spring框架为我们提供了一个接口：ProceedingJoinPoint。该接口有一个方法proceed()，此方法就相当于明确调用切入点方法。</span></span><br><span class="line"><span class="comment">     *      该接口可以作为环绕通知的方法参数，在程序执行时，spring框架会为我们提供该接口的实现类供我们使用。</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * spring中的环绕通知：</span></span><br><span class="line"><span class="comment">     *      它是spring框架为我们提供的一种可以在代码中手动控制增强方法何时执行的方式。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">aroundPringLog</span><span class="params">(ProceedingJoinPoint pjp)</span></span>&#123;</span><br><span class="line">        Object rtValue = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            Object[] args = pjp.getArgs();<span class="comment">//得到方法执行所需的参数</span></span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">"Logger类中的aroundPringLog方法开始记录日志了。。。前置"</span>);</span><br><span class="line"></span><br><span class="line">            rtValue = pjp.proceed(args);<span class="comment">//明确调用业务层方法（切入点方法）</span></span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">"Logger类中的aroundPringLog方法开始记录日志了。。。后置"</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> rtValue;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Throwable t)&#123;</span><br><span class="line">            System.out.println(<span class="string">"Logger类中的aroundPringLog方法开始记录日志了。。。异常"</span>);</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(t);</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"Logger类中的aroundPringLog方法开始记录日志了。。。最终"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">==============================  AOPTest.java  ==============================</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.itheima.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.itheima.service.IAccountService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 测试AOP的配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AOPTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//1.获取容器</span></span><br><span class="line">        ApplicationContext ac = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"bean.xml"</span>);</span><br><span class="line">        <span class="comment">//2.获取对象</span></span><br><span class="line">        IAccountService as = (IAccountService)ac.getBean(<span class="string">"accountService"</span>);</span><br><span class="line">        <span class="comment">//3.执行方法</span></span><br><span class="line">        as.saveAccount();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-4-基于注解的AOP配置"><a href="#3-4-基于注解的AOP配置" class="headerlink" title="3.4.  基于注解的AOP配置"></a>3.4.  基于注解的AOP配置</h3><p><code>@Pointcut(&quot;execution(* com.xxx.service.impl.*.*(..))&quot;)</code>：切入点表达式注解</p><p><code>private void pc(){}</code></p><p><code>@Before(pc())</code>：前置通知注解</p><p> <code>@AfterReturning(&quot;pc()&quot;)</code>：后置通知注解</p><p><code>@AfterThrowing(&quot;pc()&quot;)</code>：异常通知注解</p><p><code>@After&quot;pc()&quot;)</code>：最终通知注解</p><p><code>@Around(&quot;pc()&quot;)</code>：环绕通知注解</p><blockquote><p><strong>注意：</strong></p><p>使用注解AOP配置会先执行最终通知，后执行后置通知/异常通知；</p><p>使用环绕通知则按照正常顺序执行。</p><p>因此实际开发时应该注意这个细节，正确选择合适的注解。</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">==============================  pom.xml  ==============================</span><br><span class="line">......</span><br><span class="line"></span><br><span class="line">==============================  bean.xml  ==============================</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置要扫描的包--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.itheima"</span>&gt;</span><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置spring开启注解aop的支持--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:aspectj-autoproxy</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:aspectj-autoproxy</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line">==============================  AccountService.java  ==============================</span><br><span class="line">......</span><br><span class="line"></span><br><span class="line">==============================  AccountServiceImpl.java  ==============================</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.itheima.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.itheima.service.IAccountService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 账户的业务层实现类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span>(<span class="string">"accountService"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountServiceImpl</span> <span class="keyword">implements</span> <span class="title">IAccountService</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveAccount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"执行了保存"</span>);</span><br><span class="line"><span class="comment">//        int i=1/0;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateAccount</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"执行了更新"</span>+i);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">deleteAccount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"执行了删除"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">==============================  Logger.java  ==============================</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.itheima.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.ProceedingJoinPoint;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.*;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用于记录日志的工具类，它里面提供了公共的代码</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span>(<span class="string">"logger"</span>)</span><br><span class="line"><span class="meta">@Aspect</span>     <span class="comment">//表示当前类是切面</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Logger</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Pointcut</span>(<span class="string">"execution(* com.itheima.service.impl.*.*(..))"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">pc</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 前置通知</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Before</span>(<span class="string">"pc()"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">beforePrintLog</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"前置通知Logger类中的beforePrintLog方法开始记录日志了。。。"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 后置通知</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@AfterReturning</span>(<span class="string">"pc()"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">afterReturningPrintLog</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"后置通知Logger类中的afterReturningPrintLog方法开始记录日志了。。。"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 异常通知</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@AfterThrowing</span>(<span class="string">"pc()"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">afterThrowingPrintLog</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"异常通知Logger类中的afterThrowingPrintLog方法开始记录日志了。。。"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 最终通知</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@After</span>(<span class="string">"pc()"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">afterPrintLog</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"最终通知Logger类中的afterPrintLog方法开始记录日志了。。。"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 环绕通知</span></span><br><span class="line"><span class="comment">     * 问题：</span></span><br><span class="line"><span class="comment">     *      当我们配置了环绕通知之后，切入点方法没有执行，而通知方法执行了。</span></span><br><span class="line"><span class="comment">     * 分析：</span></span><br><span class="line"><span class="comment">     *      通过对比动态代理中的环绕通知代码，发现动态代理的环绕通知有明确的切入点方法调用，而我们的代码中没有。</span></span><br><span class="line"><span class="comment">     * 解决：</span></span><br><span class="line"><span class="comment">     *      Spring框架为我们提供了一个接口：ProceedingJoinPoint。该接口有一个方法proceed()，此方法就相当于明确调用切入点方法。</span></span><br><span class="line"><span class="comment">     *      该接口可以作为环绕通知的方法参数，在程序执行时，spring框架会为我们提供该接口的实现类供我们使用。</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * spring中的环绕通知：</span></span><br><span class="line"><span class="comment">     *      它是spring框架为我们提供的一种可以在代码中手动控制增强方法何时执行的方式。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Around</span>(<span class="string">"pc()"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">aroundPringLog</span><span class="params">(ProceedingJoinPoint pjp)</span></span>&#123;</span><br><span class="line">        Object rtValue = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            Object[] args = pjp.getArgs();<span class="comment">//得到方法执行所需的参数</span></span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">"Logger类中的aroundPringLog方法开始记录日志了。。。前置"</span>);</span><br><span class="line"></span><br><span class="line">            rtValue = pjp.proceed(args);<span class="comment">//明确调用业务层方法（切入点方法）</span></span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">"Logger类中的aroundPringLog方法开始记录日志了。。。后置"</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> rtValue;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Throwable t)&#123;</span><br><span class="line">            System.out.println(<span class="string">"Logger类中的aroundPringLog方法开始记录日志了。。。异常"</span>);</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(t);</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"Logger类中的aroundPringLog方法开始记录日志了。。。最终"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">==============================  AOPTest.java  ==============================</span><br><span class="line">......</span><br></pre></td></tr></table></figure><h1 id><a href="#" class="headerlink" title=" "></a> </h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;3-Spring中的AOP&quot;&gt;&lt;a href=&quot;#3-Spring中的AOP&quot; class=&quot;headerlink&quot; title=&quot;3.  Spring中的AOP&quot;&gt;&lt;/a&gt;3.  Spring中的AOP&lt;/h1&gt;&lt;h3 id=&quot;3-1-引出问题&quot;&gt;&lt;a href
      
    
    </summary>
    
      <category term="框架" scheme="https://cometorbityh.github.io/categories/%E6%A1%86%E6%9E%B6/"/>
    
    
      <category term="Spring框架" scheme="https://cometorbityh.github.io/tags/Spring%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>Spring——JdbcTemplate,事务控制</title>
    <link href="https://cometorbityh.github.io/2019/10/04/Spring%E2%80%94%E2%80%94JdbcTemplate-%E4%BA%8B%E5%8A%A1%E6%8E%A7%E5%88%B6/"/>
    <id>https://cometorbityh.github.io/2019/10/04/Spring——JdbcTemplate-事务控制/</id>
    <published>2019-10-04T15:13:33.000Z</published>
    <updated>2019-10-05T05:33:44.980Z</updated>
    
    <content type="html"><![CDATA[<h1 id="4-Spring中的JdbcTemlate"><a href="#4-Spring中的JdbcTemlate" class="headerlink" title="4.  Spring中的JdbcTemlate"></a>4.  Spring中的JdbcTemlate</h1><p><code>JdbcTemplate</code> 是 spring 框架中提供的一个对象，是对原始 Jdbc API 对象的简单封装。</p><p>导包： </p><p>　　<code>spring-jdbc-5.0.2.RELEASE.jar</code> （数据库相关）</p><p>　　<code>spring-tx-5.0.2.RELEASE.jar</code>（事务相关）</p><p>JdbcTemplate的基础案例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">==============================  Account.java  ==============================</span><br><span class="line">    </span><br><span class="line"><span class="keyword">package</span> com.yanghan.domain;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 账户实体类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Account</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Float money;</span><br><span class="line">    <span class="comment">//get + set</span></span><br><span class="line">    <span class="comment">//toString()</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">==============================  pom.xml  ==============================</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.yanghan<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring_jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.2.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.2.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-tx<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.2.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img alt data-src="https://yanghanblog.oss-cn-hangzhou.aliyuncs.com/img/20191005000100.png" class="lozad"></p><h1 id="5-Spring中的事务控制"><a href="#5-Spring中的事务控制" class="headerlink" title="5.  Spring中的事务控制"></a>5.  Spring中的事务控制</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;4-Spring中的JdbcTemlate&quot;&gt;&lt;a href=&quot;#4-Spring中的JdbcTemlate&quot; class=&quot;headerlink&quot; title=&quot;4.  Spring中的JdbcTemlate&quot;&gt;&lt;/a&gt;4.  Spring中的JdbcTemla
      
    
    </summary>
    
      <category term="框架" scheme="https://cometorbityh.github.io/categories/%E6%A1%86%E6%9E%B6/"/>
    
    
      <category term="Spring框架" scheme="https://cometorbityh.github.io/tags/Spring%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
</feed>
