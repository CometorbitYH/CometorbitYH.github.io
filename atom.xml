<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Young Blog</title>
  
  <subtitle>一只在学习中不断成长的小白</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://cometorbityh.github.io/"/>
  <updated>2019-08-27T15:48:58.046Z</updated>
  <id>https://cometorbityh.github.io/</id>
  
  <author>
    <name>杨涵</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Next主题格式配置记录</title>
    <link href="https://cometorbityh.github.io/2019/08/27/Next%E4%B8%BB%E9%A2%98%E6%A0%BC%E5%BC%8F%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/"/>
    <id>https://cometorbityh.github.io/2019/08/27/Next主题格式配置记录/</id>
    <published>2019-08-27T15:23:14.000Z</published>
    <updated>2019-08-27T15:48:58.046Z</updated>
    
    <content type="html"><![CDATA[<p>文章背景色<a id="more"></a></p><p><img src="http://pww25zpix.bkt.clouddn.com/jsp/hexo_changecolor.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;文章背景色&lt;/p&gt;
    
    </summary>
    
      <category term="Github" scheme="https://cometorbityh.github.io/categories/Github/"/>
    
      <category term="hexo" scheme="https://cometorbityh.github.io/categories/Github/hexo/"/>
    
    
      <category term="hexo" scheme="https://cometorbityh.github.io/tags/hexo/"/>
    
      <category term="next" scheme="https://cometorbityh.github.io/tags/next/"/>
    
  </entry>
  
  <entry>
    <title>使用PicGo + 七牛云 快速创建图床</title>
    <link href="https://cometorbityh.github.io/2019/08/27/%E4%BD%BF%E7%94%A8PicGo-%E4%B8%83%E7%89%9B%E4%BA%91-%E5%BF%AB%E9%80%9F%E5%88%9B%E5%BB%BA%E5%9B%BE%E5%BA%8A/"/>
    <id>https://cometorbityh.github.io/2019/08/27/使用PicGo-七牛云-快速创建图床/</id>
    <published>2019-08-27T12:04:12.000Z</published>
    <updated>2019-08-27T15:25:44.190Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>​    上次是解决了hexo显示不出本地图片的问题，但是如果电脑出问题了，导致图片全都不见了，那么所带来的麻烦可不小，因此我们可以考虑把这些博客中的图片上传在图床（可以理解为专门存储图片的服务器）中，这样就不用担心图片丢失了，只要记住服务器网站的账号密码就可以永久保存图片了。<a id="more"></a></p></blockquote><ol><li><p>注册七牛云账号（<a href="https://www.qiniu.com/），并完成实名认证。" target="_blank" rel="noopener">https://www.qiniu.com/），并完成实名认证。</a></p></li><li><p>创建存储空间</p><p><img src="http://pww25zpix.bkt.clouddn.com/jsp/qiniu/01.png" alt></p></li></ol><ol start="3"><li><p>下载并安装PicGo（<a href="https://github.com/Molunerfinn/PicGo/releases）" target="_blank" rel="noopener">https://github.com/Molunerfinn/PicGo/releases）</a></p><p><img src="http://pww25zpix.bkt.clouddn.com/jsp/qiniu_003_1.png" alt></p></li><li><p>七牛图床设置</p><img src="http://pww25zpix.bkt.clouddn.com/jsp/qiniu_002.png" width="700"></li></ol>   <img src="http://pww25zpix.bkt.clouddn.com/jsp/qiniu_002_3.png" width="700">   <img src="http://pww25zpix.bkt.clouddn.com/jsp/qiniu_002_2.png" width="700">   <img src="http://pww25zpix.bkt.clouddn.com/jsp/qiniu_002_4.png" width="700"><ol start="5"><li><p>上传图片</p><img src="http://pww25zpix.bkt.clouddn.com/jsp/qiniu_002_5.png" width="700"></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;​    上次是解决了hexo显示不出本地图片的问题，但是如果电脑出问题了，导致图片全都不见了，那么所带来的麻烦可不小，因此我们可以考虑把这些博客中的图片上传在图床（可以理解为专门存储图片的服务器）中，这样就不用担心图片丢失了，只要记住服务器网站的账号密码就可以永久保存图片了。&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Github" scheme="https://cometorbityh.github.io/categories/Github/"/>
    
      <category term="hexo" scheme="https://cometorbityh.github.io/categories/Github/hexo/"/>
    
    
      <category term="hexo" scheme="https://cometorbityh.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>JSP——EL表达式</title>
    <link href="https://cometorbityh.github.io/2019/08/26/JSP%E2%80%94%E2%80%94EL%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>https://cometorbityh.github.io/2019/08/26/JSP——EL表达式/</id>
    <published>2019-08-26T06:14:53.000Z</published>
    <updated>2019-08-28T06:26:37.839Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>  EL表达式，Expression Language，可以获取JSP页面的数据</p><p>  EL表达式的格式为  <code>${expression}</code>  </p><p>在JSP页面的任何静态部分均可使用该格式获取到指定值</p></blockquote><a id="more"></a><p>[TOC]</p><h3 id="1-使用EL获取数据"><a href="#1-使用EL获取数据" class="headerlink" title="1  使用EL获取数据"></a>1  使用EL获取数据</h3><h4 id="1-1-从四大域中获取数据"><a href="#1-1-从四大域中获取数据" class="headerlink" title="1.1  从四大域中获取数据"></a>1.1  从四大域中获取数据</h4><pre><code>EL只能获取到四大域中的数据，因此要获取到某个数据，需要将其加入到某个域中，再使用EL表达式获取数据。</code></pre><h5 id="1-1-2-从四大域中依次查找数据-属性"><a href="#1-1-2-从四大域中依次查找数据-属性" class="headerlink" title="1.1.2  从四大域中依次查找数据 ${属性}"></a>1.1.2  从四大域中依次查找数据 <code>${属性}</code></h5><p>​        EL01.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%</span><br><span class="line">application.setAttribute(<span class="string">"name"</span>, <span class="string">"JAVA核心技术1"</span>);</span><br><span class="line">session.setAttribute(<span class="string">"name"</span>, <span class="string">"JAVA核心技术2"</span>);</span><br><span class="line">request.setAttribute(<span class="string">"name"</span>, <span class="string">"JAVA核心技术3"</span>);</span><br><span class="line">pageContext.setAttribute(<span class="string">"name"</span>, <span class="string">"JAVA核心技术4"</span>);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;!-- $&#123;属性名&#125;会按照从小到大的顺序依次从四大域中查找指定名称的属性值 --&gt;</span><br><span class="line">name = $&#123;name&#125;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>​        输出结果为page域的属性值（最小的域）</p><p><img src="http://pww25zpix.bkt.clouddn.com/blog/jsp/el/001.png" alt="从四大域中依次查找数据"></p><h5 id="1-1-2-从指定域中获取数据-域scope-属性"><a href="#1-1-2-从指定域中获取数据-域scope-属性" class="headerlink" title="1.1.2  从指定域中获取数据  ${域scope.属性}"></a>1.1.2  从指定域中获取数据  <code>${域scope.属性}</code></h5><p>​        依次从四大域查找属性效率过低，为了提高效率，我们应该想想如何从指定域中直接获取某个属性值。</p><p>​        EL有4个域属性空间相关的内置对象，分别为pageScope，requestScope，sessionScope，applicationScope。表示从对应域属性空间中查找指定key。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- EL01.jsp --&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%</span><br><span class="line">application.setAttribute(<span class="string">"name"</span>, <span class="string">"JAVA核心技术1"</span>);</span><br><span class="line">session.setAttribute(<span class="string">"name"</span>, <span class="string">"JAVA核心技术2"</span>);</span><br><span class="line">request.setAttribute(<span class="string">"name"</span>, <span class="string">"JAVA核心技术3"</span>);</span><br><span class="line">pageContext.setAttribute(<span class="string">"name"</span>, <span class="string">"JAVA核心技术4"</span>);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;!-- $&#123;属性名&#125;会按照从小到大的顺序依次从四大域中查找指定名称的属性值 --&gt;</span><br><span class="line">name = $&#123;pageScope.name&#125;&lt;br/&gt;</span><br><span class="line">name = $&#123;requestScope.name&#125;&lt;br/&gt;</span><br><span class="line">name = $&#123;sessionScope.name&#125;&lt;br/&gt;</span><br><span class="line">name = $&#123;applicationScope.name&#125;&lt;br/&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p><img src="/2019/08/26/JSP——EL表达式/%E4%BB%8E%E6%8C%87%E5%AE%9A%E5%9F%9F%E4%B8%AD%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE.png" alt="从指定域中获取数据"></p><h4 id="1-2-获取Bean的属性-key-属性"><a href="#1-2-获取Bean的属性-key-属性" class="headerlink" title="1.2  获取Bean的属性 ${key.属性}"></a>1.2  获取Bean的属性 <code>${key.属性}</code></h4><p>​    创建一个Bean的对象，将这个Bean对象加入到域属性空间中，通过  <code>${key.属性}</code>  可以访问该对象的属性值。</p><p>​    注意：若访问对象为null，则EL也不会报空指针异常，显示结果为” “</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* School.java */</span></span><br><span class="line"><span class="keyword">package</span> com.orbit.el;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">School</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> String scname;</span><br><span class="line"><span class="keyword">private</span> String scaddress;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">School</span><span class="params">(String scname, String scaddress)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>();</span><br><span class="line"><span class="keyword">this</span>.scname = scname;</span><br><span class="line"><span class="keyword">this</span>.scaddress = scaddress;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getScname</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> scname;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setScname</span><span class="params">(String scname)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.scname = scname;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getScaddress</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> scaddress;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setScaddress</span><span class="params">(String scaddress)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.scaddress = scaddress;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"School [scname="</span> + scname + <span class="string">", scaddress="</span> + scaddress + <span class="string">"]"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Student.java */</span></span><br><span class="line"><span class="keyword">package</span> com.orbit.el;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> String sname;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> sno;</span><br><span class="line"><span class="keyword">private</span> School school;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(String sname, <span class="keyword">int</span> sno, School school)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>();</span><br><span class="line"><span class="keyword">this</span>.sname = sname;</span><br><span class="line"><span class="keyword">this</span>.sno = sno;</span><br><span class="line"><span class="keyword">this</span>.school = school;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getSname</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> sname;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSname</span><span class="params">(String sname)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.sname = sname;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getSno</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> sno;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSno</span><span class="params">(<span class="keyword">int</span> sno)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.sno = sno;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> School <span class="title">getSchool</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> school;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSchool</span><span class="params">(School school)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.school = school;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"Student [sname="</span> + sname + <span class="string">", sno="</span> + sno + <span class="string">", school="</span> + school + <span class="string">"]"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">"java"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span></span><br><span class="line"> <span class="keyword">import</span>=<span class="string">"com.orbit.el.*"</span>%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%</span><br><span class="line">School school = <span class="keyword">new</span> School(<span class="string">"清华大学"</span>,<span class="string">"北京"</span>);</span><br><span class="line">Student student = <span class="keyword">new</span> Student(<span class="string">"杨小杨"</span>,<span class="number">10001</span>,school);</span><br><span class="line"></span><br><span class="line">pageContext.setAttribute(<span class="string">"student"</span>, student);</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 若访问对象为<span class="keyword">null</span>，则EL也不会报空指针异常，显示结果为<span class="string">" "</span> --&gt;&gt;</span><br><span class="line">student = $&#123;student1&#125;</span><br><span class="line">student = $&#123;student&#125;&lt;br/&gt;</span><br><span class="line">student.sname = $&#123;student.sname&#125;&lt;br/&gt;</span><br><span class="line">student.sname = $&#123;student[<span class="string">'sname'</span>]&#125;&lt;br/&gt;</span><br><span class="line">student.sno = $&#123;student.sno&#125;&lt;br/&gt;</span><br><span class="line">student.sno = $&#123;student[<span class="string">'sno'</span>]&#125;&lt;br/&gt;</span><br><span class="line">student.school = $&#123;student.school&#125;&lt;br/&gt;</span><br><span class="line">student.school.scname = $&#123;student.school.scname&#125;&lt;br/&gt;</span><br><span class="line">student.school.scaddress = $&#123;student.school.scaddress&#125;&lt;br/&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><img src="/2019/08/26/JSP——EL表达式/EL%E8%AE%BF%E9%97%AEBean%E7%9A%84%E5%B1%9E%E6%80%A7.png" alt="EL访问Bean的属性"></p><h4 id="1-3-获取数组-array-i"><a href="#1-3-获取数组-array-i" class="headerlink" title="1.3  获取数组 ${array[i]}"></a>1.3  获取数组 <code>${array[i]}</code></h4><p>​    创建一个数组，将这个数组加入到域属性空间，通过  <code>${array[i]}</code>  可以访问该数组的第 i+1个元素。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">"java"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span></span><br><span class="line"> <span class="keyword">import</span>=<span class="string">"com.orbit.el.*"</span>%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%</span><br><span class="line">School[] schools = <span class="keyword">new</span> School[<span class="number">3</span>];</span><br><span class="line">schools[<span class="number">0</span>] = <span class="keyword">new</span> School(<span class="string">"清华大学"</span>,<span class="string">"中国北京"</span>);</span><br><span class="line">schools[<span class="number">1</span>] = <span class="keyword">new</span> School(<span class="string">"北京大学"</span>,<span class="string">"中国北京"</span>);</span><br><span class="line">schools[<span class="number">2</span>] = <span class="keyword">new</span> School(<span class="string">"厦门大学"</span>,<span class="string">"中国福建"</span>);</span><br><span class="line">pageContext.setAttribute(<span class="string">"schools"</span>, schools);</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">school[<span class="number">2</span>] = $&#123;schools[<span class="number">0</span>]&#125;&lt;br/&gt;</span><br><span class="line">school[<span class="number">2</span>].address = $&#123;schools[<span class="number">2</span>].scaddress&#125;&lt;br/&gt;</span><br><span class="line">&lt;!-- 数组下标超出上限，EL不会报越界异常 --&gt;</span><br><span class="line">school[<span class="number">3</span>] = $&#123;schools[<span class="number">3</span>]&#125;&lt;br/&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>​    <img src="/2019/08/26/JSP——EL表达式/EL%E8%AE%BF%E9%97%AE%E6%95%B0%E7%BB%84.png" alt="EL访问数组"></p><p>​      </p><h4 id="1-4-获取List中的元素-list-i"><a href="#1-4-获取List中的元素-list-i" class="headerlink" title="1.4  获取List中的元素 ${list[i]}"></a>1.4  获取List中的元素 <code>${list[i]}</code></h4><p>​    访问list与访问数组的方式一致。</p><p>​    注意：set是无序的，其中的元素没有索引，因此无法用该种方式访问。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">"java"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span></span><br><span class="line"> <span class="keyword">import</span>=<span class="string">"java.util.*"</span>%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%</span><br><span class="line">List&lt;String&gt; names = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">names.add(<span class="string">"熊大"</span>);</span><br><span class="line">names.add(<span class="string">"熊二"</span>);</span><br><span class="line">names.add(<span class="string">"光头强"</span>);</span><br><span class="line">pageContext.setAttribute(<span class="string">"names"</span>, names);</span><br><span class="line"></span><br><span class="line">%&gt;</span><br><span class="line">names[<span class="number">1</span>] = $&#123;names[<span class="number">1</span>]&#125;&lt;br/&gt;</span><br><span class="line">names[<span class="number">10</span>] = $&#123;names[<span class="number">10</span>]&#125;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><img src="/2019/08/26/JSP——EL表达式/EL%E8%AE%BF%E9%97%AEList.png" alt="EL访问List"></p><h4 id="1-5-获取Map中的元素-map-元素"><a href="#1-5-获取Map中的元素-map-元素" class="headerlink" title="1.5  获取Map中的元素 ${map.元素}"></a>1.5  获取Map中的元素 <code>${map.元素}</code></h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">"java"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span></span><br><span class="line"> <span class="keyword">import</span>=<span class="string">"java.util.*,com.orbit.el.*"</span>%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%</span><br><span class="line">Map&lt;String,Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">map.put(<span class="string">"school"</span>, <span class="keyword">new</span> School(<span class="string">"厦门大学"</span>,<span class="string">"中国福建"</span>));</span><br><span class="line">map.put(<span class="string">"name"</span>, <span class="string">"张三"</span>);</span><br><span class="line">map.put(<span class="string">"sex"</span>, <span class="string">"男"</span>);</span><br><span class="line">pageContext.setAttribute(<span class="string">"map"</span>, map);</span><br><span class="line">%&gt; </span><br><span class="line">&lt;!-- map.school是Object类型的，map.school.scname是默认Object型强转为School型 --&gt;</span><br><span class="line">$&#123;map.school.scname &#125;&lt;br/&gt;</span><br><span class="line">$&#123;map.name &#125;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>​    <img src="/2019/08/26/JSP——EL表达式/EL%E8%AE%BF%E9%97%AEMap.png" alt="EL访问Map"></p><h3 id="2-EL常见运算符"><a href="#2-EL常见运算符" class="headerlink" title="2    EL常见运算符"></a>2    EL常见运算符</h3><table><thead><tr><th align="center">序号</th><th align="center"><strong>类别</strong></th><th align="center"><strong>运算符</strong></th></tr></thead><tbody><tr><td align="center">1</td><td align="center">算术运算符</td><td align="center">+  -  *  /  %</td></tr><tr><td align="center">2</td><td align="center">关系运算符</td><td align="center">&gt;  &lt;  ==  &gt;=  &lt;=  !=</td></tr><tr><td align="center">3</td><td align="center">逻辑运算符</td><td align="center">&amp;&amp;(and)    ||(or)    !(not)</td></tr><tr><td align="center">4</td><td align="center">条件运算符</td><td align="center">？  ：</td></tr><tr><td align="center">5</td><td align="center">取值运算符</td><td align="center">.      [ ]</td></tr><tr><td align="center">6</td><td align="center">empty运算符</td><td align="center">empty</td></tr></tbody></table><h4 id="2-1-empty的用法"><a href="#2-1-empty的用法" class="headerlink" title="2.1  empty的用法"></a>2.1  empty的用法</h4><p>empty判空，四大域中的元素符合以下条件时empty的运算结果为true：</p><p>没有定义的属性</p><p>值为null的引用</p><p>值为空串的String引用</p><p>没有元素的数组或集合</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">"java"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span></span><br><span class="line"> <span class="keyword">import</span>=<span class="string">"java.util.*,com.orbit.el.*"</span>%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%</span><br><span class="line">String b = <span class="keyword">null</span>;</span><br><span class="line">String c = <span class="string">""</span>;</span><br><span class="line">List&lt;String&gt; d = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">pageContext.setAttribute(<span class="string">"b"</span>, b);</span><br><span class="line">pageContext.setAttribute(<span class="string">"c"</span>, c);</span><br><span class="line">pageContext.setAttribute(<span class="string">"d"</span>, d);</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">empty a = $&#123;empty a&#125;&lt;br/&gt;</span><br><span class="line">empty b = $&#123;empty b&#125;&lt;br/&gt;</span><br><span class="line">empty c = $&#123;empty c&#125;&lt;br/&gt;</span><br><span class="line">empty d = $&#123;empty d&#125;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><img src="http://pww25zpix.bkt.clouddn.com/jsp/EL_02_01.png" alt></p><h3 id="3-EL内置对象"><a href="#3-EL内置对象" class="headerlink" title="3  EL内置对象"></a>3  EL内置对象</h3><p>EL有11个内置对象，除了前面的和4个域属性空间相关的内置对象之外，还有7个。</p><p>EL的内置对象中，除了pageContext之外，其他内置对象的类型均为<font color="#FF0000">java.util.Map</font>类型。</p><p>此处介绍常用的四个内置对象：</p><h4 id="3-1-pageContext"><a href="#3-1-pageContext" class="headerlink" title="3.1  pageContext"></a>3.1  pageContext</h4><p>​    是不是有点熟悉？没错，EL的pageContext和JSP的pageContext是同一个对象。可以获取到<strong>JSP</strong>的request、response、session、servletContext、servletConfig等对象，注意获取到的这些内置对象是JSP的，不是EL的，EL中没有这些内置对象。</p><blockquote><p><strong>如何在EL中使用pageContext获取到JSP的内置对象？</strong></p><p>例如，获取request内置对象——<code>${pageContext.request}</code> </p><p>其底层实际调用的方法为 <code>pageContext.getRequest()</code>，其他内置对象同理</p><p><strong>常用内置对象的方法？</strong></p><p><code>${pageContext.request.contextPath()}</code>，用来获取当前项目路径，一般用在JSP页面的路径中。</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; &lt;body&gt;</span><br><span class="line">&gt; &lt;!-- 可读性差 --&gt;</span><br><span class="line">&gt; &lt;form action="register"&gt;&lt;/form&gt;</span><br><span class="line">&gt; &lt;!-- 可读性好 --&gt;</span><br><span class="line">&gt; &lt;form action="$&#123;pageContext.request.contextPath&#125;/register"&gt;&lt;/form&gt;</span><br><span class="line">&gt; &lt;/body&gt;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><h4 id="3-2-param"><a href="#3-2-param" class="headerlink" title="3.2  param"></a>3.2  param</h4><p>​    <code>${param.parameter}</code>获取request域（请求）中的指定参数的值。</p><p>​    底层调用的是：<code>request.getparameter()</code></p><h4 id="3-3-paramValues"><a href="#3-3-paramValues" class="headerlink" title="3.3  paramValues"></a>3.3  paramValues</h4><p>​    <code>${paramValues.parameter[i]}</code> :获取request域（请求）中指定参数的所有值。</p><p>​    底层调用的是：<code>request.getparameterValues()</code></p><h4 id="3-4-initParam"><a href="#3-4-initParam" class="headerlink" title="3.4  initParam"></a>3.4  initParam</h4><p>​    获取初始化参数</p><p>​    底层调用的是<code>servletContext.getInitParameter()</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- index.jsp --&gt;</span><br><span class="line"></span><br><span class="line">&lt;%@ page language=<span class="string">"java"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span></span><br><span class="line">    pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/show.jsp"</span> &gt;</span><br><span class="line">姓名：&lt;input type=<span class="string">"text"</span> name=<span class="string">"uname"</span>/&gt;&lt;br/&gt;</span><br><span class="line">年龄：&lt;input type=<span class="string">"text"</span> name=<span class="string">"uage"</span>/&gt;&lt;br/&gt;</span><br><span class="line"></span><br><span class="line">爱好：&lt;input type=<span class="string">"checkbox"</span> name=<span class="string">"uhobby"</span> value=<span class="string">"sing"</span>/&gt;唱</span><br><span class="line">&lt;input type=<span class="string">"checkbox"</span> name=<span class="string">"uhobby"</span> value=<span class="string">"dancing"</span>/&gt;跳</span><br><span class="line">&lt;input type=<span class="string">"checkbox"</span> name=<span class="string">"uhobby"</span> value=<span class="string">"rap"</span>/&gt;RAP</span><br><span class="line">&lt;input type=<span class="string">"checkbox"</span> name=<span class="string">"uhobby"</span> value=<span class="string">"basketball"</span>/&gt;篮球&lt;br/&gt;</span><br><span class="line">&lt;input type=<span class="string">"submit"</span>value=<span class="string">"提交"</span>/&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- show.jsp --&gt;</span><br><span class="line"></span><br><span class="line">&lt;%@ page language=<span class="string">"java"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span></span><br><span class="line">    pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">姓名：$&#123;param.uname&#125;&lt;br/&gt;</span><br><span class="line">年龄：$&#123;param.uage&#125;&lt;br/&gt;</span><br><span class="line">爱好：$&#123;paramValues.uhobby[<span class="number">0</span>]&#125; &amp;nbsp;</span><br><span class="line">$&#123;paramValues.uhobby[<span class="number">1</span>]&#125;&amp;nbsp;</span><br><span class="line">$&#123;paramValues.uhobby[<span class="number">2</span>]&#125;&amp;nbsp;</span><br><span class="line">$&#123;paramValues.uhobby[<span class="number">3</span>]&#125;&lt;br/&gt;</span><br><span class="line">学校：$&#123;initParam.school&#125;&lt;br/&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee"</span> <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"</span> <span class="attr">version</span>=<span class="string">"4.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>02-EL<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-name</span>&gt;</span>school<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-value</span>&gt;</span>清华大学<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://pww25zpix.bkt.clouddn.com/jsp/EL_03_02.png" alt></p><p><img src="http://pww25zpix.bkt.clouddn.com/jsp/EL_03_01.png" alt></p><h3 id="4-EL自定义函数"><a href="#4-EL自定义函数" class="headerlink" title="4  EL自定义函数"></a>4  EL自定义函数</h3><p>​    EL函数只能处理四大域中的属性值及常量</p><p>​    步骤：定义函数——定义标签库——注册函数——使用函数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//ELFunctions.java</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.orbit.el;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ELFunctions</span> </span>&#123;</span><br><span class="line"><span class="comment">//小写转大写</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">LowertoUpper</span><span class="params">(String source)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> source.toUpperCase();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- myFt.tld --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">taglib</span> <span class="attr">xmlns</span>=<span class="string">"http://java.sun.com/xml/ns/j2ee"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">version</span>=<span class="string">"2.0"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 定义标签库信息 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tlib-version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">tlib-version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">short-name</span>&gt;</span>myFt<span class="tag">&lt;/<span class="name">short-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uri</span>&gt;</span>http://www.orbit.com/jsp/el/functions<span class="tag">&lt;/<span class="name">uri</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 注册函数 --&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">function</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>IsLowertoUpper<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">function-class</span>&gt;</span>com.orbit.el.ELFunctions<span class="tag">&lt;/<span class="name">function-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">function-signature</span>&gt;</span>java.lang.String LowertoUpper( java.lang.String )<span class="tag">&lt;/<span class="name">function-signature</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">function</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">taglib</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- index.jsp --&gt;</span><br><span class="line"></span><br><span class="line">&lt;%@ page pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span><br><span class="line">&lt;%@ taglib uri=<span class="string">"http://www.orbit.com/jsp/el/functions"</span> prefix=<span class="string">"myFt"</span>%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- 使用函数：处理常量 --&gt;</span><br><span class="line">$&#123;myFt:IsLowertoUpper(<span class="string">"no one can stop me!"</span>) &#125;</span><br><span class="line">    </span><br><span class="line">    &lt;!-- 使用函数：处理四大域中的属性 --&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">String name=<span class="string">"Selena"</span>;</span><br><span class="line">pageContext.setAttribute(<span class="string">"name"</span>, name);</span><br><span class="line">%&gt;</span><br><span class="line">$&#123;myFt:IsLowertoUpper(name) &#125;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><img src="http://pww25zpix.bkt.clouddn.com/jsp/EL_04_02.png" alt></p><h3 id="5-JSTL中的EL函数"><a href="#5-JSTL中的EL函数" class="headerlink" title="5  JSTL中的EL函数"></a>5  JSTL中的EL函数</h3><p>​    JSTL，JSP Standard Tag Library，JSP标准标签库，是Apache定义好的一套标准的标签库规范。</p><p>​    JSTL中，定义了一套关于字符串处理的函数标签库，这个函数标签库中包含16个处理字符串的函数。</p><p>​    在JSP页面中导入jstl.jar ，standard.jar，就可以直接使用。</p><p>​    <strong>导入jar包</strong></p><blockquote><p>jstl.jar下载地址： <a href="http://repo2.maven.org/maven2/javax/servlet/jstl/" target="_blank" rel="noopener">http://repo2.maven.org/maven2/javax/servlet/jstl/</a></p><p>standard.jar下载地址： <a href="http://repo2.maven.org/maven2/taglibs/standard/" target="_blank" rel="noopener">http://repo2.maven.org/maven2/taglibs/standard/</a></p></blockquote><p>​    <strong>查看目录</strong></p><p><img src="http://pww25zpix.bkt.clouddn.com/jsp/EL_05_01.png" alt></p><p>​    <strong>使用函数</strong></p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span><br><span class="line">&lt;%@ taglib uri=<span class="string">"http://java.sun.com/jsp/jstl/functions"</span> prefix=<span class="string">"fn"</span>%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">$&#123;fn:substring(<span class="string">"abcdefg"</span>,<span class="number">2</span>,<span class="number">5</span>) &#125;</span><br><span class="line">$&#123;fn:substringBefore(<span class="string">"abcdefg"</span>,<span class="string">"cd"</span>) &#125;</span><br><span class="line">$&#123;fn:substringAfter(<span class="string">"abcdefg"</span>,<span class="string">"cd"</span><span class="string">") &#125;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2019/08/26/JSP——EL表达式/1566973074125.png" alt="1566973074125"></p><h3 id="6-对于EL做出的总结"><a href="#6-对于EL做出的总结" class="headerlink" title="6  对于EL做出的总结"></a>6  对于EL做出的总结</h3><ul><li>EL不能出现在Java代码块、表达式块等JSP的动态代码部分</li><li>EL只能从四大域属性空间中获取数据（pageContext,request,session,application）</li><li>EL不会抛出空指针异常，若访问一个null对象的属性，则什么也不显示</li><li>EL不会抛出数组访问越界异常，若访问一个数组中不存在的元素，则什么也不显示</li><li>EL本身无法对字符串进行处理，要想进行处理，可以通过EL自定义函数和JSTL中的EL函数来处理。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;  EL表达式，Expression Language，可以获取JSP页面的数据&lt;/p&gt;
&lt;p&gt;  EL表达式的格式为  &lt;code&gt;${expression}&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;在JSP页面的任何静态部分均可使用该格式获取到指定值&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="JavaWeb" scheme="https://cometorbityh.github.io/categories/JavaWeb/"/>
    
    
      <category term="JavaWeb" scheme="https://cometorbityh.github.io/tags/JavaWeb/"/>
    
      <category term="JSP" scheme="https://cometorbityh.github.io/tags/JSP/"/>
    
  </entry>
  
  <entry>
    <title>解决hexo显示不出本地图片问题</title>
    <link href="https://cometorbityh.github.io/2019/08/26/%E8%A7%A3%E5%86%B3hexo%E6%98%BE%E7%A4%BA%E4%B8%8D%E5%87%BA%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87%E9%97%AE%E9%A2%98/"/>
    <id>https://cometorbityh.github.io/2019/08/26/解决hexo显示不出本地图片问题/</id>
    <published>2019-08-26T05:45:45.000Z</published>
    <updated>2019-08-27T15:26:08.966Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>昨天刚开通博客，很兴奋，今天写了一篇博客，发现博客中的图片一直加载不出来。于是网上找了很多方案，鼓捣了很久才弄出来，真是麻烦，不过好在弄完了。让我们看看如何解决本地图片加载不出来的问题。</p></blockquote><a id="more"></a><p><img src="/2019/08/26/解决hexo显示不出本地图片问题/1566798624172.png" alt="图片加载失败"></p><ol><li><p>首先把blog（hexo）目录下的_config.yml里的psot_asset_folder:设置为true</p></li><li><p>在blog（hexo）目录下执行:</p></li></ol><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-asset-<span class="built_in">image</span> --<span class="built_in">save</span></span><br></pre></td></tr></table></figure><ol start="3"><li>在blog（hexo）目录下Git Bash Here，运行hexo n “博客名”来生成md博客时，会在_post目录下看到一个与博客同名的文件夹</li></ol><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> <span class="string">"博客名"</span></span><br></pre></td></tr></table></figure><ol start="4"><li><p>将想要上传的图片先保存在文件夹下，然后在博客中使用markdown的格式引入图片：</p><p><img src="/2019/08/26/解决hexo显示不出本地图片问题/%E5%9B%BE%E7%89%87%E5%90%8D.jpg" alt="你想要输入的替代文字"><br>ps：因为博客名和文件夹名字相同，所以不需要绝对路径，只要xxxx是文件夹的名字就可以了。</p></li><li><p>使用hexo g部署，进入public\2019\08\26\index.html文件中查看相关字段，可以发现html标签内的语句是img src = “2019/08/26/xxxx/图片名.jpg”而不是img src=”xxxx.图片名.jpg”，这就成功了</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;昨天刚开通博客，很兴奋，今天写了一篇博客，发现博客中的图片一直加载不出来。于是网上找了很多方案，鼓捣了很久才弄出来，真是麻烦，不过好在弄完了。让我们看看如何解决本地图片加载不出来的问题。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Github" scheme="https://cometorbityh.github.io/categories/Github/"/>
    
      <category term="hexo" scheme="https://cometorbityh.github.io/categories/Github/hexo/"/>
    
    
      <category term="hexo" scheme="https://cometorbityh.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Servlet</title>
    <link href="https://cometorbityh.github.io/2019/08/24/Servlet/"/>
    <id>https://cometorbityh.github.io/2019/08/24/Servlet/</id>
    <published>2019-08-24T11:40:33.000Z</published>
    <updated>2019-08-26T09:26:49.702Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Servlet是一个<strong>遵循Servlet开发的java类</strong>。由服务器调用的<strong>，</strong>运行在服务器端。</p><p>Servlet是一种独立于平台和协议的处于服务器端的Java应用程序，担当<strong>客户请求与服务器响应的中间层</strong></p></blockquote><a id="more"></a><h3 id="2-Servlet的作用："><a href="#2-Servlet的作用：" class="headerlink" title="2. Servlet的作用："></a>2. Servlet的作用：</h3><p>用来接收客户端的请求数据，然后调用底层service处理数据并生成结果，返回一个响应给浏览器。</p><p>利用他可以实现业务层和表现层的分离，同时又可以生成动态页面。</p><h3 id="3-Servlet执行业务的步骤"><a href="#3-Servlet执行业务的步骤" class="headerlink" title="3 . Servlet执行业务的步骤"></a>3 . Servlet执行业务的步骤</h3><p>浏览器http请求——》tomcat服务器——-》到达servlet—–》执行doget，dopost方法—-》返回数据<br>&lt;1&gt;客户端发送请求到服务器端<br>&lt;2&gt;服务器将请求信息发送至Servlet<br>&lt;3&gt;Servlet生成响应内容并将其传给服务器。<br>&lt;4&gt;服务器将响应返回给客户端。</p><h3 id="4-创建Servlet的三种方式"><a href="#4-创建Servlet的三种方式" class="headerlink" title="4. 创建Servlet的三种方式"></a>4. 创建Servlet的三种方式</h3><blockquote><ol><li>定义一个类实现javax.servlet.Servlet接口</li><li>定义一个类继承javax.servet.GenericServlet类</li><li>定义一个类继承javax.servlet.http.HttpServlet类   web应用我们自然基本上都是继承HttpServlet</li></ol></blockquote><h3 id="5-Servlet的生命周期（Servlet实例对象从创建到销毁的整个过程）"><a href="#5-Servlet的生命周期（Servlet实例对象从创建到销毁的整个过程）" class="headerlink" title="5. Servlet的生命周期（Servlet实例对象从创建到销毁的整个过程）"></a>5. Servlet的生命周期（Servlet实例对象从创建到销毁的整个过程）</h3><p>​        Servlet的生命周期由一套定义良好的生命周期规则来约束管理</p><p>​        其中定义了Servlet如何被加载实例化和初始化,处理客户端请求,以及何时结束服务</p><p>​        生命周期方法有:</p><p>​               void init(ServletConfig)；</p><p>​               void service(ServletRequest,ServletResponse)；</p><p>​               void destroy()；</p><p><img src="/2019/08/24/Servlet/../assets/clip_image001.png" alt="Serviet 生 命 周 期 示 意 图 "></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Servlet是一个&lt;strong&gt;遵循Servlet开发的java类&lt;/strong&gt;。由服务器调用的&lt;strong&gt;，&lt;/strong&gt;运行在服务器端。&lt;/p&gt;
&lt;p&gt;Servlet是一种独立于平台和协议的处于服务器端的Java应用程序，担当&lt;strong&gt;客户请求与服务器响应的中间层&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="JavaWeb" scheme="https://cometorbityh.github.io/categories/JavaWeb/"/>
    
    
      <category term="Servlet" scheme="https://cometorbityh.github.io/tags/Servlet/"/>
    
      <category term="JavaWeb" scheme="https://cometorbityh.github.io/tags/JavaWeb/"/>
    
  </entry>
  
</feed>
